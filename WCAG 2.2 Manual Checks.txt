
Overview
Index
Instructions
Test Information - To Complete
Manual Tests - To Complete
Suggested Steps
Summary of Results
Action Plan

Sheet 1: Index
Index
This workbook provides instructions and a testing template for conducting a full WCAG 2.2 test. 

There are 7 sheets including this index page. Links to the other sheets are below, starting at cell A2.

Important: The Testing Information and Manual Tests sheets must be completed and accurate before submitting this evidence.

You can quickly switch between sheets using the keyboard command CTRL + PageUp or PageDown. 

JAWS users can use the shortcut SHIFT + CTRL + S to open the "Move to Worksheet " dialog.InstructionsTesting Information - To CompleteManual Tests - To CompleteSuggested StepsSummary of ResultsAction Plan
Sheet 2: Instructions
Instructions
This worksheet gives instructions on how to fill in the testing record on the Manual Tests sheet. The instructions for setting up the template begin in cell A4.

The explanation of the criterion begins in cell A11, instructions on how to complete the tests begins in cell A18. 

An explanation of the dropdown menus begins in cell A25. There is one blank line between the sets of instructions. The worksheet ends at cell B29.Blank cell, tables start at cell A4Blank cell, tables start at cell A4Blank cell, tables start at cell A4Fields to complete before start of testsBlank cell, tables start at cell A4FieldNotesTest Information - B5In cell B5, please type in the product nameTest Information - B6In cell B6, please type in the URL of the productTest Information - B7In cell B7, please type in the completion date of testing.Test Information - B8In cell B8, please type in the name of the person conducting the testsTest Information - B9In cell B9, please type in the name of the product manager for this product.Manual Tests - D4:W4Complete screen titles as required (these are the screens agreed on as a representative of journey flow and spread of elements e.g. check boxes, radio buttons etc)Blank cell, data starts at cell A12Blank cell, data starts at cell A11Explanation of criterionBlank cell - information in this column resumes in cell B18.Only level A and AA tests will be covered on this testing templateBlank cell - information in this column resumes in cell B18.This document does not contain tests for every WCAG 2.2 success criterion. Some success criterion are at level AAA and are currently not a legal requirement. We have published guidance on these level AAA success criteria on the DWP Accessibility Manual. The relevant page on the manual is linked in cell A14, below.Blank cell - information in this column resumes in cell B18.WCAG AA and AAA - DWP Accessibility ManualThe criterion numbers 1.1.2 etc are links to the W3 website that gives details regarding what each criterion means. Blank cell - information in this column resumes in cell B18.In some instances, there are links on how to test the criterion. The link takes the user to a webpage for guidance on how to test and gives HTML examples.Blank cell - information in this column resumes in cell B18.Blank cell - information in this column resumes in cell B18.How to complete the testsBlank cell - information in this column resumes in cell B18.StepsExample1. Read and follow instructions for each test.For example, 1.1.1 Non-text Content2. Choose result from drop downFor example, "Pass" in cell J53. If there are any relevant comments, please write these in the Observation box under each test result cell.Note your observations if a "Pass" or reasons if a "Fail"4. Repeat steps 1-3 as required for all other tests.No exampleIf you want to always see column A, go to the View menu and freeze the first column. No exampleTo access the dropdown results with a keyboard, press Alt + down arrow key. You can then use the arrow keys to move to the relevant result and then press enter.No exampleExplanation - use of drop down resultsBlank cell, next table starts at cell A20Dropdown OptionExplanationPassScreen has passed Test/WCAG Criteria FailScreen has failed Test/WCAG CriteriaNot PresentContent related to the WCAG success criteria is not present. (for example, Audio/Video success criteria, where there's no audio or video present)Not TestedMark as not tested where testing was not carried out - there should be no instances of incomplete tests when submitting compliance evidence.
Sheet 3: Test Information - To Complete
Testing Information
Testing information can be filled out in the table starting at cell A4. Provide your responses to each item in column B, from row 5 to row 9.

This information must be completed before submitting to the Accessibility Standards and Strategy Team.Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Testing InformationBlank cell, table starts at cell A4Detail Required:Your Response:Product Name:URL TestedDate Tested:Tester Name:Product Manager:
Sheet 4: Manual Tests - To Complete
Manual Tests
This sheet can be used to record tests against the WCAG success criterion that are listed in column A. Explanations of the criterion and suggested steps to take are on the "Suggested Steps" sheet.

The test results can be recorded in the table starting at cell A4. There is a totals table starting at cell C116.Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Test RecordingBlank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8Blank cell, next table starts at cell A8WCAG Success CriterionGuidelinePrincipleScreen 1Screen 2Screen 3Screen 4Screen 5Screen 6Screen 7Screen 8Screen 9Screen 10Screen 11Screen 12Screen 13Screen 14Screen 15Screen 16Screen 17Screen 18Screen 19Screen 201.1.1 Non-text Content1.1 Text AlternativesPerceivable1.1.1 Observations 1.1 Text AlternativesPerceivable1.2.1 Audio-only and Video-only 
(Pre-recorded)1.2 Time-based MediaPerceivable1.2.1 Observations1.2 Time-based MediaPerceivable1.2.2 Captions (Pre-recorded)1.2 Time-based MediaPerceivable1.2.2 Observations1.2 Time-based MediaPerceivable1.2.3 Audio Description or Media Alternative (Pre-recorded)1.2 Time-based MediaPerceivable1.2.3 Observations1.2 Time-based MediaPerceivable1.2.4 Captions (Live)1.2 Time-based MediaPerceivable1.2.4 Observations1.2 Time-based MediaPerceivable1.2.5 Audio Description - precorded1.2 Time-based MediaPerceivable1.2.5 Observations1.2 Time-based MediaPerceivable1.3.1 Info and Relationships1.3 AdaptablePerceivable1.3.1 Observations1.3 AdaptablePerceivable1.3.2 Meaningful Sequence1.3 AdaptablePerceivable1.3.2 Observations1.3 AdaptablePerceivable1.3.3 Sensory Characteristics1.3 AdaptablePerceivable1.3.3 Observations1.3 AdaptablePerceivable1.3.4 Orientation1.3 AdaptablePerceivable1.3.4 Observations1.3 AdaptablePerceivable1.3.5 Identify Input Purpose1.3 AdaptablePerceivable1.3.5 Observations1.3 AdaptablePerceivable1.4.1 Use of Colour1.4 DistinguishablePerceivable1.4.1 Observations1.4 DistinguishablePerceivable1.4.2 Audio Control1.4 DistinguishablePerceivable1.4.2 Observations1.4 DistinguishablePerceivable1.4.3 Contrast (Minimum)1.4 DistinguishablePerceivable1.4.3 Observations1.4 DistinguishablePerceivable1.4.4 Resize text1.4 DistinguishablePerceivable1.4.4 Observations1.4 DistinguishablePerceivable1.4.5 Images of Text1.4 DistinguishablePerceivable1.4.5 Observations1.4 DistinguishablePerceivable1.4.10 Reflow1.4 DistinguishablePerceivable1.4.10 Observations1.4 DistinguishablePerceivable1.4.11 Non-text Contrast1.4 DistinguishablePerceivable1.4.11 Observations1.4 DistinguishablePerceivable1.4.12 Text Spacing1.4 DistinguishablePerceivable1.4.12 Observations1.4 DistinguishablePerceivable1.4.13 Content on Hover or Focus1.4 DistinguishablePerceivable1.4.13 Observations1.4 DistinguishablePerceivable2.1.1 Keyboard2.1 Keyboard AccessibleOperable2.1.1 Observations2.1 Keyboard AccessibleOperable2.1.2 No Keyboard Trap2.1 Keyboard AccessibleOperable2.1.2 Observations2.1 Keyboard AccessibleOperable2.1.4 Character Key Shortcuts2.1 Keyboard AccessibleOperable2.1.4 Observations2.1 Keyboard AccessibleOperable2.2.1 Timing Adjustable2.2 Enough TimeOperable2.2.1 Observations2.2 Enough TimeOperable2.2.2 Pause, Stop, Hide2.2 Enough TimeOperable2.2.2 Observations2.2 Enough TimeOperable2.3.1 Three Flashes or Below Threshold2.3 SeizuresOperable2.3.1 Observations2.3 SeizuresOperable2.4.1 Bypass blocks2.4 NavigableOperable2.4.1 Observations2.4 NavigableOperable2.4.2 Page Titled2.4 NavigableOperable2.4.2 Observations2.4 NavigableOperable2.4.3 Focus Order2.4 NavigableOperable2.4.3 Observations2.4 NavigableOperable2.4.4 Link Purpose (In Context)2.4 NavigableOperable2.4.4 Observations2.4 NavigableOperable2.4.5 Multiple Ways2.4 NavigableOperable2.4.5 Observations2.4 NavigableOperable2.4.6 Headings and Labels2.4 NavigableOperable2.4.6 Observations2.4 NavigableOperable2.4.7 Focus Visible2.4 NavigableOperable2.4.7 Observations2.4 NavigableOperable2.4.11 Focus Not Obscured (Minimum)2.4 NavigableOperable2.4.11 Observations2.4 NavigableOperable2.5.1 Pointer Gestures2.5 Input ModalitiesOperable2.5.1 Observations2.5 Input ModalitiesOperable2.5.2 Pointer Cancellation2.5 Input ModalitiesOperable2.5.2 Observations2.5 Input ModalitiesOperable2.5.3 Label in Name2.5 Input ModalitiesOperable2.5.3 Observations2.5 Input ModalitiesOperable2.5.4 Motion Actuation2.5 Input ModalitiesOperable2.5.4 Observations2.5 Input ModalitiesOperable2.5.7 Dragging Movements2.5 Input ModalitiesOperable2.5.7 Observations2.5 Input ModalitiesOperable2.5.8 Target Size (Minimum)2.5 Input ModalitiesOperable2.5.8 Observations2.5 Input ModalitiesOperable3.1.1 Language of Page3.1 ReadableUnderstandable3.1.1 Observations3.1 ReadableUnderstandable3.1.2 Language of Parts3.1 ReadableUnderstandable3.1.2 Observations3.1 ReadableUnderstandable3.2.1 On Focus3.2 PredictableUnderstandable3.2.1 Observations3.2 PredictableUnderstandable3.2.2 On Input3.2 PredictableUnderstandable3.2.3 Observations3.2 PredictableUnderstandable3.2.3 Consistent Navigation3.2 PredictableUnderstandable3.2.3 Observations3.2 PredictableUnderstandable3.2.4 Consistent Identification3.2 PredictableUnderstandable3.2.4 Observations3.2 PredictableUnderstandable3.2.6 Consistent Help3.2 PredictableUnderstandable3.2.6 Observations3.2 PredictableUnderstandable3.3.1 Error Identification3.3 Input AssistanceUnderstandable3.3.1 Observations3.3 Input AssistanceUnderstandable3.3.2 Labels or Instructions3.3 Input AssistanceUnderstandable3.3.2 Observations3.3 Input AssistanceUnderstandable3.3.3 Error Suggestion3.3 Input AssistanceUnderstandable3.3.3 Observations3.3 Input AssistanceUnderstandable3.3.4 Error Prevention (Legal, Financial, Data)3.3 Input AssistanceUnderstandable3.3.4 Observations3.3 Input AssistanceUnderstandable3.3.7 Redundant Entry3.3 Input AssistanceUnderstandable3.3.7 Observations3.3 Input AssistanceUnderstandable3.3.8 Accessible Authentication3.3 Input AssistanceUnderstandable3.3.8 Observations3.3 Input AssistanceUnderstandable4.1.2 Name, Role, Value4.1 CompatibleRobust4.1.2 Observations4.1 CompatibleRobust4.1.3 Status Messages4.1 CompatibleRobust4.1.3 Observations4.1 CompatibleRobustBlank cell, totals table starts at cell C116Blank cell, totals table starts at cell C116TotalsScreen 1Screen 2Screen 3Screen 4Screen 5Screen 6Screen 7Screen 8Screen 9Screen 10Screen 11Screen 12Screen 13Screen 14Screen 15Screen 16Screen 17Screen 18Screen 19Screen 20Blank cell, totals table starts at cell C116Blank cell, totals table starts at cell C116Total Passes00000000000000000000Blank cell, totals table starts at cell C116Blank cell, totals table starts at cell C116Total Fails00000000000000000000Blank cell, totals table starts at cell C116Blank cell, totals table starts at cell C116Total Not Present00000000000000000000Blank cell, totals table starts at cell C116Blank cell, totals table starts at cell C116Total Not Tested00000000000000000000Blank cell, totals table starts at cell C116Blank cell, totals table starts at cell C116Total00000000000000000000
Sheet 5: Suggested Steps
Suggested Steps
This sheet provides some help information about each of the WCAG success criteria, as well as some suggested steps to take to test. 

The information is in a table that starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Help InformationBlank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4WCAG 2.2 Success CriterionSuccess Criterion documentation linkHelp with this criterionSuggested Steps to Take1.1.1 Non-text Content

All non-text content that is presented to the user has a text alternative that serves the equivalent purpose. (Exceptions truncated - see the WCAG documentation for the full wording).1.1.1 Non-text Content | WCAG 2.2How To Test Images | DWP Accessibility Manual1. Check if there are images on the web page or in the document.

2. Check if those images are decorative or not ("decorative" means the image isn't conveying any information, it's just there to look nice).

3. For any non-decorative images, check that descriptive alt text is available. You can do this by:
a. Testing with a screen-reader
b. Checking the 'alt text' panel in a document
c. Inspecting the code of the web page. Non-decorative <img> elements should have an alt attribute that is descriptive.
d. Using automated testing tools, such as WAVE, to check for alt text.1.2.1 Audio-only and Video-only (Pre-recorded)

For pre-recorded audio-only and pre-recorded video-only media, the following are true, except when the audio or video is a media alternative for text and is clearly labelled as such:

Pre-recorded Audio-only: An alternative for time-based media is provided that presents equivalent information for pre-recorded audio-only content.

Pre-recorded Video-only: Either an alternative for time-based media or an audio track is provided that presents equivalent information for pre-recorded video-only content. 1.2.1 Audio-only and Video-only | WCAG 2.2Transcripts | Web Accessibility Initiative (WAI) | W3C1. For video-only content, watch the video with the associated transcript (the text alternative) open.

2. Check that the transcript includes the same information presented in the video, including identifying different people in the video and any actions they carry out.

3. If the video-only content doesn't have a transcript, it should have an audio description. Do the same check from step 2 for the audio description.

4. For audio-only content, listen to the audio with the associated transcript (the text alternative) open.

5.Check that the transcript matches any speech in the content, as well as any other audio information.1.2.2 Captions (Pre-recorded)

Captions are provided for all prerecorded audio content in synchronized media, except when the media is a media alternative for text and is clearly labeled as such.1.2.2 Captions (Pre-recorded) | WCAG 2.2Captions/Subtitles | Web Accessibility Initiative (WAI) | W3C1. Watch the video content with captions turned on (the video may have "open", or always visible captions, which means you don't need to turn them on, they'll show automatically).

2. Check that captions are visible for all speech and important sounds.1.2.3 Audio Description or Media Alternative (Pre-recorded)

An alternative for time-based media or audio description of the prerecorded video content is provided for synchronized media, except when the media is a media alternative for text and is clearly labeled as such1.2.3 Audio Description or Media Alternative (Pre-recorded) | WCAG 2.2Description of Visual Information | Web Accessibility Initiative (WAI) | W3CThis criterion allows for either an audio description or a text-alternative (which could be completely separate to the video, such as written instructions that accompany a training video).

Success criterion 1.2.5 Audio Description is stricter and requires an audio description. Seeing as 1.2.5 Audio Description is a level AA criterion, and we have a legal requirement to meet level AA, you should focus on meeting 1.2.5 Audio Description.1.2.4 Captions (Live)

Captions are provided for all live audio content in synchronized media.1.2.4 Captions (Live) | WCAG 2.2Captions/Subtitles | Web Accessibility Initiative (WAI) | W3C1. Before a live video presentation commences, check that there's a procedure in place for delivering captions.

2. When the live video is being presented, make sure the captions are displaying correctly.1.2.5 Audio Description (Prerecorded)

Audio description is provided for all prerecorded video content in synchronized media.1.2.5 Audio Description (Prerecorded) | WCAG 2.2Description of Visual Information | Web Accessibility Initiative (WAI) | W3C1. Check that there's a way to select or activate an audio description for the video content.

2. Check that the audio description works, and sufficiently describes any visual content.

Note, audio description should include actions, characters, scene changes, and on-screen text that is important but is not described or spoken in the main soundtrack. The audio description must match the information that is presented in the video content. 1.3.1 Info and Relationships

Information, structure, and relationships conveyed through presentation can be programmatically determined or are available in text.1.3.1 Info and Relationships | WCAG 2.2Developing for Web Accessibility - Tips for Getting Started | Web Accessibility Initiative (WAI) | W3C1. Using a screen-reader, read the whole of the page or document from top to bottom and check that content and content types are announced correctly.

2. If you're testing a web page, tab through interactive elements and check how they are announced. Check that you can navigate around different bits of the page structure, such as page landmarks, headings, buttons, links, lists, tables, and form fields (note that different screen-reader software will have different ways that this step can be achieved).

3. If you're testing a document, carry out the step 2, but note that documents may not have interactive elements and you may not be able to tab through some documents.

4. Check that all visual information about the structure of content and the relationships between distinct parts is conveyed to the screen-reader. For example, does everything that looks like a heading, or list, or table, get announced as a heading, list and table, respectively.1.3.2 Meaningful Sequence

When the sequence in which content is presented affects its meaning, a correct reading sequence can be programmatically determined.1.3.2 Meaningful Sequence | WCAG 2.2Developing for Web Accessibility - Tips for Getting Started | Web Accessibility Initiative (WAI) | W3C1. Starting at the top of the web page or document, read all content from start to finish with a screen-reader.

2. Check that the order in which content was announced matches the visual presentation.1.3.3 Sensory Characteristics

Instructions provided for understanding and operating content do not rely solely on sensory characteristics of components such as shape, color, size, visual location, orientation, or sound.1.3.3 Sensory Characteristics | WCAG 2.2Instructions for understanding and operating content must not rely only on sensory characteristics such as shape, colour, size, visual location, orientation or sound and that alternatives are available.1. Check the content for any instructions that refer to parts of the screen.

2. Check that those parts of the screen the screen are referred to in a way that doesn't rely on someone be able to identify the shape, colour, size, visual location, orientation, or sound of that part of the screen.1.3.4 Orientation

Content does not restrict its view and operation to a single display orientation, such as portrait or landscape, unless a specific display orientation is essential.1.3.4 Orientation | WCAG 2.2How To Test Responsive Design | DWP Accessibility ManualTesting orientation requires a device that can be set to a particular orientation. Most people will be familiar with a smartphone or tablet that can be turned on its side to rotate content between portrait and landscape mode. This behaviour can be emulated in some browsers by:

1. Opening DevTools in Chrome, Firefox, Edge web browsers or Responsive Design Mode in Safari web browser.

2. Using device emulation, change the device to a mobile device (such as an iPhone or iPad) and switch the orientation.

3. Check that all content adjusts correctly with the change in orientation, so that you can read content in either portrait or landscape.1.3.5 Identify Input Purpose

The purpose of each input field collecting information about the user can be programmatically determined when:

•The input field serves a purpose identified in the Input Purposes for user interface components section; and
•The content is implemented using technologies with support for identifying the expected meaning for form input data.1.3.5 Identify Input Purpose | WCAG 2.2WCAG section 7: Input Purposes for User Interface ComponentsYou can check if autocomplete dropdowns are present on form fields. Note that some departmental devices have restrictions in place for web browsers and auto-fill.

Automated tools are also fairly good at picking up missing autocomplete attributes, so you can:

1. Scan the page using automated accessibility testing tools, such as ArcToolkit, WAVE or Axe Devtools.

2. Check if any errors or warnings related to missing autocomplete attributes are present.1.4.1 Use of Colour

Color is not used as the only visual means of conveying information, indicating an action, prompting a response, or distinguishing a visual element.1.4.1 Use of Colour | WCAG 2.2How To Test Colour Contrast | DWP Accessibility Manual1. Check where colour is used to convey information, such as the status of bits of content, distinct parts of a chart or graph, whether a bit of text is a link, or whether fields on a form are required.

2. Check that the same information is available in text.

3. For charts and other images, check that all information conveyed through colour is also conveyed using either text or a pattern (that doesn't require colour perception).1.4.2 Audio Control

If any audio on a Web page plays automatically for more than 3 seconds, either a mechanism is available to pause or stop the audio, or a mechanism is available to control audio volume independently from the overall system volume level.1.4.2 Audio Control | WCAG 2.2Designing for Web Accessibility - Tips for Getting Started | Web Accessibility Initiative (WAI) | W3C1. Check if the web page plays sound automatically for more than three seconds.

2. If so, check that there are controls to stop the sound, or to change the volume of the sound independently from the system volume.1.4.3 Contrast (Minimum)

The visual presentation of text and images of text has a contrast ratio of at least 4.5:1, except for the following:

Large Text
Large-scale text and images of large-scale text have a contrast ratio of at least 3:1;

Incidental
Text or images of text that are part of an inactive user interface component, that are pure decoration, that are not visible to anyone, or that are part of a picture that contains significant other visual content, have no contrast requirement.

Logotypes
Text that is part of a logo or brand name has no contrast requirement.1.4.3 Contrast (Minimum) | WCAG 2.2How To Test Colour Contrast | DWP Accessibility Manual1. Run an automated tool, such as WAVE Web Accessibility Evaluation Tool, to run automated checks on colour contrast. Note that automated tools can't pick up all colour contrast issues, however, they'll normally say where they haven't been able to determine what the contrast is.

2. Manually, use a colour contrast checker, such as WebAIM's contrast checker, to check specific bits of text. This is both easier and more accurate if you know the colour reference (such as the hex code, for example, #1B1C1D) of both the text and the background.1.4.4 Resize text

Except for captions and images of text, text can be resized without assistive technology up to 200 percent without loss of content or functionality.1.4.4 Resize text | WCAG 2.2How To Test Responsive Design | DWP Accessibility Manual1. Without any screen magnification software running, open the webpage and use the browser zoom function to increase the zoom to 200%.

2. To increase zoom (magnification), on Windows: Press Ctrl and +, on macOS Press Command and +

3. Check that all text on the page is readable (i.e., not clipped off the page) and no functionality has stopped working.1.4.5 Images of Text

If the technologies being used can achieve the visual presentation, text is used to convey information rather than images of text except for the following:

Customizable
The image of text can be visually customized to the user's requirements;

Essential
A particular presentation of text is essential to the information being conveyed.1.4.5 Images of Text | WCAG 2.2How To Test Images | DWP Accessibility Manual1. Find all images on the page (you can use automated tools, such as the 'web developer' browser extension, to list all images).

2. Check that none of the images are just images of text, there are multiple ways to do this:

a.I f possible, you can visually check the content for images of text - they can often be easy to spot.

b. For web content, you can inspect the code, using devTools in Chrome, Firefox or Microsoft Edge or Developer Tools in Safari. You can check for image html elements (<img> tags).

c. You can also zoom in to content and check that all text scales up correctly.1.4.10 Reflow

Content can be presented without loss of information or functionality, and without requiring scrolling in two dimensions for:

•Vertical scrolling content at a width equivalent to 320 CSS pixels;
•Horizontal scrolling content at a height equivalent to 256 CSS pixels.

Except for parts of the content which require two-dimensional layout for usage or meaning.1.4.10 Reflow | WCAG 2.2How To Test Responsive Design | DWP Accessibility ManualYou can test using real devices at the sizes specified, although many modern mobile devices are now too large to test down to such sizes. Fortunately, it's possible to test this through most web browsers. You can use the following steps:

1. Opening DevTools in Chrome, Firefox, Edge web browsers or Responsive Design Mode in Safari web browser.

2. Using device emulation, change the device to a mobile device that has the appropriate size.

3. Note that some automated tools can set up the page for you. For example, ArcToolkit has a 'Check reflow' tool that simplifies this process.

4. Check that all content adjusts correctly with the new screen size, and hasn't resulted in scroll bars in two directions (i.e., both vertically and horizontally).1.4.11 Non-text Contrast

The visual presentation of the following have a contrast ratio of at least 3:1 against adjacent color(s):

User Interface Components
Visual information required to identify user interface components and states, except for inactive components or where the appearance of the component is determined by the user agent and not modified by the author;

Graphical Objects
Parts of graphics required to understand the content, except when a particular presentation of graphics is essential to the information being conveyed.1.4.11 Non-text Contrast | WCAG 2.2How To Test Colour Contrast | DWP Accessibility ManualAutomated tools may help to pick up some non-text colour contrast issues, but the best way to test this is to manually check colour contrast of all interactive controls and graphical objects. You should:

1. Check for any visual (non-text) components or parts of components that show that there's a control on the page.

2. After the page has loaded, test the contrast ratio of the component against the adjacent colours.

3. Test the component again in each state it can be in (for example, in focus, on hover, checked etc.)1.4.12 Text Spacing

In content implemented using markup languages that support the following text style properties, no loss of content or functionality occurs by setting all of the following and by changing no other style property:

•Line height (line spacing) to at least 1.5 times the font size;
•Spacing following paragraphs to at least 2 times the font size;
•Letter spacing (tracking) to at least 0.12 times the font size;
•Word spacing to at least 0.16 times the font size.

Exception: Human languages and scripts that do not make use of one or more of these text style properties in written text can conform using only the properties that exist for that combination of language and script.1.4.12 Text Spacing | WCAG 2.2A common misconception here is that the website being tested must provide controls to let the user change text spacing. That's not the case. The requirement is that if the user changes text spacing on their own (perhaps using a browser plugin), then no functionality or content is lost on the website. I.e., the website can handle changes to text spacing.1. Make each of the following adjustments:
a. Change line height to 1.5 times the font size
b. Change the spacing that follows paragraphs to at least 2 times the font size
c. Change letter spacing to at least 0.12 times the font size

2. Change word spacing to at least 0.16 times the font size

3. Then, check that no text is clipped or flows off the page, and,

4. No functionality on the site has stopped working.
The instructions in step 1 are quite technical, but you can follow them more easily using automated tools. Browser extensions such as ARC Toolkit have functions that set up the page automatically to check this test. Text spacing bookmarklets are also available, that work in a similar way.1.4.13 Content on Hover or Focus

Where receiving and then removing pointer hover or keyboard focus triggers additional content to become visible and then hidden, the following are true:

Dismissible
A mechanism is available to dismiss the additional content without moving pointer hover or keyboard focus, unless the additional content communicates an input error or does not obscure or replace other content;
Hoverable
If pointer hover can trigger the additional content, then the pointer can be moved over the additional content without the additional content disappearing;
Persistent
The additional content remains visible until the hover or focus trigger is removed, the user dismisses it, or its information is no longer valid.
Exception: The visual presentation of the additional content is controlled by the user agent and is not modified by the author.1.4.13 Content on Hover or Focus | WCAG 2.2Additional content here means content that might appear and disappear, such as:

• Custom tooltips
• Sub-menus
• Non-modal popups (modal dialogs are out of scope for this criterion).

There is an exception if the visual presentation of the additional content is controlled by the user agent and is not modified by the author (for example, a browser tooltip).1. Find the additional content on the page.

2. Check if the additional content can be dismissed without moving pointer hover or keyboard focus.

3. Check that you can move the pointer over the additional content.

4. Check that the additional content remains visible until you tab away or move pointer hover away.2.1.1 Keyboard

All functionality of the content is operable through a keyboard interface without requiring specific timings for individual keystrokes, except where the underlying function requires input that depends on the path of the user's movement and not just the endpoints.2.1.1 Keyboard | WCAG 2.2How To Test Keyboard Accessibility | DWP Accessibility Manual1. Go to the top of the page and confirm the user can tab through content from start to finish.

2. Confirm that the user can access and activate all elements on the page using a keyboard, for example: 
• Checkboxes
• Edit boxes
• Pop up calendars
• Radio buttons
• Buttons
• Links2.1.2 No Keyboard Trap

If keyboard focus can be moved to a component of the page using a keyboard interface, then focus can be moved away from that component using only a keyboard interface, and, if it requires more than unmodified arrow or tab keys or other standard exit methods, the user is advised of the method for moving focus away.2.1.2 No Keyboard Trap | WCAG 2.2How To Test Keyboard Accessibility | DWP Accessibility ManualTab through content from start to finish. If focus appears trapped in a section of the content at any point, check that information is available on how to leave that section and "un-trap" focus.2.1.4 Character Key Shortcuts

If a keyboard shortcut is implemented in content using only letter (including upper- and lower-case letters), punctuation, number, or symbol characters, then at least one of the following is true:

Turn off
A mechanism is available to turn the shortcut off;
Remap
A mechanism is available to remap the shortcut to include one or more non-printable keyboard keys (e.g., Ctrl, Alt);
Active only on focus
The keyboard shortcut for a user interface component is only active when that component has focus.2.1.4 Character Key Shortcuts | WCAG 2.2Any keyboard shortcuts on a web page should use modifier keys (like ALT or CTRL) rather than just single characters. If there are keyboard shortcuts that consist of just single characters (like the "s" key to active a search function), there must be some way to change the shortcut to a different key, or switch the shortcut off entirely.1. With no elements in focus, press all printing characters (i.e., all number, letter, sign and punctuation keys). 

2. Hold the SHIFT key and press the same keys again.

3. Check that no functionality has been triggered.

4. If functionality has been triggered by a character key, check if there's a way to modify or turn off the shortcut.

5. Confirm that you can reverse this action (i.e. turn the shortcut back on, revert to original settings) through the same process. 2.2.1 Timing Adjustable

For each time limit that is set by the content, at least one of the following is true:

Turn off
The user is allowed to turn off the time limit before encountering it; or
Adjust
The user is allowed to adjust the time limit before encountering it over a wide range that is at least ten times the length of the default setting; or
Extend
The user is warned before time expires and given at least 20 seconds to extend the time limit with a simple action (for example, "press the space bar"), and the user is allowed to extend the time limit at least ten times; or
Real-time Exception
The time limit is a required part of a real-time event (for example, an auction), and no alternative to the time limit is possible; or
Essential Exception
The time limit is essential and extending it would invalidate the activity; or
20 Hour Exception
The time limit is longer than 20 hours.2.2.1 Timing Adjustable | WCAG 2.2You need to give users enough time to do what they need to do, either by providing ways to change time limits, or to deactivate them completely. There are exceptions for when the purpose of the web page breaks down without a time limit, or if the time limit is really long. 1. Find out if there are any time limits on the content.

2. Does the content and its time limit fall under a real-time, essential, or 20-hour exception?

3. Check if there is a way to turn off the time limit.

4. If not, let the time limit elapse and check if there was a way to adjust or extend the time limit. 2.2.2 Pause, Stop, Hide

For moving, blinking, scrolling, or auto-updating information, all of the following are true:

Moving, blinking, scrolling
For any moving, blinking or scrolling information that (1) starts automatically, (2) lasts more than five seconds, and (3) is presented in parallel with other content, there is a mechanism for the user to pause, stop, or hide it unless the movement, blinking, or scrolling is part of an activity where it is essential; and

Auto-updating
For any auto-updating information that (1) starts automatically and (2) is presented in parallel with other content, there is a mechanism for the user to pause, stop, or hide it or to control the frequency of the update unless the auto-updating is part of an activity where it is essential.2.2.2 Pause, Stop, Hide | WCAG 2.2Designing for Web Accessibility - Tips for Getting Started | Web Accessibility Initiative (WAI) | W3C1. Check the page for any moving, scrolling, blinking, or auto-updating content.

2. For moving, scrolling, blinking content that starts automatically and lasts longer than five seconds, check that there's a way to pause, stop or hide the content.

3. For auto-updating content that starts automatically, check that there's a way to pause, stop or hide the content, or that there's a way to control how often it updates.2.3.1 Three Flashes or Below Threshold

Web pages do not contain anything that flashes more than three times in any one second period, or the flash is below the general flash and red flash thresholds.2.3.1 Three Flashes or Below Threshold | WCAG 2.2Audio Content and Video Content | Web Accessibility Initiative (WAI) | W3C1. Confirm that the page does not have content that flashes more than three times per second. 

2. Confirm that where there is content that flashes more than three times in any one second period, then the flash is below the general flash and red flash thresholds.

If you think your content might fail this criterion, in general, it's better to try and change or omit that content. If you do have to test content, there are some video analysis tools available, such as the Photosensitive Epilepsy Analysis Tool (PEAT).2.4.1 Bypass blocks

A mechanism is available to bypass blocks of content that are repeated on multiple Web pages.2.4.1 Bypass Blocks | WCAG 2.2How To Test Keyboard Accessibility | DWP Accessibility Manual1. Identify any repeated blocks of content.

2. If it's on a web page, is that content contained within a landmark (that isn't the main landmark)?

3. Is there a skip link to bypass the repeated content?

4. Does the skip link work?

5. Does the focus move to the main content section on the page?

6. If it's a document, does the document have correctly marked up headings?2.4.2 Page Titled

Web pages have titles that describe topic or purpose.2.4.2 Page Titled | WCAG 2.2How to Test Page Titles | DWP Accessibility ManualYou can test the page title several ways:
• Check the browser tab, by using your mouse to hover over the page title.
• Use a screen reader such as JAWS on Windows or Voiceover on macOS to read the title.
• Use the W3C validator (opens in a new tab) to check the code of the web page, this will show any errors.

Once you've confirmed there's a page title present, check the following:

1. Is the page title useful and descriptive enough?

2. Is it too long?

3. Does it describe the subject of the page?

4. Does it make sense out of context?2.4.3 Focus Order

If a Web page can be navigated sequentially and the navigation sequences affect meaning or operation, focusable components receive focus in an order that preserves meaning and operability.2.4.3 Focus Order | WCAG 2.2How To Test Keyboard Accessibility | DWP Accessibility Manual1. Determine the order of interactive elements in the content. You can typically do this by tabbing through elements.

2. Determine the logical order of interactive elements. What order would make sense?

3. Check that the order of the interactive elements in the content is the same as the logical order.2.4.4 Link Purpose (In Context)

The purpose of each link can be determined from the link text alone or from the link text together with its programmatically determined link context, except where the purpose of the link would be ambiguous to users in general. 2.4.4 Link Purpose (In Context) | WCAG 2.2How To Test Links and Buttons | DWP Accessibility Manual1. Navigate between all the links on a page and determine the visible text of the link. 

2. If the link text itself is not clear, check the sentence, paragraph or table-cell that the link is in to determine the purpose of the link. 

3. Use a screen reader to navigate the links to confirm if enough information conveyed in any hidden text to determine link information. 

4. Use a screen reader to list links to check naming is suitable.2.4.5 Multiple Ways

More than one way is available to locate a Web page within a set of Web pages except where the Web Page is the result of, or a step in, a process.2.4.5 Multiple Ways | WCAG 2.2Designing for Web Accessibility - Tips for Getting Started | Web Accessibility Initiative (WAI) | W3CYou can test this by ensuring there are multiple ways to get to a web page on a website. You should have more than one of the following features:

•Links to navigate to related web pages 
•Table of contents 
•A site map 
•A search function 
•A list of links to all other web pages on the site 
•Links to all of the pages on the site from the home page. 2.4.6 Headings and Labels

Headings and labels describe topic or purpose. 2.4.6 Headings and Labels | WCAG 2.2How To Test Headings and Labels | DWP Accessibility Manual1. Identify the purpose of any interactive components. An interactive component is typically anything that is a control, for example, a link, button, text input or checkbox.

2. Check that each label makes the component's purpose clear. E.g. A form asks the name of the user. It consists of two input fields to ask for the first and last name. The first field is labelled "First name", the second is labelled "Last name".

3. Check that any headings present on the page are clear and describe their section of content.2.4.7 Focus Visible

Any keyboard operable user interface has a mode of operation where the keyboard focus indicator is visible.2.4.7 Focus Visible | WCAG 2.2How To Test Keyboard Accessibility | DWP Accessibility Manual1. Identify the purpose of any interactive components. An interactive component is typically anything that is a control, for example, a link, button, text input or checkbox.

2. Check that each label makes the component's purpose clear. E.g. A form asks the name of the user. It consists of two input fields to ask for the first and last name. The first field is labelled "First name", the second is labelled "Last name".

3. Check that any headings present on the page are clear and describe their section of content.2.4.11 Focus Not Obscured (Minimum)

When a user interface component receives keyboard focus, the component is not entirely hidden due to author-created content.2.4.11 Focus Not Obscured (Minimum) | WCAG 2.2How To Test Keyboard Accessibility | DWP Accessibility Manual1. Use the keyboard to navigate through all interactive components on the page (this could mean using the TAB key, or the arrow keys in some contexts).

2. Check that each component is highlighted in some way when it has keyboard focus (i.e., as you tab through the page, you can see where you are). 

3. Repeat steps 1 and 2 with any additional content (such as menu overlays or popups) active.

4. Check that the additional content doesn't completely obscure the focus indicator at any point.

5. Repeat steps 1 to 4 tabbing backwards through the page (using Shift + Tab). Focus can sometimes be obscured by sticky elements at the top of the window. Reverse tabbing should help identify these scenarios.2.5.1 Pointer Gestures

All functionality that uses multipoint or path-based gestures for operation can be operated with a single pointer without a path-based gesture, unless a multipoint or path-based gesture is essential.2.5.1 Pointer Gestures | WCAG 2.2There must be another way to carry out gesture-based actions (like pinching to zoom on a touch screen, or swiping left and right with a mouse pointer). The alternative method should use just single pointer clicks, for example, by clicking a button.1. Check the page for any actions that require path-based gestures, such as pinching, swiping or drawing.

2. Check if there's another way to complete these actions. For example, there's a button to zoom in, as well as the pinch-to-zoom gesture.
2.5.2 Pointer Cancellation

For functionality that can be operated using a single pointer, at least one of the following is true:

No Down-Event
The down-event of the pointer is not used to execute any part of the function;
Abort or Undo
Completion of the function is on the up-event, and a mechanism is available to abort the function before completion or to undo the function after completion;
Up Reversal
The up-event reverses any outcome of the preceding down-event;
Essential
Completing the function on the down-event is essential.2.5.2 Pointer Cancellation | WCAG 2.2Unless it's essential that functionality happens on the down-event, nothing should happen when clicking a mouse but not releasing. This helps people make fewer mistakes.1. Check the page to find all clickable controls (such as buttons, links, checkboxes etc.).

2. Click the control but don't release the mouse button.

3. Move the pointer outside of the control, to another part of the page.

4. Release the mouse button.

5. Check that no action was triggered when the mouse button was released.

6. If any action was triggered, check that the action is reversible.2.5.3 Label in Name

For user interface components with labels that include text or images of text, the name contains the text that is presented visually.2.5.3 Label in Name | WCAG 2.2The visible text that labels an interactive element is also included in the accessible name, or it matches it exactly. 1. Check the page for any visible labels on components (these could be links, buttons, form controls, et cetera).

2. Check that the accessible name of the component contains the same text as the visible label.

3. Note that it's acceptable for the accessible name to include other text as well.2.5.4 Motion Actuation

Functionality that can be operated by device motion or user motion can also be operated by user interface components and responding to the motion can be disabled to prevent accidental actuation, except when:

Supported Interface
The motion is used to operate functionality through an accessibility supported interface;
Essential
The motion is essential for the function and doing so would invalidate the activity.2.5.4 Motion Actuation | WCAG 2.2Rotating, tilting or otherwise moving a device cannot be the only way to carry out an action. Any motion detection can be switched off.1. Check for any actions that require moving a device, such as tilting or panning images or "shake to undo" type actions.

2. Check that there's another way to carry out the same action, such as pressing a button.

3. Check that there's a way to switch off any motion detection.2.5.7 Dragging Movements

All functionality that uses a dragging movement for operation can be achieved by a single pointer without dragging, unless dragging is essential or the functionality is determined by the user agent and not modified by the author.2.5.7 Dragging Movements | WCAG 2.2Any action on a page that requires dragging a mouse or finger should be achievable by pressing buttons as well.1. Check if any actions on the web page require dragging movements. Common instances here include form controls with sliders or radial controls, or "kanban" style interfaces, like Trello or Microsoft Planner, where tasks and cards can be dropped from one part of the screen to another to change their status.

2. Check that any actions that require dragging movements can be achieved in an alternative way. This alternative must use just a single pointer. That means a mouse click or single or double taps (as long as it can be done with a single finger).2.5.8 Target Size (Minimum)

The size of the target for pointer inputs is at least 24 by 24 CSS pixels, except where:

•Spacing: Undersized targets (those less than 24 by 24 CSS pixels) are positioned so that if a 24 CSS pixel diameter circle is centered on the bounding box of each, the circles do not intersect another target or the circle for another undersized target;
•Equivalent: The function can be achieved through a different control on the same page that meets this criterion;
•Inline: The target is in a sentence or its size is otherwise constrained by the line-height of non-target text;
•User agent control: The size of the target is determined by the user agent and is not modified by the author;
•Essential: A particular presentation of the target is essential or is legally required for the information being conveyed.2.5.8 Target Size (Minimum) | WCAG 2.2Click or touch targets, such as links or buttons, need to be at least 24 by 24 pixels in size, unless the target is a link in a sentence. If your target is smaller than 24 by 24 pixels, then you need enough space around the target so that the target plus the space equals 24 by 24 pixels.1. Find all clickable targets on the page (these could be links, buttons, checkboxes and more).​

2. Check the size of the target. If the target size is 24 by 24 pixels or bigger, it passes.​

3. If the target is less than 24 by 24 pixels, but there's at least 24 pixels of space all around the target, it passes.​

4. If the target is less than 24 by 24 pixels, and there's less that 24 pixels of space around it, it fails (unless it's one of the exceptions).​3.1.1 Language of Page

The default human language of each Web page can be programmatically determined.3.1.1 Language of Page | WCAG 2.2Developing for Web Accessibility - Tips for Getting Started | Web Accessibility Initiative (WAI) | W3C1. Check the source code of the web page and find the <html> element at the start of the document.

2. Check if the <html> element has a valid lang attribute (for example, lang="en" or lang="cy", for English and Welsh, respectively).

3.You can also used automated tools, such as aXe Devtools, ARC Toolkit or W3C's HTML Validator.3.1.2 Language of Parts

The human language of each passage or phrase in the content can be programmatically determined except for proper names, technical terms, words of indeterminate language, and words or phrases that have become part of the vernacular of the immediately surrounding text.3.1.2 Language of Parts | WCAG 2.2Developing for Web Accessibility - Tips for Getting Started | Web Accessibility Initiative (WAI) | W3C1. Check what language the page is in.

2. Check for any content that's in a different language.

3. Check that the content that's in another language is marked up correctly with an appropriate lang attribute.3.2.1 On Focus

When any user interface component receives focus, it does not initiate a change of context.3.2.1 On Focus | WCAG 2.2How To Test Keyboard Accessibility | DWP Accessibility Manual1. Navigate through interactive elements on a page using the TAB or arrow keys.

2. Check that nothing unexpected happens when each element receives focus, such as a new page being loaded, or focus shifting to somewhere else on the page.3.2.2 On Input

Changing the setting of any user interface component does not automatically cause a change of context unless the user has been advised of the behavior before using the component.3.2.2 On Input | WCAG 2.2Much like 3.2.1 On Focus, nothing unexpected happens, such as a new page loading, a new tab opening, focus moving to somewhere else, or a form automatically submitting, when providing input to a page (this could be entering text into an edit box, choosing a radio button, or checking a checkbox, for example).1. Find all input controls on a page.

2. Activate or enter information into each input on the page.

3. Check that nothing unexpected happens when providing this input, such as a new page loading or a new tab opening.3.2.3 Consistent Navigation

Navigational mechanisms that are repeated on multiple Web pages within a set of Web pages occur in the same relative order each time they are repeated, unless a change is initiated by the user.3.2.3 Consistent Navigation | WCAG 2.2How To Test Links And Buttons | DWP Accessibility Manual1. Check where navigation is used across a set of web pages.

2. For each repeated navigation component, check that it's in the same place in the content on each page.

3. Check that any items in repeated navigation are also in the same order each time the navigation is used. 

Note: Users can initiate a change in the order by setting preferences so that the information is presented in way more useful to them.3.2.4 Consistent Identification

Components that have the same functionality within a set of Web pages are identified consistently.3.2.4 Consistent Identification | WCAG 2.2How To Test Links And Buttons | DWP Accessibility Manual1. Check if components carry out the same actions on multiple pages.

2. For any components that do the same thing, check that they are labelled the same, have the same accessible name and look the same.

For example, a search box is consistently labelled and in the same place in each page; 
or If icons or other non-text items have the same functionality, check that their text alternative are consistent.3.2.6 Consistent Help

If a Web page contains any of the following help mechanisms, and those mechanisms are repeated on multiple Web pages within a set of Web pages, they occur in the same order relative to other page content, unless a change is initiated by the user:

•Human contact details;
•Human contact mechanism;
•Self-help option;
•A fully automated contact mechanism.3.2.6 Consistent Help | WCAG 2.2If you offer help tools on multiple pages, such as contact details, forms, chatbots or other help information, those tools are in the same place in the content on each page.1. Check if a site has one of the following features:​ 
• Contact details (such as a telephone number or email address​), 
• a contact form, messaging system, or link to a social media channel,
• Frequently asked questions, or other support page​
• A chatbot​

2. Check if any of these features are presented on multiple pages (they often are)​.

3. Check that these features are presented in the same place in the content.3.3.1 Error Identification

If an input error is automatically detected, the item that is in error is identified and the error is described to the user in text. 3.1.1 Error Identification | WCAG 2.2Developing for Web Accessibility - Tips for Getting Started | Web Accessibility Initiative (WAI) | W3C1. Check if the page has input fields (such as text boxes, check boxes, radio buttons etc.).

2. Check that you can generate errors on the page by entering incorrect data into the input fields, or by not entering data into required fields.

3. When an error has been generated, check that the error is described in text.

4. Check that the user is alerted to the error. For gov.uk services, this is commonly achieved by using the "error summary" component from the GOV.UK Design System.3.3.2 Labels or Instructions

Labels or instructions are provided when content requires user input.3.3.2 Labels or Instructions | WCAG 2.2People need to know how to fill out a form or provide some input, so you must provide clear labels on input fields. Instructions should be provided on how to fill out fields when a specific format is required. 1. Find all input fields on a page (there could be different types of input fields, like edit boxes, date pickers, radio buttons, checkboxes, select boxes and more).

2. For each input, check that there's an associated label.

3. Check that the label makes it clear what input people should provide.

4. If there are unusual or specific ways that people need to provide input, these ways should be described in instructions.3.3.3 Error Suggestion

If an input error is automatically detected and suggestions for correction are known, then the suggestions are provided to the user, unless it would jeopardize the security or purpose of the content.3.3.3 Error Suggestion | WCAG 2.2People sometimes create errors when entering data. When this happens, you should provide guidance where possible to help them enter data correctly.1. Check if a page has a form or input fields on it.

2. Enter some data in one of the input fields in the wrong format, or with a value that's outside of the range of acceptable values.

3. Check if this generates an error message.

4. Check if the error message contains suggestions on how to correct the error.3.3.4 Error Prevention (Legal, Financial, Data)

For Web pages that cause legal commitments or financial transactions for the user to occur, that modify or delete user-controllable data in data storage systems, or that submit user test responses, at least one of the following is true:

Reversible
Submissions are reversible.
Checked
Data entered by the user is checked for input errors and the user is provided an opportunity to correct them.
Confirmed
A mechanism is available for reviewing, confirming, and correcting information before finalizing the submission.3.3.4 Error Prevention (Legal, Financial, Data) | WCAG 2.2People need a way to ensure they are providing the right information when entering data that might result in legal agreements or financial transactions. This means there must either be: 

• a way to undo the sending of that information, 

• a way for people to check all of the information they've provided and change it before sending, or,

• the data entered is checked for errors and there's a chance for people to correct those errors.1. Check if there's a form on the web page where people need to enter data that will result in legal agreements or financial transactions.

2. Enter data into the form and continue.

3. Check if there is any error handling. For example, if you enter data in the wrong format, check that the web page catches this and gives you an opportunity to correct the data.

4. If data is collected across multiple pages, check that you can return to previous pages to review and change data before submitting it. This is commonly achieved using the check answers pattern from the GDS Design System.3.3.7 Redundant Entry

Information previously entered by or provided to the user that is required to be entered again in the same process is either:
•auto-populated, or
•available for the user to select.
Except when:
•re-entering the information is essential,
•the information is required to ensure the security of the content, or
•previously entered information is no longer valid.3.3.7 Redundant Entry | WCAG 2.2Don't keep asking people for the same information over and over. If information that someone has provided previously will still be acceptable, it's either automatically added to a form, or can easily be selected, without having to type it in again.1. Check all the parts of the site where you need to provide some kind of input.​

2. Check if you have to provide the same information more than once.​

3. Where you have to enter information you've previously provided, check if:​
• There's a way to select the information, so that you don't have to type it again.​
• The information is already there, because it was auto-populated.​
• It's essential that the information is entered again, for security reasons or because the previous information is no longer correct.3.3.8 Accessible Authentication (Minimum)

A cognitive function test (such as remembering a password or solving a puzzle) is not required for any step in an authentication process unless that step provides at least one of the following:

Alternative
Another authentication method that does not rely on a cognitive function test.
Mechanism
A mechanism is available to assist the user in completing the cognitive function test.
Object Recognition
The cognitive function test is to recognize objects.
Personal Content
The cognitive function test is to identify non-text content the user provided to the Web site.3.3.8 Accessible Authentication (Minimum) | WCAG 2.2Remembering and then typing something, or typing a specific set of characters, can making logging in to a service really difficult for some people. 
You can help people login in by providing various kinds of support, such as: 
•providing an alternative login method (for example, email 'magic' links),
•allowing them to copy and paste into the password field, 
•ensuring they can use a password-manager,
•allowing them to authenticate by object recognition or identifying an image they uploaded previously.1. Check if the website requires authentication (logging in) at any point.​

2. When logging in, check if you're required to manually enter a security code from another device.​

3. Check if you can successfully copy and paste a password or passcode. Is there a different format between the copied text and the input field? (for example, "Enter the 3rd, 4th and 6th characters..")?​

4. Check if logging in requires you to do a maths problem, solve a puzzle, or transcribe some text.4.1.1 Parsing (Obsolete and Removed)

In content implemented using markup languages, elements have complete start and end tags, elements are nested according to their specifications, elements do not contain duplicate attributes, and any IDs are unique, except where the specifications allow these features.4.1.1 Parsing | WCAG 2.1This criterion was originally adopted to address problems that assistive technology had directly parsing HTML. Assistive technology no longer has any need to directly parse HTML. Consequently, these problems either no longer exist or are addressed by other criteria. This criterion no longer has utility and is removed.No steps are required here for conformance, but it's recommended to check if you have valid HTML or not. Checking for valid HTML can help you identify other conformance failures.

HTML can be validated using online validation tools, such as the W3C Validation Service. Completely local, command-line tools are also available should there be any concerns about using an online service to check code.4.1.2 Name, Role, Value

For all user interface components (including but not limited to: form elements, links and components generated by scripts), the name and role can be programmatically determined; states, properties, and values that can be set by the user can be programmatically set; and notification of changes to these items is available to user agents, including assistive technologies.4.1.2 Name, Role, Value | WCAG 2.2One of the best ways to test against this criterion is to use assistive software. For example, many screen-readers have keyboard commands that can bring up lists of all buttons, all links, all headings et cetera, on a page. Speech recognition software can often respond to commands like "click button" and will then number buttons on a page for you to choose. 
If elements are not marked up (coded) properly, these commands may not work as expected. It's difficult to provide a comprehensive set of steps to take, but the following steps are a good start:

1. Using a screen-reader, such as JAWS on Windows or VoiceOver on macOS, bring up the lists of buttons, links, lists, headings et cetera (different software might have different options) and check that each element on the page has been identified correctly. For example, everything that looks and behaves like a button should be identified in the "buttons" list.

2. Using speech recognition software, such as Dragon on Windows or Voice Control on macOS, try and select each interactive control on the page. For Dragon, you can use commands like "click button", "click link" or "click radio button". For Voice Control, you can use commands like "click <item name>" or "show numbers". 

3. Make sure that each interactive control is selectable, in a way that's expected. For example, when using Dragon, it would not be expected for a control that looks like a button to be highlighted when issuing the command "click link". 4.1.3 Status Messages

In content implemented using markup languages, status messages can be programmatically determined through role or properties such that they can be presented to the user by assistive technologies without receiving focus.4.1.3 Status Messages | WCAG 2.2Status messages on web pages, such as form errors and timeout warnings, need to work for assistive software users too.1. Check for any text or information that gets added to the page that lets people know about the results of an action, the state of the page (for example "loading") or about errors that have occurred.

2. Test the content with a screen-reader and check whether the newly added text or information is announced by the screen-reader, without moving keyboard focus to that message.
Sheet 6: Summary of Results
Summary of Results
This sheet takes the results from your testing and creates a summary of passes, fails, not applicable and not tested.

The table starts at cell A4. You can use the column filters to review specific sets of results.Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Summary of resultsBlank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4WCAG 2.2 A and AA Success CriteriaWCAG GuidelineConformance LevelPassFailNot PresentNot Tested1.1.1 Non-text ContentGuideline: 1.1 Text AlternativesA00001.2.1 Audio-only and Video-only (Pre-recorded)Guideline: 1.2 Time-based MediaA00001.2.2 Captions (Pre-recorded)Guideline: 1.2 Time-based MediaA00001.2.3 Audio Description or Media Alternative (Pre-recorded)Guideline: 1.2 Time-based MediaA00001.2.4 Captions (Live)Guideline: 1.2 Time-based MediaAA00001.2.5 Audio Description (Pre-recorded)Guideline: 1.2 Time-based MediaAA00001.3.1 Info and RelationshipsGuideline: 1.3 AdaptableA00001.3.2 Meaningful SequenceGuideline: 1.3 AdaptableA00001.3.3 Sensory CharacteristicsGuideline: 1.3 AdaptableA00001.3.4 OrientationGuideline: 1.3 AdaptableAA00001.3.5 Identify Input PurposeGuideline: 1.3 AdaptableAA00001.4.1 Use of ColourGuideline: 1.4 DistinguishableA00001.4.2 Audio ControlGuideline: 1.4 DistinguishableA00001.4.3 Contrast (Minimum)Guideline: 1.4 DistinguishableAA00001.4.4 Resize textGuideline: 1.4 DistinguishableAA00001.4.5 Images of TextGuideline: 1.4 DistinguishableAA00001.4.10 ReflowGuideline: 1.4 DistinguishableAA00001.4.11 Non-text ContrastGuideline: 1.4 DistinguishableAA00001.4.12 Text SpacingGuideline: 1.4 DistinguishableAA00001.4.13 Content on Hover or FocusGuideline: 1.4 DistinguishableAA00002.1.1 KeyboardGuideline: 2.1 Keyboard AccessibleA00002.1.2 No Keyboard TrapGuideline: 2.1 Keyboard AccessibleA00002.1.4 Character Key ShortcutsGuideline: 2.1 Keyboard AccessibleA00002.2.1 Timing AdjustableGuideline: 2.2 Enough TimeA00002.2.2 Pause, Stop, HideGuideline: 2.2 Enough TimeA00002.3.1 Three Flashes or Below ThresholdGuideline: 2.3 Seizures and physical reactionsA00002.4.1 Bypass BlocksGuideline: 2.4 NavigableA00002.4.2 Page TitledGuideline: 2.4 NavigableA00002.4.3 Focus OrderGuideline: 2.4 NavigableA00002.4.4 Link Purpose (In Context)Guideline: 2.4 NavigableA00002.4.5 Multiple WaysGuideline: 2.4 NavigableAA00002.4.6 Headings and LabelsGuideline: 2.4 NavigableAA00002.4.7 Focus VisibleGuideline: 2.4 NavigableAA00002.4.11 Focus Not Obscured (minimum)Guideline: 2.4 NavigableAA00002.5.1 Pointer GesturesGuideline: 2.5 Input ModalitiesA00002.5.2 Pointer CancellationGuideline: 2.5 Input ModalitiesA00002.5.3 Label in NameGuideline: 2.5 Input ModalitiesA00002.5.4 Motion ActuationGuideline: 2.5 Input ModalitiesA00002.5.7 Dragging MovementsGuideline: 2.5 Input ModalitiesAA00002.5.8 Target Size (minimum)Guideline: 2.5 Input ModalitiesAA00003.1.1 Language of PageGuideline: 3.1 ReadableA00003.1.2 Language of PartsGuideline: 3.1 ReadableAA00003.2.1 On FocusGuideline: 3.2 PredictableA00003.2.2 On InputGuideline: 3.2 PredictableA00003.2.3 Consistent NavigationGuideline: 3.2 PredictableAA00003.2.4 Consistent IdentificationGuideline: 3.2 PredictableAA00003.2.6 Consistent HelpGuideline: 3.2 PredictableA00003.3.1 Error IdentificationGuideline: 3.3 Input AssistanceA00003.3.2 Labels or InstructionsGuideline: 3.3 Input AssistanceA00003.3.3 Error SuggestionGuideline: 3.3 Input AssistanceAA00003.3.4 Error Prevention (Legal, Financial, Data)Guideline: 3.3 Input AssistanceAA00003.3.7 Redundant EntryGuideline: 3.3 Input AssistanceA00003.3.8 Accessible Authentication (Minimum)Guideline: 3.3 Input AssistanceAA00004.1.2 Name, Role, ValueGuideline: 4.1 CompatibleA00004.1.3 Status MessagesGuideline: 4.1 CompatibleA0000Total55Blank0000
Sheet 7: Action Plan
Action Plan
This sheet is for you to create an action plan to remediate the issues you identified in testing. 

The action plan begins in cell A4 and ends in cell E60. If you want to use the filters, you will first need to unprotect the sheet in the Review menu. 

The target date column is the last column for data entry.Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Action PlanBlank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4Blank cell, table starts at cell A4WCAG Success CriteriaGuidelineStatusCause of errorAction plan to remediateTarget date1.1.1 Non-text Content1.1 Text AlternativesAll Pass1.2.1 Audio-only and Video-only (Pre-recorded)1.2 Time-based MediaAll Pass1.2.2 Captions (Pre-recorded)1.2 Time-based MediaAll Pass1.2.3 Audio Description or Media Alternative (Pre-recorded)1.2 Time-based MediaAll Pass1.2.4 Captions (Live)1.2 Time-based MediaAll Pass1.2.5 Audio Description1.2 Time-based MediaAll Pass1.3.1 Info and Relationships1.3 AdaptableAll Pass1.3.2 Meaningful Sequence1.3 AdaptableAll Pass1.3.3 Sensory Characteristics1.3 AdaptableAll Pass1.3.4 Orientation1.3 AdaptableAll Pass1.3.5 Identify Input Purpose1.3 AdaptableAll Pass1.4.1 Use of Colour1.4 DistinguishableAll Pass1.4.2 Audio Control1.4 DistinguishableAll Pass1.4.3 Contrast (Minimum)1.4 DistinguishableAll Pass1.4.4 Resize text1.4 DistinguishableAll Pass1.4.5 Images of Text1.4 DistinguishableAll Pass1.4.10 Reflow1.4 DistinguishableAll Pass1.4.11 Non-text Contrast1.4 DistinguishableAll Pass1.4.12 Text Spacing1.4 DistinguishableAll Pass1.4.13 Content on Hover or Focus1.4 DistinguishableAll Pass2.1.1 Keyboard2.1 Keyboard AccessibleAll Pass2.1.2 No Keyboard Trap2.1 Keyboard AccessibleAll Pass2.1.4 Character Key Shortcuts2.1 Keyboard AccessibleAll Pass2.2.1 Timing Adjustable2.2 Enough TimeAll Pass2.2.2 Pause, Stop, Hide2.2 Enough TimeAll Pass2.3.1 Three Flashes or Below Threshold2.3 Seizures and physical reactionsAll Pass2.4.1 Bypass blocks2.4 NavigableAll Pass2.4.2 Page Titled2.4 NavigableAll Pass2.4.3 Focus Order2.4 NavigableAll Pass2.4.4 Link Purpose (In Context)2.4 NavigableAll Pass2.4.5 Multiple Ways2.4 NavigableAll Pass2.4.6 Headings and Labels2.4 NavigableAll Pass2.4.7 Focus Visible2.4 NavigableAll Pass2.4.11 Focus Not Obscured2.4 NavigableAll Pass2.5.1 Pointer Gestures2.5 Input ModalitiesAll Pass2.5.2 Pointer Cancellation2.5 Input ModalitiesAll Pass2.5.3 Label in Name2.5 Input ModalitiesAll Pass2.5.4 Motion Actuation2.5 Input ModalitiesAll Pass2.5.7 Dragging Movements2.5 Input ModalitiesAll Pass2.5.8 Target Size (Minimum)2.5 Input ModalitiesAll Pass3.1.1 Language of Page3.1 ReadableAll Pass3.1.2 Language of Parts3.1 ReadableAll Pass3.2.1 On Focus3.2 PredictableAll Pass3.2.2 On Input 3.2 PredictableAll Pass3.2.3 Consistent Navigation3.2 PredictableAll Pass3.2.4 Consistent Identification3.2 PredictableAll Pass3.2.6 Consistent Help3.2 PredictableAll Pass3.3.1 Error Identification3.3 Input AssistanceAll Pass3.3.2 Labels or Instructions3.3 Input AssistanceAll Pass3.3.3 Error Suggestion3.3 Input AssistanceAll Pass3.3.4 Error Prevention (Legal, Financial, Data)3.3 Input AssistanceAll Pass3.3.7 Redundant Entry3.3 Input AssistanceAll Pass3.3.8 Accessible Authentication (Minimum)3.3 Input AssistanceAll Pass4.1.2 Name, Role, Value4.1 CompatibleAll Pass4.1.3 Status Messages4.1 CompatibleAll Pass
