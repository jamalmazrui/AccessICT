<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<title>Title Page</title>

<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Helvetica;
	panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;}
@font-face
	{font-family:"Tms Rmn";
	panose-1:2 2 6 3 4 5 5 2 3 4;}
@font-face
	{font-family:Helv;
	panose-1:2 11 6 4 2 2 2 3 2 4;}
@font-face
	{font-family:"New York";
	panose-1:2 4 5 3 6 5 6 2 3 4;}
@font-face
	{font-family:System;
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;}
@font-face
	{font-family:Batang;
	panose-1:2 3 6 0 0 1 1 1 1 1;}
@font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:PMingLiU;
	panose-1:2 1 6 1 0 1 1 1 1 1;}
@font-face
	{font-family:"MS Gothic";
	panose-1:2 11 6 9 7 2 5 8 2 4;}
@font-face
	{font-family:Dotum;
	panose-1:2 11 6 0 0 1 1 1 1 1;}
@font-face
	{font-family:SimHei;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:MingLiU;
	panose-1:2 1 6 9 0 1 1 1 1 1;}
@font-face
	{font-family:Mincho;
	panose-1:2 2 6 9 4 3 5 8 3 5;}
@font-face
	{font-family:Gulim;
	panose-1:2 11 6 0 0 1 1 1 1 1;}
@font-face
	{font-family:Century;
	panose-1:2 4 6 4 5 5 5 2 3 4;}
@font-face
	{font-family:"Angsana New";
	panose-1:2 2 6 3 5 4 5 2 3 4;}
@font-face
	{font-family:"Cordia New";
	panose-1:2 11 3 4 2 2 2 2 2 4;}
@font-face
	{font-family:Mangal;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Latha;
	panose-1:2 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Sylfaen;
	panose-1:1 10 5 2 5 3 6 3 3 3;}
@font-face
	{font-family:Vrinda;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Raavi;
	panose-1:2 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:Shruti;
	panose-1:2 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:Sendnya;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Gautami;
	panose-1:2 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:Tunga;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Estrangelo Edessa";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:"Yu Gothic";
	panose-1:2 11 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:DengXian;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:"Calibri Light";
	panose-1:2 15 3 2 2 2 4 3 2 4;}
@font-face
	{font-family:"Palatino Linotype";
	panose-1:2 4 5 2 5 5 5 3 3 4;}
@font-face
	{font-family:Verdana;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"Arial Unicode MS";
	panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
	{font-family:"Aptos Display";}
@font-face
	{font-family:Aptos;}
@font-face
	{font-family:"Segoe UI Emoji";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:Segoe;}
@font-face
	{font-family:"Segoe Semibold";}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"Lucida Sans Typewriter";
	panose-1:2 11 5 9 3 5 4 3 2 4;}
@font-face
	{font-family:Times;
	panose-1:2 2 6 3 5 4 5 2 3 4;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;}
@font-face
	{font-family:"Times Bold";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"David CLM";
	panose-1:2 0 6 3 0 0 0 0 0 0;}
@font-face
	{font-family:"Nachlieli CLM";
	panose-1:2 0 6 3 0 0 0 0 0 0;}
@font-face
	{font-family:"Frank Ruhl Hofshi";
	panose-1:0 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Miriam Libre";
	panose-1:0 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:Marlett;
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Arial Black";
	panose-1:2 11 10 4 2 1 2 2 2 4;}
@font-face
	{font-family:"Bahnschrift Light";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Bahnschrift SemiLight";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:Bahnschrift;
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Bahnschrift SemiBold";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Bahnschrift Light SemiCondensed";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Bahnschrift SemiLight SemiConde";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Bahnschrift SemiCondensed";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Bahnschrift SemiBold SemiConden";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Bahnschrift Light Condensed";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Bahnschrift SemiLight Condensed";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Bahnschrift Condensed";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Bahnschrift SemiBold Condensed";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Candara;
	panose-1:2 14 5 2 3 3 3 2 2 4;}
@font-face
	{font-family:"Candara Light";
	panose-1:2 14 5 2 3 3 3 2 2 4;}
@font-face
	{font-family:"Comic Sans MS";
	panose-1:3 15 7 2 3 3 2 2 2 4;}
@font-face
	{font-family:Constantia;
	panose-1:2 3 6 2 5 3 6 3 3 3;}
@font-face
	{font-family:Corbel;
	panose-1:2 11 5 3 2 2 4 2 2 4;}
@font-face
	{font-family:"Corbel Light";
	panose-1:2 11 3 3 2 2 4 2 2 4;}
@font-face
	{font-family:Ebrima;
	panose-1:2 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Franklin Gothic Medium";
	panose-1:2 11 6 3 2 1 2 2 2 4;}
@font-face
	{font-family:Gabriola;
	panose-1:4 4 6 5 5 16 2 2 13 2;}
@font-face
	{font-family:Gadugi;
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:Georgia;
	panose-1:2 4 5 2 5 4 5 2 3 3;}
@font-face
	{font-family:Impact;
	panose-1:2 11 8 6 3 9 2 5 2 4;}
@font-face
	{font-family:"Ink Free";
	panose-1:3 8 4 2 0 5 0 0 0 0;}
@font-face
	{font-family:"Javanese Text";
	panose-1:2 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Leelawadee UI";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Leelawadee UI Semilight";
	panose-1:2 11 4 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Lucida Console";
	panose-1:2 11 6 9 4 5 4 2 2 4;}
@font-face
	{font-family:"Lucida Sans Unicode";
	panose-1:2 11 6 2 3 5 4 2 2 4;}
@font-face
	{font-family:"Malgun Gothic";
	panose-1:2 11 5 3 2 0 0 2 0 4;}
@font-face
	{font-family:"\@Malgun Gothic";}
@font-face
	{font-family:"Malgun Gothic Semilight";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"\@Malgun Gothic Semilight";}
@font-face
	{font-family:"Microsoft Himalaya";
	panose-1:1 1 1 0 1 1 1 1 1 1;}
@font-face
	{font-family:"Microsoft JhengHei";
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"\@Microsoft JhengHei";}
@font-face
	{font-family:"Microsoft JhengHei UI";
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"\@Microsoft JhengHei UI";}
@font-face
	{font-family:"Microsoft JhengHei Light";
	panose-1:2 11 3 4 3 5 4 4 2 4;}
@font-face
	{font-family:"\@Microsoft JhengHei Light";}
@font-face
	{font-family:"Microsoft JhengHei UI Light";
	panose-1:2 11 3 4 3 5 4 4 2 4;}
@font-face
	{font-family:"\@Microsoft JhengHei UI Light";}
@font-face
	{font-family:"Microsoft New Tai Lue";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Microsoft PhagsPa";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Microsoft Sans Serif";
	panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
	{font-family:"Microsoft Tai Le";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Microsoft YaHei";
	panose-1:2 11 5 3 2 2 4 2 2 4;}
@font-face
	{font-family:"\@Microsoft YaHei";}
@font-face
	{font-family:"Microsoft YaHei UI";
	panose-1:2 11 5 3 2 2 4 2 2 4;}
@font-face
	{font-family:"\@Microsoft YaHei UI";}
@font-face
	{font-family:"Microsoft YaHei Light";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"\@Microsoft YaHei Light";}
@font-face
	{font-family:"Microsoft YaHei UI Light";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"\@Microsoft YaHei UI Light";}
@font-face
	{font-family:"Microsoft Yi Baiti";
	panose-1:3 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:MingLiU-ExtB;
	panose-1:2 2 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:"\@MingLiU-ExtB";}
@font-face
	{font-family:PMingLiU-ExtB;
	panose-1:2 2 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:"\@PMingLiU-ExtB";}
@font-face
	{font-family:MingLiU_HKSCS-ExtB;
	panose-1:2 2 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:"\@MingLiU_HKSCS-ExtB";}
@font-face
	{font-family:"Mongolian Baiti";
	panose-1:3 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:"\@MS Gothic";
	panose-1:2 11 6 9 7 2 5 8 2 4;}
@font-face
	{font-family:"MS UI Gothic";
	panose-1:2 11 6 0 7 2 5 8 2 4;}
@font-face
	{font-family:"\@MS UI Gothic";}
@font-face
	{font-family:"MS PGothic";
	panose-1:2 11 6 0 7 2 5 8 2 4;}
@font-face
	{font-family:"\@MS PGothic";}
@font-face
	{font-family:"MV Boli";
	panose-1:2 0 5 0 3 2 0 9 0 0;}
@font-face
	{font-family:"Myanmar Text";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Nirmala UI";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Nirmala UI Semilight";
	panose-1:2 11 4 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Sans Serif Collection";
	panose-1:2 11 5 2 4 5 4 2 2 4;}
@font-face
	{font-family:"Segoe Fluent Icons";
	panose-1:5 10 1 2 1 1 1 1 1 1;}
@font-face
	{font-family:"Segoe MDL2 Assets";
	panose-1:5 10 1 2 1 1 1 1 1 1;}
@font-face
	{font-family:"Segoe Print";
	panose-1:2 0 6 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Segoe Script";
	panose-1:3 11 5 4 2 0 0 0 0 3;}
@font-face
	{font-family:"Segoe UI";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Segoe UI Black";
	panose-1:2 11 10 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Segoe UI Historic";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Segoe UI Light";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Segoe UI Semibold";
	panose-1:2 11 7 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Segoe UI Semilight";
	panose-1:2 11 4 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Segoe UI Symbol";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Segoe UI Variable Small Light";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Segoe UI Variable Small Semilig";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Segoe UI Variable Small";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Segoe UI Variable Small Semibol";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Segoe UI Variable Text Light";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Segoe UI Variable Text Semiligh";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Segoe UI Variable Text";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Segoe UI Variable Text Semibold";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Segoe UI Variable Display Light";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Segoe UI Variable Display Semil";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Segoe UI Variable Display";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Segoe UI Variable Display Semib";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"\@SimSun";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:NSimSun;
	panose-1:2 1 6 9 3 1 1 1 1 1;}
@font-face
	{font-family:"\@NSimSun";}
@font-face
	{font-family:SimSun-ExtB;
	panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
	{font-family:"\@SimSun-ExtB";}
@font-face
	{font-family:"Sitka Small";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Sitka Small Semibold";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Sitka Text";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Sitka Text Semibold";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Sitka Subheading";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Sitka Subheading Semibold";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Sitka Heading";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Sitka Heading Semibold";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Sitka Display";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Sitka Display Semibold";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Sitka Banner";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Sitka Banner Semibold";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Trebuchet MS";
	panose-1:2 11 6 3 2 2 2 2 2 4;}
@font-face
	{font-family:Webdings;
	panose-1:5 3 1 2 1 5 9 6 7 3;}
@font-face
	{font-family:"\@Yu Gothic";
	panose-1:2 11 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Yu Gothic UI";
	panose-1:2 11 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:"\@Yu Gothic UI";}
@font-face
	{font-family:"Yu Gothic UI Semibold";
	panose-1:2 11 7 0 0 0 0 0 0 0;}
@font-face
	{font-family:"\@Yu Gothic UI Semibold";}
@font-face
	{font-family:"Yu Gothic Light";
	panose-1:2 11 3 0 0 0 0 0 0 0;}
@font-face
	{font-family:"\@Yu Gothic Light";}
@font-face
	{font-family:"Yu Gothic UI Light";
	panose-1:2 11 3 0 0 0 0 0 0 0;}
@font-face
	{font-family:"\@Yu Gothic UI Light";}
@font-face
	{font-family:"Yu Gothic Medium";
	panose-1:2 11 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:"\@Yu Gothic Medium";}
@font-face
	{font-family:"Yu Gothic UI Semilight";
	panose-1:2 11 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:"\@Yu Gothic UI Semilight";}
@font-face
	{font-family:"HoloLens MDL2 Assets";
	panose-1:5 10 1 2 1 1 1 1 1 1;}
@font-face
	{font-family:"Agency FB";
	panose-1:2 11 5 3 2 2 2 2 2 4;}
@font-face
	{font-family:Algerian;
	panose-1:4 2 7 5 4 10 2 6 7 2;}
@font-face
	{font-family:"Book Antiqua";
	panose-1:2 4 6 2 5 3 5 3 3 4;}
@font-face
	{font-family:"Arial Narrow";
	panose-1:2 11 6 6 2 2 2 3 2 4;}
@font-face
	{font-family:"Arial Rounded MT Bold";
	panose-1:2 15 7 4 3 5 4 3 2 4;}
@font-face
	{font-family:"Baskerville Old Face";
	panose-1:2 2 6 2 8 5 5 2 3 3;}
@font-face
	{font-family:"Bauhaus 93";
	panose-1:4 3 9 5 2 11 2 2 12 2;}
@font-face
	{font-family:"Bell MT";
	panose-1:2 2 5 3 6 3 5 2 3 3;}
@font-face
	{font-family:"Bernard MT Condensed";
	panose-1:2 5 8 6 6 9 5 2 4 4;}
@font-face
	{font-family:"Bodoni MT";
	panose-1:2 7 6 3 8 6 6 2 2 3;}
@font-face
	{font-family:"Bodoni MT Black";
	panose-1:2 7 10 3 8 6 6 2 2 3;}
@font-face
	{font-family:"Bodoni MT Condensed";
	panose-1:2 7 6 6 8 6 6 2 2 3;}
@font-face
	{font-family:"Bodoni MT Poster Compressed";
	panose-1:2 7 7 6 8 6 1 5 2 4;}
@font-face
	{font-family:"Bookman Old Style";
	panose-1:2 5 6 4 5 5 5 2 2 4;}
@font-face
	{font-family:"Bradley Hand ITC";
	panose-1:3 7 4 2 5 3 2 3 2 3;}
@font-face
	{font-family:"Britannic Bold";
	panose-1:2 11 9 3 6 7 3 2 2 4;}
@font-face
	{font-family:"Berlin Sans FB";
	panose-1:2 14 6 2 2 5 2 2 3 6;}
@font-face
	{font-family:"Berlin Sans FB Demi";
	panose-1:2 14 8 2 2 5 2 2 3 6;}
@font-face
	{font-family:Broadway;
	panose-1:4 4 9 5 8 11 2 2 5 2;}
@font-face
	{font-family:"Brush Script MT";
	panose-1:3 6 8 2 4 4 6 7 3 4;}
@font-face
	{font-family:"Bookshelf Symbol 7";
	panose-1:5 1 1 1 1 1 1 1 1 1;}
@font-face
	{font-family:"Californian FB";
	panose-1:2 7 4 3 6 8 11 3 2 4;}
@font-face
	{font-family:"Calisto MT";
	panose-1:2 4 6 3 5 5 5 3 3 4;}
@font-face
	{font-family:Castellar;
	panose-1:2 10 4 2 6 4 6 1 3 1;}
@font-face
	{font-family:"Century Schoolbook";
	panose-1:2 4 6 4 5 5 5 2 3 4;}
@font-face
	{font-family:Centaur;
	panose-1:2 3 5 4 5 2 5 2 3 4;}
@font-face
	{font-family:Chiller;
	panose-1:4 2 4 4 3 16 7 2 6 2;}
@font-face
	{font-family:"Colonna MT";
	panose-1:4 2 8 5 6 2 2 3 2 3;}
@font-face
	{font-family:"Cooper Black";
	panose-1:2 8 9 4 4 3 11 2 4 4;}
@font-face
	{font-family:"Copperplate Gothic Bold";
	panose-1:2 14 7 5 2 2 6 2 4 4;}
@font-face
	{font-family:"Copperplate Gothic Light";
	panose-1:2 14 5 7 2 2 6 2 4 4;}
@font-face
	{font-family:"Curlz MT";
	panose-1:4 4 4 4 5 7 2 2 2 2;}
@font-face
	{font-family:Dubai;
	panose-1:2 11 5 3 3 4 3 3 2 4;}
@font-face
	{font-family:"Dubai Light";
	panose-1:2 11 3 3 3 4 3 3 2 4;}
@font-face
	{font-family:"Dubai Medium";
	panose-1:2 11 6 3 3 4 3 3 2 4;}
@font-face
	{font-family:Elephant;
	panose-1:2 2 9 4 9 5 5 2 3 3;}
@font-face
	{font-family:"Engravers MT";
	panose-1:2 9 7 7 8 5 5 2 3 4;}
@font-face
	{font-family:"Eras Bold ITC";
	panose-1:2 11 9 7 3 5 4 2 2 4;}
@font-face
	{font-family:"Eras Demi ITC";
	panose-1:2 11 8 5 3 5 4 2 8 4;}
@font-face
	{font-family:"Eras Light ITC";
	panose-1:2 11 4 2 3 5 4 2 8 4;}
@font-face
	{font-family:"Eras Medium ITC";
	panose-1:2 11 6 2 3 5 4 2 8 4;}
@font-face
	{font-family:"Felix Titling";
	panose-1:4 6 5 5 6 2 2 2 10 4;}
@font-face
	{font-family:Forte;
	panose-1:3 6 9 2 4 5 2 7 2 3;}
@font-face
	{font-family:"Franklin Gothic Book";
	panose-1:2 11 5 3 2 1 2 2 2 4;}
@font-face
	{font-family:"Franklin Gothic Demi";
	panose-1:2 11 7 3 2 1 2 2 2 4;}
@font-face
	{font-family:"Franklin Gothic Demi Cond";
	panose-1:2 11 7 6 3 4 2 2 2 4;}
@font-face
	{font-family:"Franklin Gothic Heavy";
	panose-1:2 11 9 3 2 1 2 2 2 4;}
@font-face
	{font-family:"Franklin Gothic Medium Cond";
	panose-1:2 11 6 6 3 4 2 2 2 4;}
@font-face
	{font-family:"Freestyle Script";
	panose-1:3 8 4 2 3 2 5 11 4 4;}
@font-face
	{font-family:"French Script MT";
	panose-1:3 2 4 2 4 6 7 4 6 5;}
@font-face
	{font-family:"Footlight MT Light";
	panose-1:2 4 6 2 6 3 10 2 3 4;}
@font-face
	{font-family:Garamond;
	panose-1:2 2 4 4 3 3 1 1 8 3;}
@font-face
	{font-family:Gigi;
	panose-1:4 4 5 4 6 16 7 2 13 2;}
@font-face
	{font-family:"Gill Sans MT";
	panose-1:2 11 5 2 2 1 4 2 2 3;}
@font-face
	{font-family:"Gill Sans MT Condensed";
	panose-1:2 11 5 6 2 1 4 2 2 3;}
@font-face
	{font-family:"Gill Sans Ultra Bold Condensed";
	panose-1:2 11 10 6 2 1 4 2 2 3;}
@font-face
	{font-family:"Gill Sans Ultra Bold";
	panose-1:2 11 10 2 2 1 4 2 2 3;}
@font-face
	{font-family:"Gloucester MT Extra Condensed";
	panose-1:2 3 8 8 2 6 1 1 1 1;}
@font-face
	{font-family:"Gill Sans MT Ext Condensed Bold";
	panose-1:2 11 9 2 2 1 4 2 2 3;}
@font-face
	{font-family:"Century Gothic";
	panose-1:2 11 5 2 2 2 2 2 2 4;}
@font-face
	{font-family:"Goudy Old Style";
	panose-1:2 2 5 2 5 3 5 2 3 3;}
@font-face
	{font-family:"Goudy Stout";
	panose-1:2 2 9 4 7 3 11 2 4 1;}
@font-face
	{font-family:"Harlow Solid Italic";
	panose-1:4 3 6 4 2 15 2 2 13 2;}
@font-face
	{font-family:Harrington;
	panose-1:4 4 5 5 5 10 2 2 7 2;}
@font-face
	{font-family:Haettenschweiler;
	panose-1:2 11 7 6 4 9 2 6 2 4;}
@font-face
	{font-family:"High Tower Text";
	panose-1:2 4 5 2 5 5 6 3 3 3;}
@font-face
	{font-family:"Imprint MT Shadow";
	panose-1:4 2 6 5 6 3 3 3 2 2;}
@font-face
	{font-family:"Informal Roman";
	panose-1:3 6 4 2 3 4 6 11 2 4;}
@font-face
	{font-family:"Blackadder ITC";
	panose-1:4 2 5 5 5 16 7 2 13 2;}
@font-face
	{font-family:"Edwardian Script ITC";
	panose-1:3 3 3 2 4 7 7 13 8 4;}
@font-face
	{font-family:"Kristen ITC";
	panose-1:3 5 5 2 4 2 2 3 2 2;}
@font-face
	{font-family:Jokerman;
	panose-1:4 9 6 5 6 13 6 2 7 2;}
@font-face
	{font-family:"Juice ITC";
	panose-1:4 4 4 3 4 10 2 2 2 2;}
@font-face
	{font-family:"Kunstler Script";
	panose-1:3 3 4 2 2 6 7 13 13 6;}
@font-face
	{font-family:"Wide Latin";
	panose-1:2 10 10 7 5 5 5 2 4 4;}
@font-face
	{font-family:"Lucida Bright";
	panose-1:2 4 6 2 5 5 5 2 3 4;}
@font-face
	{font-family:"Lucida Calligraphy";
	panose-1:3 1 1 1 1 1 1 1 1 1;}
@font-face
	{font-family:Leelawadee;
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:"Lucida Fax";
	panose-1:2 6 6 2 5 5 5 2 2 4;}
@font-face
	{font-family:"Lucida Handwriting";
	panose-1:3 1 1 1 1 1 1 1 1 1;}
@font-face
	{font-family:"Lucida Sans";
	panose-1:2 11 6 2 3 5 4 2 2 4;}
@font-face
	{font-family:Magneto;
	panose-1:4 3 8 5 5 8 2 2 13 2;}
@font-face
	{font-family:"Maiandra GD";
	panose-1:2 14 5 2 3 3 8 2 2 4;}
@font-face
	{font-family:"Matura MT Script Capitals";
	panose-1:3 2 8 2 6 6 2 7 2 2;}
@font-face
	{font-family:Mistral;
	panose-1:3 9 7 2 3 4 7 2 4 3;}
@font-face
	{font-family:"Modern No\. 20";
	panose-1:2 7 7 4 7 5 5 2 3 3;}
@font-face
	{font-family:"Microsoft Uighur";
	panose-1:2 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Monotype Corsiva";
	panose-1:3 1 1 1 1 2 1 1 1 1;}
@font-face
	{font-family:"MT Extra";
	panose-1:5 5 1 2 1 2 5 2 2 2;}
@font-face
	{font-family:"Niagara Engraved";
	panose-1:4 2 5 2 7 7 3 3 2 2;}
@font-face
	{font-family:"Niagara Solid";
	panose-1:4 2 5 2 7 7 2 2 2 2;}
@font-face
	{font-family:"OCR A Extended";
	panose-1:2 1 5 9 2 1 2 1 3 3;}
@font-face
	{font-family:"Old English Text MT";
	panose-1:3 4 9 2 4 5 8 3 8 6;}
@font-face
	{font-family:Onyx;
	panose-1:4 5 6 2 8 7 2 2 2 3;}
@font-face
	{font-family:"MS Outlook";
	panose-1:5 1 1 0 1 0 0 0 0 0;}
@font-face
	{font-family:"Palace Script MT";
	panose-1:3 3 3 2 2 6 7 12 11 5;}
@font-face
	{font-family:Papyrus;
	panose-1:3 7 5 2 6 5 2 3 2 5;}
@font-face
	{font-family:Parchment;
	panose-1:3 4 6 2 4 7 8 4 8 4;}
@font-face
	{font-family:Perpetua;
	panose-1:2 2 5 2 6 4 1 2 3 3;}
@font-face
	{font-family:"Perpetua Titling MT";
	panose-1:2 2 5 2 6 5 5 2 8 4;}
@font-face
	{font-family:Playbill;
	panose-1:4 5 6 3 10 6 2 2 2 2;}
@font-face
	{font-family:"Poor Richard";
	panose-1:2 8 5 2 5 5 5 2 7 2;}
@font-face
	{font-family:Pristina;
	panose-1:3 6 4 2 4 4 6 8 2 4;}
@font-face
	{font-family:"Rage Italic";
	panose-1:3 7 5 2 4 5 7 7 3 4;}
@font-face
	{font-family:Ravie;
	panose-1:4 4 8 5 5 8 9 2 6 2;}
@font-face
	{font-family:"MS Reference Sans Serif";
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"MS Reference Specialty";
	panose-1:5 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Rockwell Condensed";
	panose-1:2 6 6 3 5 4 5 2 1 4;}
@font-face
	{font-family:Rockwell;
	panose-1:2 6 6 3 2 2 5 2 4 3;}
@font-face
	{font-family:"Rockwell Extra Bold";
	panose-1:2 6 9 3 4 5 5 2 4 3;}
@font-face
	{font-family:"Script MT Bold";
	panose-1:3 4 6 2 4 6 7 8 9 4;}
@font-face
	{font-family:"Showcard Gothic";
	panose-1:4 2 9 4 2 1 2 2 6 4;}
@font-face
	{font-family:"Snap ITC";
	panose-1:4 4 10 7 6 10 2 2 2 2;}
@font-face
	{font-family:Stencil;
	panose-1:4 4 9 5 13 8 2 2 4 4;}
@font-face
	{font-family:"Tw Cen MT";
	panose-1:2 11 6 2 2 1 4 2 6 3;}
@font-face
	{font-family:"Tw Cen MT Condensed";
	panose-1:2 11 6 6 2 1 4 2 2 3;}
@font-face
	{font-family:"Tw Cen MT Condensed Extra Bold";
	panose-1:2 11 8 3 2 2 2 2 2 4;}
@font-face
	{font-family:"Tempus Sans ITC";
	panose-1:4 2 4 4 3 13 7 2 2 2;}
@font-face
	{font-family:"Viner Hand ITC";
	panose-1:3 7 5 2 3 5 2 2 2 3;}
@font-face
	{font-family:Vivaldi;
	panose-1:3 2 6 2 5 5 6 9 8 4;}
@font-face
	{font-family:"Vladimir Script";
	panose-1:3 5 4 2 4 4 7 7 3 5;}
@font-face
	{font-family:"Wingdings 2";
	panose-1:5 2 1 2 1 5 7 7 7 7;}
@font-face
	{font-family:"Wingdings 3";
	panose-1:5 4 1 2 1 8 7 7 7 7;}
@font-face
	{font-family:"Gentium Basic";
	panose-1:2 0 5 3 6 0 0 2 0 4;}
@font-face
	{font-family:OpenSymbol;
	panose-1:5 1 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"DejaVu Math TeX Gyre";
	panose-1:2 0 5 3 0 0 0 0 0 0;}
@font-face
	{font-family:"Noto Kufi Arabic";
	panose-1:2 11 5 6 3 8 4 2 2 4;}
@font-face
	{font-family:Alef;
	panose-1:0 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Liberation Mono";
	panose-1:2 7 4 9 2 2 5 2 4 4;}
@font-face
	{font-family:Caladea;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:"Reem Kufi";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Liberation Sans Narrow";
	panose-1:2 11 6 6 2 2 2 3 2 4;}
@font-face
	{font-family:"Linux Biolinum G";
	panose-1:2 0 5 3 0 0 0 0 0 0;}
@font-face
	{font-family:Carlito;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Scheherazade;
	panose-1:1 0 6 0 2 0 0 2 0 3;}
@font-face
	{font-family:Amiri;
	panose-1:0 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:"David Libre";
	panose-1:0 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Amiri Quran";
	panose-1:0 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Frank Ruehl CLM";
	panose-1:2 0 6 3 0 0 0 0 0 0;}
@font-face
	{font-family:"Miriam CLM";
	panose-1:2 0 6 3 0 0 0 0 0 0;}
@font-face
	{font-family:"Miriam Mono CLM";
	panose-1:2 0 5 3 0 0 0 0 0 0;}
@font-face
	{font-family:"DejaVu Sans";
	panose-1:2 11 6 3 3 8 4 2 2 4;}
@font-face
	{font-family:"DejaVu Sans Light";
	panose-1:2 11 2 3 3 8 4 2 2 4;}
@font-face
	{font-family:"DejaVu Sans Condensed";
	panose-1:2 11 6 6 3 8 4 2 2 4;}
@font-face
	{font-family:"DejaVu Sans Mono";
	panose-1:2 11 6 9 3 8 4 2 2 4;}
@font-face
	{font-family:"DejaVu Serif";
	panose-1:2 6 6 3 5 6 5 2 2 4;}
@font-face
	{font-family:"DejaVu Serif Condensed";
	panose-1:2 6 6 6 5 6 5 2 2 4;}
@font-face
	{font-family:"Gentium Book Basic";
	panose-1:2 0 5 3 6 0 0 2 0 4;}
@font-face
	{font-family:"Liberation Sans";
	panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
	{font-family:"Liberation Serif";
	panose-1:2 2 6 3 5 4 5 2 3 4;}
@font-face
	{font-family:"Linux Libertine Display G";
	panose-1:2 0 5 3 0 0 0 0 0 0;}
@font-face
	{font-family:"Linux Libertine G";
	panose-1:2 0 5 3 0 0 0 0 0 0;}
@font-face
	{font-family:Rubik;
	panose-1:2 0 6 4 0 0 0 2 0 4;}
@font-face
	{font-family:"Noto Mono";
	panose-1:2 11 6 9 3 8 4 2 2 4;}
@font-face
	{font-family:"Noto Naskh Arabic";
	panose-1:2 11 5 2 4 5 4 2 2 4;}
@font-face
	{font-family:"Noto Naskh Arabic UI";
	panose-1:2 11 5 2 4 5 4 2 2 4;}
@font-face
	{font-family:"Noto Sans";}
@font-face
	{font-family:"Noto Sans Cond";}
@font-face
	{font-family:"Noto Sans Light";}
@font-face
	{font-family:"Noto Sans Arabic";}
@font-face
	{font-family:"Noto Sans Arabic UI";}
@font-face
	{font-family:"Noto Sans Armenian";}
@font-face
	{font-family:"Noto Sans Georgian";
	panose-1:2 11 5 2 4 5 4 2 2 4;}
@font-face
	{font-family:"Noto Sans Hebrew";}
@font-face
	{font-family:"Noto Sans Lao";
	panose-1:2 11 5 2 4 5 4 2 2 4;}
@font-face
	{font-family:"Noto Sans Lisu";
	panose-1:2 11 5 2 4 5 4 2 2 4;}
@font-face
	{font-family:"Noto Serif";}
@font-face
	{font-family:"Noto Serif Cond";}
@font-face
	{font-family:"Noto Serif Light";}
@font-face
	{font-family:"Noto Serif Armenian";}
@font-face
	{font-family:"Noto Serif Georgian";
	panose-1:2 2 5 2 6 5 5 2 2 4;}
@font-face
	{font-family:"Noto Serif Hebrew";}
@font-face
	{font-family:"Noto Serif Lao";
	panose-1:2 2 5 2 6 5 5 2 2 4;}
@font-face
	{font-family:"Cascadia Code ExtraLight";
	panose-1:2 11 6 9 2 0 0 2 0 4;}
@font-face
	{font-family:"Cascadia Code Light";
	panose-1:2 11 6 9 2 0 0 2 0 4;}
@font-face
	{font-family:"Cascadia Code SemiLight";
	panose-1:2 11 6 9 2 0 0 2 0 4;}
@font-face
	{font-family:"Cascadia Code";
	panose-1:2 11 6 9 2 0 0 2 0 4;}
@font-face
	{font-family:"Cascadia Code SemiBold";
	panose-1:2 11 6 9 2 0 0 2 0 4;}
@font-face
	{font-family:"Cascadia Mono ExtraLight";
	panose-1:2 11 6 9 2 0 0 2 0 4;}
@font-face
	{font-family:"Cascadia Mono Light";
	panose-1:2 11 6 9 2 0 0 2 0 4;}
@font-face
	{font-family:"Cascadia Mono SemiLight";
	panose-1:2 11 6 9 2 0 0 2 0 4;}
@font-face
	{font-family:"Cascadia Mono";
	panose-1:2 11 6 9 2 0 0 2 0 4;}
@font-face
	{font-family:"Cascadia Mono SemiBold";
	panose-1:2 11 6 9 2 0 0 2 0 4;}
@font-face
	{font-family:Abadi;}
@font-face
	{font-family:"Abadi Extra Light";}
@font-face
	{font-family:Abel;}
@font-face
	{font-family:"Abril Fatface";}
@font-face
	{font-family:"ADLaM Display";}
@font-face
	{font-family:Aharoni;}
@font-face
	{font-family:"Al Fresco";}
@font-face
	{font-family:"Alasassy Caps";}
@font-face
	{font-family:Aldhabi;}
@font-face
	{font-family:Aleo;}
@font-face
	{font-family:"Aleo Light";}
@font-face
	{font-family:"Amasis MT Pro";}
@font-face
	{font-family:"Amasis MT Pro Black";}
@font-face
	{font-family:"Amasis MT Pro Light";}
@font-face
	{font-family:"Amasis MT Pro Medium";}
@font-face
	{font-family:"Amatic SC";}
@font-face
	{font-family:AngsanaUPC;}
@font-face
	{font-family:Anton;}
@font-face
	{font-family:Aparajita;}
@font-face
	{font-family:"Aptos Black";}
@font-face
	{font-family:"Aptos ExtraBold";}
@font-face
	{font-family:"Aptos Light";}
@font-face
	{font-family:"Aptos Mono";}
@font-face
	{font-family:"Aptos Narrow";}
@font-face
	{font-family:"Aptos SemiBold";}
@font-face
	{font-family:"Aptos Serif";}
@font-face
	{font-family:"Arabic Typesetting";}
@font-face
	{font-family:"Aref Ruqaa";}
@font-face
	{font-family:"Arial Nova";}
@font-face
	{font-family:"Arial Nova Cond";}
@font-face
	{font-family:"Arial Nova Cond Light";}
@font-face
	{font-family:"Arial Nova Light";}
@font-face
	{font-family:Assistant;}
@font-face
	{font-family:"Assistant ExtraBold";}
@font-face
	{font-family:"Assistant ExtraLight";}
@font-face
	{font-family:"Assistant Light";}
@font-face
	{font-family:"Assistant SemiBold";}
@font-face
	{font-family:Athiti;}
@font-face
	{font-family:"Athiti ExtraLight";}
@font-face
	{font-family:"Athiti Light";}
@font-face
	{font-family:"Athiti Medium";}
@font-face
	{font-family:"Athiti SemiBold";}
@font-face
	{font-family:"Avenir Next LT Pro";}
@font-face
	{font-family:"Avenir Next LT Pro Demi";}
@font-face
	{font-family:"Avenir Next LT Pro Light";}
@font-face
	{font-family:"Baguet Script";}
@font-face
	{font-family:Barlow;}
@font-face
	{font-family:"Barlow Black";}
@font-face
	{font-family:"Barlow Condensed";}
@font-face
	{font-family:"Barlow Condensed Black";}
@font-face
	{font-family:"Barlow Condensed ExtraBold";}
@font-face
	{font-family:"Barlow Condensed ExtraLight";}
@font-face
	{font-family:"Barlow Condensed Light";}
@font-face
	{font-family:"Barlow Condensed Medium";}
@font-face
	{font-family:"Barlow Condensed SemiBold";}
@font-face
	{font-family:"Barlow Condensed Thin";}
@font-face
	{font-family:"Barlow ExtraBold";}
@font-face
	{font-family:"Barlow ExtraLight";}
@font-face
	{font-family:"Barlow Light";}
@font-face
	{font-family:"Barlow Medium";}
@font-face
	{font-family:"Barlow Semi Condensed";}
@font-face
	{font-family:"Barlow Semi Condensed Black";}
@font-face
	{font-family:"Barlow Semi Condensed ExLight";}
@font-face
	{font-family:"Barlow Semi Condensed ExtraBold";}
@font-face
	{font-family:"Barlow Semi Condensed Light";}
@font-face
	{font-family:"Barlow Semi Condensed Medium";}
@font-face
	{font-family:"Barlow Semi Condensed SemiBold";}
@font-face
	{font-family:"Barlow Semi Condensed Thin";}
@font-face
	{font-family:"Barlow SemiBold";}
@font-face
	{font-family:"Barlow Thin";}
@font-face
	{font-family:BatangChe;}
@font-face
	{font-family:"Bebas Neue";}
@font-face
	{font-family:Bembo;}
@font-face
	{font-family:Bierstadt;}
@font-face
	{font-family:"Bierstadt Display";}
@font-face
	{font-family:BierstadtAlt;}
@font-face
	{font-family:"BierstadtAlt2 Cond";}
@font-face
	{font-family:"BierstadtAlt3 Cond";}
@font-face
	{font-family:"BierstadtAlt4 Cond";}
@font-face
	{font-family:BierstadtAlt5;}
@font-face
	{font-family:Biome;}
@font-face
	{font-family:"Biome Light";}
@font-face
	{font-family:"Boucherie Block";}
@font-face
	{font-family:"Boucherie Sans";}
@font-face
	{font-family:"Browallia New";}
@font-face
	{font-family:BrowalliaUPC;}
@font-face
	{font-family:"Buxton Sketch";}
@font-face
	{font-family:"Caveat Brush";}
@font-face
	{font-family:Cavolini;}
@font-face
	{font-family:"Chamberi Super Display";}
@font-face
	{font-family:Charmonman;}
@font-face
	{font-family:"Chilgok Gwon Anja";}
@font-face
	{font-family:"Chilgok Kim Yeongbun";}
@font-face
	{font-family:"Chilgok Lee Jonghui";}
@font-face
	{font-family:"Chilgok Lee Wonsun";}
@font-face
	{font-family:Chonburi;}
@font-face
	{font-family:"Cochocib Script Latin Pro";}
@font-face
	{font-family:"Concert One";}
@font-face
	{font-family:Cond;}
@font-face
	{font-family:Congenial;}
@font-face
	{font-family:"Congenial Black";}
@font-face
	{font-family:"Congenial Light";}
@font-face
	{font-family:"Congenial SemiBold";}
@font-face
	{font-family:"Congenial UltraLight";}
@font-face
	{font-family:Convection;}
@font-face
	{font-family:"Convection Condensed";}
@font-face
	{font-family:"Convection Extra Bold";}
@font-face
	{font-family:"Convection Symbol";}
@font-face
	{font-family:"Convection UI";}
@font-face
	{font-family:CordiaUPC;}
@font-face
	{font-family:Dante;}
@font-face
	{font-family:DaunPenh;}
@font-face
	{font-family:David;}
@font-face
	{font-family:Daytona;}
@font-face
	{font-family:"Daytona Condensed";}
@font-face
	{font-family:"Daytona Condensed Light";}
@font-face
	{font-family:"Daytona Light";}
@font-face
	{font-family:"DengXian Light";}
@font-face
	{font-family:"Didact Gothic";}
@font-face
	{font-family:DilleniaUPC;}
@font-face
	{font-family:"DM Mono";}
@font-face
	{font-family:"DM Mono Light";}
@font-face
	{font-family:"DM Mono Medium";}
@font-face
	{font-family:"DM Sans";}
@font-face
	{font-family:"DM Sans Medium";}
@font-face
	{font-family:"DM Serif Display";}
@font-face
	{font-family:"DM Serif Text";}
@font-face
	{font-family:DokChampa;}
@font-face
	{font-family:Dosis;}
@font-face
	{font-family:"Dosis ExtraBold";}
@font-face
	{font-family:"Dosis ExtraLight";}
@font-face
	{font-family:"Dosis Light";}
@font-face
	{font-family:"Dosis Medium";}
@font-face
	{font-family:"Dosis SemiBold";}
@font-face
	{font-family:DotumChe;}
@font-face
	{font-family:"Dreaming Outloud Pro";}
@font-face
	{font-family:"Dreaming Outloud Script Pro";}
@font-face
	{font-family:"EB Garamond";}
@font-face
	{font-family:"EB Garamond ExtraBold";}
@font-face
	{font-family:"EB Garamond Medium";}
@font-face
	{font-family:"EB Garamond SemiBold";}
@font-face
	{font-family:"Elephant Pro";}
@font-face
	{font-family:EucrosiaUPC;}
@font-face
	{font-family:Euphemia;}
@font-face
	{font-family:Fahkwang;}
@font-face
	{font-family:"Fahkwang ExtraLight";}
@font-face
	{font-family:"Fahkwang Light";}
@font-face
	{font-family:"Fahkwang Medium";}
@font-face
	{font-family:"Fahkwang SemiBold";}
@font-face
	{font-family:"Fairwater Script";}
@font-face
	{font-family:"Fairwater Script Light";}
@font-face
	{font-family:FangSong;}
@font-face
	{font-family:"Fave Script Bold Pro";}
@font-face
	{font-family:"Fira Code";}
@font-face
	{font-family:"Fira Code Light";}
@font-face
	{font-family:"Fira Code Medium";}
@font-face
	{font-family:"Fira Code Retina";}
@font-face
	{font-family:"Fira Mono";}
@font-face
	{font-family:"Fira Mono Medium";}
@font-face
	{font-family:"Fira Sans";}
@font-face
	{font-family:"Fira Sans Black";}
@font-face
	{font-family:"Fira Sans Condensed";}
@font-face
	{font-family:"Fira Sans Condensed Black";}
@font-face
	{font-family:"Fira Sans Condensed ExtraBold";}
@font-face
	{font-family:"Fira Sans Condensed ExtraLight";}
@font-face
	{font-family:"Fira Sans Condensed Light";}
@font-face
	{font-family:"Fira Sans Condensed Medium";}
@font-face
	{font-family:"Fira Sans Condensed SemiBold";}
@font-face
	{font-family:"Fira Sans Condensed Thin";}
@font-face
	{font-family:"Fira Sans Extra Condensed";}
@font-face
	{font-family:"Fira Sans Extra Condensed Black";}
@font-face
	{font-family:"Fira Sans Extra Condensed Light";}
@font-face
	{font-family:"Fira Sans Extra Condensed Thin";}
@font-face
	{font-family:"Fira Sans ExtraBold";}
@font-face
	{font-family:"Fira Sans ExtraLight";}
@font-face
	{font-family:"Fira Sans Light";}
@font-face
	{font-family:"Fira Sans Medium";}
@font-face
	{font-family:"Fira Sans SemiBold";}
@font-face
	{font-family:"Fira Sans Thin";}
@font-face
	{font-family:"Fjalla One";}
@font-face
	{font-family:"Forte Forward";}
@font-face
	{font-family:"Frank Ruhl Libre";}
@font-face
	{font-family:"Frank Ruhl Libre Black";}
@font-face
	{font-family:"Frank Ruhl Libre Light";}
@font-face
	{font-family:"Frank Ruhl Libre Medium";}
@font-face
	{font-family:FrankRuehl;}
@font-face
	{font-family:"Fredoka One";}
@font-face
	{font-family:FreesiaUPC;}
@font-face
	{font-family:Gabriela;}
@font-face
	{font-family:Gaegu;}
@font-face
	{font-family:"Gaegu Light";}
@font-face
	{font-family:"Georgia Pro";}
@font-face
	{font-family:"Georgia Pro Black";}
@font-face
	{font-family:"Georgia Pro Cond";}
@font-face
	{font-family:"Georgia Pro Cond Black";}
@font-face
	{font-family:"Georgia Pro Cond Light";}
@font-face
	{font-family:"Georgia Pro Cond Semibold";}
@font-face
	{font-family:"Georgia Pro Light";}
@font-face
	{font-family:"Georgia Pro Semibold";}
@font-face
	{font-family:"Gill Sans Nova";}
@font-face
	{font-family:"Gill Sans Nova Cond";}
@font-face
	{font-family:"Gill Sans Nova Cond Lt";}
@font-face
	{font-family:"Gill Sans Nova Cond Ultra Bold";}
@font-face
	{font-family:"Gill Sans Nova Cond XBd";}
@font-face
	{font-family:"Gill Sans Nova Light";}
@font-face
	{font-family:"Gill Sans Nova Ultra Bold";}
@font-face
	{font-family:Gisha;}
@font-face
	{font-family:"Goudy Type";}
@font-face
	{font-family:Grandview;}
@font-face
	{font-family:"Grandview Display";}
@font-face
	{font-family:Grotesque;}
@font-face
	{font-family:"Grotesque Light";}
@font-face
	{font-family:GulimChe;}
@font-face
	{font-family:Gungsuh;}
@font-face
	{font-family:GungsuhChe;}
@font-face
	{font-family:"Hadassah Friedlaender";}
@font-face
	{font-family:"Hammersmith One";}
@font-face
	{font-family:Heebo;}
@font-face
	{font-family:"Heebo Black";}
@font-face
	{font-family:"Heebo ExtraBold";}
@font-face
	{font-family:"Heebo Light";}
@font-face
	{font-family:"Heebo Medium";}
@font-face
	{font-family:"Heebo Thin";}
@font-face
	{font-family:HGGothicE;}
@font-face
	{font-family:HGMaruGothicMPRO;}
@font-face
	{font-family:HGMinchoE;}
@font-face
	{font-family:HGPGothicE;}
@font-face
	{font-family:HGPMinchoE;}
@font-face
	{font-family:HGPSoeiKakugothicUB;}
@font-face
	{font-family:HGSGothicE;}
@font-face
	{font-family:HGSMinchoE;}
@font-face
	{font-family:HGSoeiKakugothicUB;}
@font-face
	{font-family:HGSSoeiKakugothicUB;}
@font-face
	{font-family:Hind;}
@font-face
	{font-family:"Hind Colombo";}
@font-face
	{font-family:"Hind Colombo Light";}
@font-face
	{font-family:"Hind Colombo Medium";}
@font-face
	{font-family:"Hind Colombo SemiBold";}
@font-face
	{font-family:"Hind Guntur";}
@font-face
	{font-family:"Hind Guntur Light";}
@font-face
	{font-family:"Hind Guntur Medium";}
@font-face
	{font-family:"Hind Guntur SemiBold";}
@font-face
	{font-family:"Hind Jalandhar";}
@font-face
	{font-family:"Hind Jalandhar Light";}
@font-face
	{font-family:"Hind Jalandhar Medium";}
@font-face
	{font-family:"Hind Jalandhar SemiBold";}
@font-face
	{font-family:"Hind Kochi";}
@font-face
	{font-family:"Hind Kochi Light";}
@font-face
	{font-family:"Hind Kochi Medium";}
@font-face
	{font-family:"Hind Kochi SemiBold";}
@font-face
	{font-family:"Hind Light";}
@font-face
	{font-family:"Hind Madurai";}
@font-face
	{font-family:"Hind Madurai Light";}
@font-face
	{font-family:"Hind Madurai Medium";}
@font-face
	{font-family:"Hind Madurai SemiBold";}
@font-face
	{font-family:"Hind Medium";}
@font-face
	{font-family:"Hind Mysuru";}
@font-face
	{font-family:"Hind Mysuru Light";}
@font-face
	{font-family:"Hind Mysuru Medium";}
@font-face
	{font-family:"Hind Mysuru SemiBold";}
@font-face
	{font-family:"Hind SemiBold";}
@font-face
	{font-family:"Hind Siliguri";}
@font-face
	{font-family:"Hind Siliguri Light";}
@font-face
	{font-family:"Hind Siliguri Medium";}
@font-face
	{font-family:"Hind Siliguri SemiBold";}
@font-face
	{font-family:"Hind Vadodara";}
@font-face
	{font-family:"Hind Vadodara Light";}
@font-face
	{font-family:"Hind Vadodara Medium";}
@font-face
	{font-family:"Hind Vadodara SemiBold";}
@font-face
	{font-family:"IBM Plex Mono";}
@font-face
	{font-family:"IBM Plex Mono ExtraLight";}
@font-face
	{font-family:"IBM Plex Mono Light";}
@font-face
	{font-family:"IBM Plex Mono Medium";}
@font-face
	{font-family:"IBM Plex Mono SemiBold";}
@font-face
	{font-family:"IBM Plex Mono Thin";}
@font-face
	{font-family:"IBM Plex Sans";}
@font-face
	{font-family:"IBM Plex Sans Condensed";}
@font-face
	{font-family:"IBM Plex Sans Condensed Light";}
@font-face
	{font-family:"IBM Plex Sans Condensed Medium";}
@font-face
	{font-family:"IBM Plex Sans Condensed Thin";}
@font-face
	{font-family:"IBM Plex Sans ExtraLight";}
@font-face
	{font-family:"IBM Plex Sans Light";}
@font-face
	{font-family:"IBM Plex Sans Medium";}
@font-face
	{font-family:"IBM Plex Sans SemiBold";}
@font-face
	{font-family:"IBM Plex Sans Thin";}
@font-face
	{font-family:"IBM Plex Serif";}
@font-face
	{font-family:"IBM Plex Serif ExtraLight";}
@font-face
	{font-family:"IBM Plex Serif Light";}
@font-face
	{font-family:"IBM Plex Serif Medium";}
@font-face
	{font-family:"IBM Plex Serif SemiBold";}
@font-face
	{font-family:"IBM Plex Serif Thin";}
@font-face
	{font-family:Inconsolata;}
@font-face
	{font-family:"Inconsolata Black";}
@font-face
	{font-family:"Inconsolata Bold";}
@font-face
	{font-family:"Inconsolata Condensed";}
@font-face
	{font-family:"Inconsolata Condensed Black";}
@font-face
	{font-family:"Inconsolata Condensed Bold";}
@font-face
	{font-family:"Inconsolata Condensed ExtraBold";}
@font-face
	{font-family:"Inconsolata Condensed Light";}
@font-face
	{font-family:"Inconsolata Condensed Medium";}
@font-face
	{font-family:"Inconsolata Condensed SemiBold";}
@font-face
	{font-family:"Inconsolata Expanded";}
@font-face
	{font-family:"Inconsolata Expanded Black";}
@font-face
	{font-family:"Inconsolata Expanded Bold";}
@font-face
	{font-family:"Inconsolata Expanded ExtraBold";}
@font-face
	{font-family:"Inconsolata Expanded ExtraLight";}
@font-face
	{font-family:"Inconsolata Expanded Light";}
@font-face
	{font-family:"Inconsolata Expanded Medium";}
@font-face
	{font-family:"Inconsolata Expanded SemiBold";}
@font-face
	{font-family:"Inconsolata ExtraBold";}
@font-face
	{font-family:"Inconsolata ExtraCondensed";}
@font-face
	{font-family:"Inconsolata ExtraCondensed Bold";}
@font-face
	{font-family:"Inconsolata ExtraExpanded";}
@font-face
	{font-family:"Inconsolata ExtraExpanded Black";}
@font-face
	{font-family:"Inconsolata ExtraExpanded Bold";}
@font-face
	{font-family:"Inconsolata ExtraExpanded Light";}
@font-face
	{font-family:"Inconsolata ExtraLight";}
@font-face
	{font-family:"Inconsolata Light";}
@font-face
	{font-family:"Inconsolata Medium";}
@font-face
	{font-family:"Inconsolata SemiBold";}
@font-face
	{font-family:"Inconsolata SemiCondensed";}
@font-face
	{font-family:"Inconsolata SemiCondensed Black";}
@font-face
	{font-family:"Inconsolata SemiCondensed Bold";}
@font-face
	{font-family:"Inconsolata SemiCondensed Light";}
@font-face
	{font-family:"Inconsolata SemiExpanded";}
@font-face
	{font-family:"Inconsolata SemiExpanded Black";}
@font-face
	{font-family:"Inconsolata SemiExpanded Bold";}
@font-face
	{font-family:"Inconsolata SemiExpanded Light";}
@font-face
	{font-family:"Inconsolata SemiExpanded Medium";}
@font-face
	{font-family:"Inconsolata UltraCondensed";}
@font-face
	{font-family:"Inconsolata UltraCondensed Bold";}
@font-face
	{font-family:"Inconsolata UltraExpanded";}
@font-face
	{font-family:"Inconsolata UltraExpanded Black";}
@font-face
	{font-family:"Inconsolata UltraExpanded Bold";}
@font-face
	{font-family:"Inconsolata UltraExpanded Light";}
@font-face
	{font-family:IrisUPC;}
@font-face
	{font-family:"Iskoola Pota";}
@font-face
	{font-family:Italianno;}
@font-face
	{font-family:JasmineUPC;}
@font-face
	{font-family:"Josefin Sans";}
@font-face
	{font-family:"Josefin Sans Bold";}
@font-face
	{font-family:"Josefin Sans Light";}
@font-face
	{font-family:"Josefin Sans SemiBold";}
@font-face
	{font-family:"Josefin Sans Thin";}
@font-face
	{font-family:"Josefin Slab";}
@font-face
	{font-family:"Josefin Slab Light";}
@font-face
	{font-family:"Josefin Slab SemiBold";}
@font-face
	{font-family:"Josefin Slab Thin";}
@font-face
	{font-family:Jumble;}
@font-face
	{font-family:KaiTi;}
@font-face
	{font-family:Kalinga;}
@font-face
	{font-family:Karla;}
@font-face
	{font-family:"Karla ExtraBold";}
@font-face
	{font-family:"Karla ExtraLight";}
@font-face
	{font-family:"Karla Light";}
@font-face
	{font-family:"Karla Medium";}
@font-face
	{font-family:"Karla Tamil Inclined";}
@font-face
	{font-family:"Karla Tamil Upright";}
@font-face
	{font-family:Kartika;}
@font-face
	{font-family:Kermit;}
@font-face
	{font-family:"Kermit Condensed";}
@font-face
	{font-family:"Kermit Expanded";}
@font-face
	{font-family:"Kermit Extrabold";}
@font-face
	{font-family:"Kermit Extrabold Condensed";}
@font-face
	{font-family:"Kermit Extrabold Expanded";}
@font-face
	{font-family:"Kermit Extralight";}
@font-face
	{font-family:"Kermit Extralight Condensed";}
@font-face
	{font-family:"Kermit Extralight Expanded";}
@font-face
	{font-family:"Kermit Light";}
@font-face
	{font-family:"Kermit Light Condensed";}
@font-face
	{font-family:"Kermit Light Expanded";}
@font-face
	{font-family:"Kermit Semibold";}
@font-face
	{font-family:"Kermit Semibold Condensed";}
@font-face
	{font-family:"Kermit Semibold Expanded";}
@font-face
	{font-family:"Kermit Thin";}
@font-face
	{font-family:"Kermit Thin Condensed";}
@font-face
	{font-family:"Kermit Thin Expanded";}
@font-face
	{font-family:"Khmer UI";}
@font-face
	{font-family:Kigelia;}
@font-face
	{font-family:"Kigelia Arabic";}
@font-face
	{font-family:"Kigelia Arabic Light";}
@font-face
	{font-family:"Kigelia Light";}
@font-face
	{font-family:"Klee One";}
@font-face
	{font-family:"Klee One SemiBold";}
@font-face
	{font-family:KodchiangUPC;}
@font-face
	{font-family:Kokila;}
@font-face
	{font-family:Krub;}
@font-face
	{font-family:"Krub ExtraLight";}
@font-face
	{font-family:"Krub Light";}
@font-face
	{font-family:"Krub Medium";}
@font-face
	{font-family:"Krub SemiBold";}
@font-face
	{font-family:Lalezar;}
@font-face
	{font-family:"Lao UI";}
@font-face
	{font-family:Lato;}
@font-face
	{font-family:"Lato Black";}
@font-face
	{font-family:"Lato ExtraBold";}
@font-face
	{font-family:"Lato ExtraLight";}
@font-face
	{font-family:"Lato Light";}
@font-face
	{font-family:"Lato Medium";}
@font-face
	{font-family:"Lato SemiBold";}
@font-face
	{font-family:"Lato Thin";}
@font-face
	{font-family:"Levenim MT";}
@font-face
	{font-family:"Libre Barcode 128";}
@font-face
	{font-family:"Libre Barcode 128 Text";}
@font-face
	{font-family:"Libre Barcode 39";}
@font-face
	{font-family:"Libre Barcode 39 Extended";}
@font-face
	{font-family:"Libre Barcode 39 Extended Text";}
@font-face
	{font-family:"Libre Barcode 39 Text";}
@font-face
	{font-family:"Libre Barcode EAN13 Text";}
@font-face
	{font-family:"Libre Baskerville";}
@font-face
	{font-family:"Libre Franklin";}
@font-face
	{font-family:"Libre Franklin Black";}
@font-face
	{font-family:"Libre Franklin ExtraBold";}
@font-face
	{font-family:"Libre Franklin ExtraLight";}
@font-face
	{font-family:"Libre Franklin Light";}
@font-face
	{font-family:"Libre Franklin Medium";}
@font-face
	{font-family:"Libre Franklin SemiBold";}
@font-face
	{font-family:"Libre Franklin Thin";}
@font-face
	{font-family:Ligconsolata;}
@font-face
	{font-family:LilyUPC;}
@font-face
	{font-family:Livvic;}
@font-face
	{font-family:"Livvic Black";}
@font-face
	{font-family:"Livvic ExtraLight";}
@font-face
	{font-family:"Livvic Light";}
@font-face
	{font-family:"Livvic Medium";}
@font-face
	{font-family:"Livvic SemiBold";}
@font-face
	{font-family:"Livvic Thin";}
@font-face
	{font-family:Lobster;}
@font-face
	{font-family:"Lobster Two";}
@font-face
	{font-family:Lora;}
@font-face
	{font-family:"Lora Medium";}
@font-face
	{font-family:"Mangal Pro";}
@font-face
	{font-family:Meddon;}
@font-face
	{font-family:Meiryo;}
@font-face
	{font-family:"Meiryo UI";}
@font-face
	{font-family:Merriweather;}
@font-face
	{font-family:"Merriweather Black";}
@font-face
	{font-family:"Merriweather Light";}
@font-face
	{font-family:"Merriweather Sans";}
@font-face
	{font-family:"Merriweather Sans ExtraBold";}
@font-face
	{font-family:"Merriweather Sans Light";}
@font-face
	{font-family:"Microsoft GothicNeo";}
@font-face
	{font-family:"Microsoft GothicNeo Light";}
@font-face
	{font-family:MingLiU_HKSCS;}
@font-face
	{font-family:MingLiU_MSCS;}
@font-face
	{font-family:MingLiU_MSCS-ExtB;}
@font-face
	{font-family:Miriam;}
@font-face
	{font-family:"Miriam Fixed";}
@font-face
	{font-family:Mitr;}
@font-face
	{font-family:"Mitr ExtraLight";}
@font-face
	{font-family:"Mitr Light";}
@font-face
	{font-family:"Mitr Medium";}
@font-face
	{font-family:"Mitr SemiBold";}
@font-face
	{font-family:"Modern Love";}
@font-face
	{font-family:"Modern Love Caps";}
@font-face
	{font-family:"Modern Love Grunge";}
@font-face
	{font-family:Montserrat;}
@font-face
	{font-family:"Montserrat Black";}
@font-face
	{font-family:"Montserrat ExtraBold";}
@font-face
	{font-family:"Montserrat ExtraLight";}
@font-face
	{font-family:"Montserrat Light";}
@font-face
	{font-family:"Montserrat Medium";}
@font-face
	{font-family:"Montserrat SemiBold";}
@font-face
	{font-family:"Montserrat Thin";}
@font-face
	{font-family:MoolBoran;}
@font-face
	{font-family:"Mr Gabe";}
@font-face
	{font-family:"MS PMincho";}
@font-face
	{font-family:"Mystical Woods Rough Script";}
@font-face
	{font-family:"Mystical Woods Smooth Script";}
@font-face
	{font-family:"Nanum Brush Script";}
@font-face
	{font-family:"Nanum Pen";}
@font-face
	{font-family:NanumGothic;}
@font-face
	{font-family:NanumGothicCoding;}
@font-face
	{font-family:NanumGothicExtraBold;}
@font-face
	{font-family:NanumMyeongjo;}
@font-face
	{font-family:NanumMyeongjoExtraBold;}
@font-face
	{font-family:Narkisim;}
@font-face
	{font-family:"Neue Haas Grotesk Text Pro";}
@font-face
	{font-family:"News Gothic MT";}
@font-face
	{font-family:Nina;}
@font-face
	{font-family:"Nirmala Text";}
@font-face
	{font-family:"Nirmala Text Semilight";}
@font-face
	{font-family:"Nordique Inline";}
@font-face
	{font-family:"Noto Music";}
@font-face
	{font-family:"Noto Nastaliq Urdu";}
@font-face
	{font-family:"Noto Sans AnatoHiero";}
@font-face
	{font-family:"Noto Sans Avestan";}
@font-face
	{font-family:"Noto Sans Bassa Vah";}
@font-face
	{font-family:"Noto Sans Batak";}
@font-face
	{font-family:"Noto Sans Bhaiksuki";}
@font-face
	{font-family:"Noto Sans Brahmi";}
@font-face
	{font-family:"Noto Sans Buginese";}
@font-face
	{font-family:"Noto Sans Buhid";}
@font-face
	{font-family:"Noto Sans Carian";}
@font-face
	{font-family:"Noto Sans CaucAlban";}
@font-face
	{font-family:"Noto Sans Chakma";}
@font-face
	{font-family:"Noto Sans Coptic";}
@font-face
	{font-family:"Noto Sans Cuneiform";}
@font-face
	{font-family:"Noto Sans Cypriot";}
@font-face
	{font-family:"Noto Sans Deseret";}
@font-face
	{font-family:"Noto Sans Devanagari";}
@font-face
	{font-family:"Noto Sans Devanagari Black";}
@font-face
	{font-family:"Noto Sans Devanagari ExtraBold";}
@font-face
	{font-family:"Noto Sans Devanagari ExtraLight";}
@font-face
	{font-family:"Noto Sans Devanagari Light";}
@font-face
	{font-family:"Noto Sans Devanagari Medium";}
@font-face
	{font-family:"Noto Sans Devanagari SemiBold";}
@font-face
	{font-family:"Noto Sans Devanagari Thin";}
@font-face
	{font-family:"Noto Sans Devanagari UI";}
@font-face
	{font-family:"Noto Sans Devanagari UI Black";}
@font-face
	{font-family:"Noto Sans Devanagari UI Light";}
@font-face
	{font-family:"Noto Sans Devanagari UI Medium";}
@font-face
	{font-family:"Noto Sans Devanagari UI Thin";}
@font-face
	{font-family:"Noto Sans Duployan";}
@font-face
	{font-family:"Noto Sans EgyptHiero";}
@font-face
	{font-family:"Noto Sans Elbasan";}
@font-face
	{font-family:"Noto Sans Elymaic";}
@font-face
	{font-family:"Noto Sans Glagolitic";}
@font-face
	{font-family:"Noto Sans Gothic";}
@font-face
	{font-family:"Noto Sans Grantha";}
@font-face
	{font-family:"Noto Sans Gujarati";}
@font-face
	{font-family:"Noto Sans Gujarati Black";}
@font-face
	{font-family:"Noto Sans Gujarati ExtraBold";}
@font-face
	{font-family:"Noto Sans Gujarati ExtraLight";}
@font-face
	{font-family:"Noto Sans Gujarati Light";}
@font-face
	{font-family:"Noto Sans Gujarati Medium";}
@font-face
	{font-family:"Noto Sans Gujarati SemiBold";}
@font-face
	{font-family:"Noto Sans Gujarati Thin";}
@font-face
	{font-family:"Noto Sans Gujarati UI";}
@font-face
	{font-family:"Noto Sans Gujarati UI Black";}
@font-face
	{font-family:"Noto Sans Gujarati UI ExtraBold";}
@font-face
	{font-family:"Noto Sans Gujarati UI Light";}
@font-face
	{font-family:"Noto Sans Gujarati UI Medium";}
@font-face
	{font-family:"Noto Sans Gujarati UI SemiBold";}
@font-face
	{font-family:"Noto Sans Gujarati UI Thin";}
@font-face
	{font-family:"Noto Sans Gunjala Gondi";}
@font-face
	{font-family:"Noto Sans Hanunoo";}
@font-face
	{font-family:"Noto Sans Hatran";}
@font-face
	{font-family:"Noto Sans ImpAramaic";}
@font-face
	{font-family:"Noto Sans Indic Siyaq Numbers";}
@font-face
	{font-family:"Noto Sans InsPahlavi";}
@font-face
	{font-family:"Noto Sans InsParthi";}
@font-face
	{font-family:"Noto Sans Javanese";}
@font-face
	{font-family:"Noto Sans Kaithi";}
@font-face
	{font-family:"Noto Sans Kharoshthi";}
@font-face
	{font-family:"Noto Sans Khojki";}
@font-face
	{font-family:"Noto Sans Khudawadi";}
@font-face
	{font-family:"Noto Sans Lepcha";}
@font-face
	{font-family:"Noto Sans Limbu";}
@font-face
	{font-family:"Noto Sans Linear A";}
@font-face
	{font-family:"Noto Sans Linear B";}
@font-face
	{font-family:"Noto Sans Lycian";}
@font-face
	{font-family:"Noto Sans Lydian";}
@font-face
	{font-family:"Noto Sans Mahajani";}
@font-face
	{font-family:"Noto Sans Mandaic";}
@font-face
	{font-family:"Noto Sans Manichaean";}
@font-face
	{font-family:"Noto Sans Marchen";}
@font-face
	{font-family:"Noto Sans Masaram Gondi";}
@font-face
	{font-family:"Noto Sans Math";}
@font-face
	{font-family:"Noto Sans Mayan Numerals";}
@font-face
	{font-family:"Noto Sans Mende Kikakui";}
@font-face
	{font-family:"Noto Sans Meroitic";}
@font-face
	{font-family:"Noto Sans Miao";}
@font-face
	{font-family:"Noto Sans Modi";}
@font-face
	{font-family:"Noto Sans Mongolian";}
@font-face
	{font-family:"Noto Sans Mro";}
@font-face
	{font-family:"Noto Sans Multani";}
@font-face
	{font-family:"Noto Sans Myanmar";}
@font-face
	{font-family:"Noto Sans Myanmar Blk";}
@font-face
	{font-family:"Noto Sans Myanmar ExtBd";}
@font-face
	{font-family:"Noto Sans Myanmar ExtLt";}
@font-face
	{font-family:"Noto Sans Myanmar Light";}
@font-face
	{font-family:"Noto Sans Myanmar Med";}
@font-face
	{font-family:"Noto Sans Myanmar SemBd";}
@font-face
	{font-family:"Noto Sans Myanmar Thin";}
@font-face
	{font-family:"Noto Sans Myanmar UI";}
@font-face
	{font-family:"Noto Sans Myanmar UI Black";}
@font-face
	{font-family:"Noto Sans Myanmar UI ExtraBold";}
@font-face
	{font-family:"Noto Sans Myanmar UI ExtraLight";}
@font-face
	{font-family:"Noto Sans Myanmar UI Light";}
@font-face
	{font-family:"Noto Sans Myanmar UI Medium";}
@font-face
	{font-family:"Noto Sans Myanmar UI SemiBold";}
@font-face
	{font-family:"Noto Sans Myanmar UI Thin";}
@font-face
	{font-family:"Noto Sans Nabataean";}
@font-face
	{font-family:"Noto Sans Newa";}
@font-face
	{font-family:"Noto Sans NewTaiLue";}
@font-face
	{font-family:"Noto Sans NKo";}
@font-face
	{font-family:"Noto Sans Nushu";}
@font-face
	{font-family:"Noto Sans Ogham";}
@font-face
	{font-family:"Noto Sans Old Italic";}
@font-face
	{font-family:"Noto Sans Old Permic";}
@font-face
	{font-family:"Noto Sans Old Turkic";}
@font-face
	{font-family:"Noto Sans OldHung";}
@font-face
	{font-family:"Noto Sans OldNorArab";}
@font-face
	{font-family:"Noto Sans OldPersian";}
@font-face
	{font-family:"Noto Sans OldSogdian";}
@font-face
	{font-family:"Noto Sans OldSouArab";}
@font-face
	{font-family:"Noto Sans Oriya";}
@font-face
	{font-family:"Noto Sans Oriya Blk";}
@font-face
	{font-family:"Noto Sans Oriya Thin";}
@font-face
	{font-family:"Noto Sans Oriya UI";}
@font-face
	{font-family:"Noto Sans Oriya UI Blk";}
@font-face
	{font-family:"Noto Sans Oriya UI Thin";}
@font-face
	{font-family:"Noto Sans Osage";}
@font-face
	{font-family:"Noto Sans Osmanya";}
@font-face
	{font-family:"Noto Sans Pahawh Hmong";}
@font-face
	{font-family:"Noto Sans Palmyrene";}
@font-face
	{font-family:"Noto Sans PauCinHau";}
@font-face
	{font-family:"Noto Sans PhagsPa";}
@font-face
	{font-family:"Noto Sans Phoenician";}
@font-face
	{font-family:"Noto Sans PsaPahlavi";}
@font-face
	{font-family:"Noto Sans Rejang";}
@font-face
	{font-family:"Noto Sans Runic";}
@font-face
	{font-family:"Noto Sans Samaritan";}
@font-face
	{font-family:"Noto Sans Saurashtra";}
@font-face
	{font-family:"Noto Sans Sharada";}
@font-face
	{font-family:"Noto Sans Shavian";}
@font-face
	{font-family:"Noto Sans Siddham";}
@font-face
	{font-family:"Noto Sans Sogdian";}
@font-face
	{font-family:"Noto Sans Soyombo";}
@font-face
	{font-family:"Noto Sans Syloti Nagri";}
@font-face
	{font-family:"Noto Sans Symbols2";}
@font-face
	{font-family:"Noto Sans Syriac";}
@font-face
	{font-family:"Noto Sans Syriac Black";}
@font-face
	{font-family:"Noto Sans Syriac Thin";}
@font-face
	{font-family:"Noto Sans Tagalog";}
@font-face
	{font-family:"Noto Sans Tagbanwa";}
@font-face
	{font-family:"Noto Sans Tai Le";}
@font-face
	{font-family:"Noto Sans Tai Viet";}
@font-face
	{font-family:"Noto Sans Takri";}
@font-face
	{font-family:"Noto Sans Tamil Supplement";}
@font-face
	{font-family:"Noto Sans Thai Looped Black";}
@font-face
	{font-family:"Noto Sans Thai Looped Bold";}
@font-face
	{font-family:"Noto Sans Thai Looped ExtLight";}
@font-face
	{font-family:"Noto Sans Thai Looped Extrabold";}
@font-face
	{font-family:"Noto Sans Thai Looped Light";}
@font-face
	{font-family:"Noto Sans Thai Looped Medium";}
@font-face
	{font-family:"Noto Sans Thai Looped Regular";}
@font-face
	{font-family:"Noto Sans Thai Looped Semibold";}
@font-face
	{font-family:"Noto Sans Thai Looped Thin";}
@font-face
	{font-family:"Noto Sans Tifinagh";}
@font-face
	{font-family:"Noto Sans Tirhuta";}
@font-face
	{font-family:"Noto Sans Ugaritic";}
@font-face
	{font-family:"Noto Sans Vai";}
@font-face
	{font-family:"Noto Sans Wancho";}
@font-face
	{font-family:"Noto Sans WarangCiti";}
@font-face
	{font-family:"Noto Sans Yi";}
@font-face
	{font-family:"Noto Sans Zanabazar";}
@font-face
	{font-family:"Noto Serif Ahom";}
@font-face
	{font-family:"Noto Serif Balinese";}
@font-face
	{font-family:"Noto Serif Dogra";}
@font-face
	{font-family:"Noto Serif Grantha";}
@font-face
	{font-family:"Noto Serif Myanmar";}
@font-face
	{font-family:"Noto Serif Myanmar Blk";}
@font-face
	{font-family:"Noto Serif Myanmar ExtBd";}
@font-face
	{font-family:"Noto Serif Myanmar ExtLt";}
@font-face
	{font-family:"Noto Serif Myanmar Light";}
@font-face
	{font-family:"Noto Serif Myanmar Med";}
@font-face
	{font-family:"Noto Serif Myanmar SemBd";}
@font-face
	{font-family:"Noto Serif Myanmar Thin";}
@font-face
	{font-family:"Noto Serif Tangut";}
@font-face
	{font-family:"Noto Traditional Nushu";}
@font-face
	{font-family:Nunito;}
@font-face
	{font-family:"Nunito Black";}
@font-face
	{font-family:"Nunito ExtraBold";}
@font-face
	{font-family:"Nunito ExtraLight";}
@font-face
	{font-family:"Nunito Light";}
@font-face
	{font-family:"Nunito Sans";}
@font-face
	{font-family:"Nunito Sans Black";}
@font-face
	{font-family:"Nunito Sans ExtraBold";}
@font-face
	{font-family:"Nunito Sans ExtraLight";}
@font-face
	{font-family:"Nunito Sans Light";}
@font-face
	{font-family:"Nunito Sans SemiBold";}
@font-face
	{font-family:"Nunito SemiBold";}
@font-face
	{font-family:Nyala;}
@font-face
	{font-family:OCRB;}
@font-face
	{font-family:"Open Sans";}
@font-face
	{font-family:"Open Sans ExtraBold";}
@font-face
	{font-family:"Open Sans Light";}
@font-face
	{font-family:"Open Sans SemiBold";}
@font-face
	{font-family:Oranienbaum;}
@font-face
	{font-family:Oswald;}
@font-face
	{font-family:"Oswald ExtraLight";}
@font-face
	{font-family:"Oswald Light";}
@font-face
	{font-family:"Oswald Medium";}
@font-face
	{font-family:"Oswald SemiBold";}
@font-face
	{font-family:Oxygen;}
@font-face
	{font-family:"Oxygen Light";}
@font-face
	{font-family:"Oxygen Mono";}
@font-face
	{font-family:Pacifico;}
@font-face
	{font-family:Palanquin;}
@font-face
	{font-family:"Palanquin ExtraLight";}
@font-face
	{font-family:"Palanquin Light";}
@font-face
	{font-family:"Palanquin Medium";}
@font-face
	{font-family:"Palanquin SemiBold";}
@font-face
	{font-family:"Palanquin Thin";}
@font-face
	{font-family:"Patrick Hand";}
@font-face
	{font-family:"Patrick Hand SC";}
@font-face
	{font-family:"Petit Formal Script";}
@font-face
	{font-family:"Plantagenet Cherokee";}
@font-face
	{font-family:"Playfair Display";}
@font-face
	{font-family:"Playfair Display Black";}
@font-face
	{font-family:"Playfair Display SC";}
@font-face
	{font-family:"Playfair Display SC Black";}
@font-face
	{font-family:"Poiret One";}
@font-face
	{font-family:Poppins;}
@font-face
	{font-family:"Poppins Black";}
@font-face
	{font-family:"Poppins ExtraBold";}
@font-face
	{font-family:"Poppins ExtraLight";}
@font-face
	{font-family:"Poppins Light";}
@font-face
	{font-family:"Poppins Medium";}
@font-face
	{font-family:"Poppins SemiBold";}
@font-face
	{font-family:"Poppins Thin";}
@font-face
	{font-family:Posterama;}
@font-face
	{font-family:Pridi;}
@font-face
	{font-family:"Pridi ExtraLight";}
@font-face
	{font-family:"Pridi Light";}
@font-face
	{font-family:"Pridi Medium";}
@font-face
	{font-family:"Pridi SemiBold";}
@font-face
	{font-family:Prompt;}
@font-face
	{font-family:"Prompt Black";}
@font-face
	{font-family:"Prompt ExtraBold";}
@font-face
	{font-family:"Prompt ExtraLight";}
@font-face
	{font-family:"Prompt Light";}
@font-face
	{font-family:"Prompt Medium";}
@font-face
	{font-family:"Prompt SemiBold";}
@font-face
	{font-family:"Prompt Thin";}
@font-face
	{font-family:"PT Mono";}
@font-face
	{font-family:"PT Sans";}
@font-face
	{font-family:"PT Sans Caption";}
@font-face
	{font-family:"PT Sans Narrow";}
@font-face
	{font-family:"PT Serif";}
@font-face
	{font-family:"PT Serif Caption";}
@font-face
	{font-family:Quattrocento;}
@font-face
	{font-family:"Quattrocento Sans";}
@font-face
	{font-family:Questrial;}
@font-face
	{font-family:"Quire Sans";}
@font-face
	{font-family:"Quire Sans Light";}
@font-face
	{font-family:"Quire Sans Pro Light";}
@font-face
	{font-family:Raleway;}
@font-face
	{font-family:"Raleway Black";}
@font-face
	{font-family:"Raleway ExtraBold";}
@font-face
	{font-family:"Raleway ExtraLight";}
@font-face
	{font-family:"Raleway Light";}
@font-face
	{font-family:"Raleway Medium";}
@font-face
	{font-family:"Raleway SemiBold";}
@font-face
	{font-family:"Raleway Thin";}
@font-face
	{font-family:"Rastanty Cortez";}
@font-face
	{font-family:Roboto;}
@font-face
	{font-family:"Roboto Black";}
@font-face
	{font-family:"Roboto Condensed";}
@font-face
	{font-family:"Roboto Condensed Light";}
@font-face
	{font-family:"Roboto Condensed Medium";}
@font-face
	{font-family:"Roboto Light";}
@font-face
	{font-family:"Roboto Medium";}
@font-face
	{font-family:"Roboto Mono";}
@font-face
	{font-family:"Roboto Mono Light";}
@font-face
	{font-family:"Roboto Mono Medium";}
@font-face
	{font-family:"Roboto Mono Thin";}
@font-face
	{font-family:"Roboto Serif 20pt";}
@font-face
	{font-family:"Roboto Serif 20pt Black";}
@font-face
	{font-family:"Roboto Serif 20pt ExtraBold";}
@font-face
	{font-family:"Roboto Serif 20pt ExtraLight";}
@font-face
	{font-family:"Roboto Serif 20pt Light";}
@font-face
	{font-family:"Roboto Serif 20pt Medium";}
@font-face
	{font-family:"Roboto Serif 20pt SemiBold";}
@font-face
	{font-family:"Roboto Serif 20pt Thin";}
@font-face
	{font-family:"Roboto Slab";}
@font-face
	{font-family:"Roboto Slab Black";}
@font-face
	{font-family:"Roboto Slab ExtraBold";}
@font-face
	{font-family:"Roboto Slab ExtraLight";}
@font-face
	{font-family:"Roboto Slab Light";}
@font-face
	{font-family:"Roboto Slab Medium";}
@font-face
	{font-family:"Roboto Slab SemiBold";}
@font-face
	{font-family:"Roboto Slab Thin";}
@font-face
	{font-family:"Roboto Thin";}
@font-face
	{font-family:"Rockwell Light";}
@font-face
	{font-family:"Rockwell Nova";}
@font-face
	{font-family:"Rockwell Nova Cond";}
@font-face
	{font-family:"Rockwell Nova Cond Light";}
@font-face
	{font-family:"Rockwell Nova Extra Bold";}
@font-face
	{font-family:"Rockwell Nova Light";}
@font-face
	{font-family:Rod;}
@font-face
	{font-family:"Sabon Next LT";}
@font-face
	{font-family:Sacramento;}
@font-face
	{font-family:Sagona;}
@font-face
	{font-family:"Sagona Book";}
@font-face
	{font-family:"Sagona ExtraLight";}
@font-face
	{font-family:"Sakkal Majalla";}
@font-face
	{font-family:"Sanskrit Text";}
@font-face
	{font-family:Seaford;}
@font-face
	{font-family:"Seaford Display";}
@font-face
	{font-family:"Secular One";}
@font-face
	{font-family:"Segoe Marker";}
@font-face
	{font-family:"Segoe Pro";}
@font-face
	{font-family:"Segoe Pro Black";}
@font-face
	{font-family:"Segoe Pro Cond";}
@font-face
	{font-family:"Segoe Pro Display";}
@font-face
	{font-family:"Segoe Pro Display Light";}
@font-face
	{font-family:"Segoe Pro Display Semibold";}
@font-face
	{font-family:"Segoe Pro Display SemiLight";}
@font-face
	{font-family:"Segoe Pro Light";}
@font-face
	{font-family:"Segoe Pro Semibold";}
@font-face
	{font-family:"Segoe Pro SemiLight";}
@font-face
	{font-family:"Segoe Sans Display";}
@font-face
	{font-family:"Segoe Sans Display Black";}
@font-face
	{font-family:"Segoe Sans Display ExtraBold";}
@font-face
	{font-family:"Segoe Sans Display Hairline";}
@font-face
	{font-family:"Segoe Sans Display Light";}
@font-face
	{font-family:"Segoe Sans Display Semibold";}
@font-face
	{font-family:"Segoe Sans Display Semilight";}
@font-face
	{font-family:"Segoe Sans Display Thin";}
@font-face
	{font-family:"Segoe Sans Small";}
@font-face
	{font-family:"Segoe Sans Small Black";}
@font-face
	{font-family:"Segoe Sans Small ExtraBold";}
@font-face
	{font-family:"Segoe Sans Small Hairline";}
@font-face
	{font-family:"Segoe Sans Small Light";}
@font-face
	{font-family:"Segoe Sans Small Semibold";}
@font-face
	{font-family:"Segoe Sans Small Semilight";}
@font-face
	{font-family:"Segoe Sans Small Thin";}
@font-face
	{font-family:"Segoe Sans Text";}
@font-face
	{font-family:"Segoe Sans Text Black";}
@font-face
	{font-family:"Segoe Sans Text ExtraBold";}
@font-face
	{font-family:"Segoe Sans Text Hairline";}
@font-face
	{font-family:"Segoe Sans Text Light";}
@font-face
	{font-family:"Segoe Sans Text Semibold";}
@font-face
	{font-family:"Segoe Sans Text Semilight";}
@font-face
	{font-family:"Segoe Sans Text Thin";}
@font-face
	{font-family:"Segoe Serif Banner";}
@font-face
	{font-family:"Segoe Serif Banner Light";}
@font-face
	{font-family:"Segoe Serif Banner Semibold";}
@font-face
	{font-family:"Segoe Serif Banner Semilight";}
@font-face
	{font-family:"Segoe Serif Display";}
@font-face
	{font-family:"Segoe Serif Display Light";}
@font-face
	{font-family:"Segoe Serif Display Semibold";}
@font-face
	{font-family:"Segoe Serif Display Semilight";}
@font-face
	{font-family:"Segoe Serif Text";}
@font-face
	{font-family:"Segoe Serif Text Light";}
@font-face
	{font-family:"Segoe Serif Text Semibold";}
@font-face
	{font-family:"Segoe Serif Text Semilight";}
@font-face
	{font-family:"Segoe UI Emoji L";}
@font-face
	{font-family:"Segoe Xbox Symbol";}
@font-face
	{font-family:Selawik;}
@font-face
	{font-family:"Selawik Light";}
@font-face
	{font-family:"Selawik Semibold";}
@font-face
	{font-family:"Shadows Into Light Two";}
@font-face
	{font-family:"Shonar Bangla";}
@font-face
	{font-family:"Simplified Arabic";}
@font-face
	{font-family:"Simplified Arabic Fixed";}
@font-face
	{font-family:Skeena;}
@font-face
	{font-family:"Skeena Display";}
@font-face
	{font-family:"Source Code Pro";}
@font-face
	{font-family:"Source Code Pro Black";}
@font-face
	{font-family:"Source Code Pro ExtraLight";}
@font-face
	{font-family:"Source Code Pro Light";}
@font-face
	{font-family:"Source Code Pro Medium";}
@font-face
	{font-family:"Source Code Pro Semibold";}
@font-face
	{font-family:"Source Sans Pro";}
@font-face
	{font-family:"Source Sans Pro Black";}
@font-face
	{font-family:"Source Sans Pro ExtraLight";}
@font-face
	{font-family:"Source Sans Pro Light";}
@font-face
	{font-family:"Source Sans Pro SemiBold";}
@font-face
	{font-family:"Source Serif Pro";}
@font-face
	{font-family:"Source Serif Pro Black";}
@font-face
	{font-family:"Source Serif Pro ExtraLight";}
@font-face
	{font-family:"Source Serif Pro Light";}
@font-face
	{font-family:"Source Serif Pro SemiBold";}
@font-face
	{font-family:"Speak Pro";}
@font-face
	{font-family:"Speak Pro Light";}
@font-face
	{font-family:Staatliches;}
@font-face
	{font-family:STCaiyun;}
@font-face
	{font-family:STFangsong;}
@font-face
	{font-family:STHupo;}
@font-face
	{font-family:STKaiti;}
@font-face
	{font-family:STXihei;}
@font-face
	{font-family:STXingkai;}
@font-face
	{font-family:STXinwei;}
@font-face
	{font-family:STZhongsong;}
@font-face
	{font-family:"Suez One";}
@font-face
	{font-family:Tenorite;}
@font-face
	{font-family:"Tenorite Display";}
@font-face
	{font-family:"TH SarabunPSK";}
@font-face
	{font-family:"The Hand";}
@font-face
	{font-family:"The Hand Black";}
@font-face
	{font-family:"The Hand Extrablack";}
@font-face
	{font-family:"The Hand Light";}
@font-face
	{font-family:"The Serif Hand";}
@font-face
	{font-family:"The Serif Hand Black";}
@font-face
	{font-family:"The Serif Hand Extrablack";}
@font-face
	{font-family:"The Serif Hand Light";}
@font-face
	{font-family:"Tisa Offc Serif Pro";}
@font-face
	{font-family:"Tisa Offc Serif Pro Thin";}
@font-face
	{font-family:"Titillium Web";}
@font-face
	{font-family:"Titillium Web Black";}
@font-face
	{font-family:"Titillium Web ExtraLight";}
@font-face
	{font-family:"Titillium Web Light";}
@font-face
	{font-family:"Titillium Web SemiBold";}
@font-face
	{font-family:"Trade Gothic Inline";}
@font-face
	{font-family:"Trade Gothic Next";}
@font-face
	{font-family:"Trade Gothic Next Cond";}
@font-face
	{font-family:"Trade Gothic Next Heavy";}
@font-face
	{font-family:"Trade Gothic Next HvyCd";}
@font-face
	{font-family:"Trade Gothic Next Light";}
@font-face
	{font-family:"Trade Gothic Next Rounded";}
@font-face
	{font-family:"Traditional Arabic";}
@font-face
	{font-family:Trirong;}
@font-face
	{font-family:"Trirong Black";}
@font-face
	{font-family:"Trirong ExtraBold";}
@font-face
	{font-family:"Trirong ExtraLight";}
@font-face
	{font-family:"Trirong Light";}
@font-face
	{font-family:"Trirong Medium";}
@font-face
	{font-family:"Trirong SemiBold";}
@font-face
	{font-family:"Trirong Thin";}
@font-face
	{font-family:Ubuntu;}
@font-face
	{font-family:"Ubuntu Condensed";}
@font-face
	{font-family:"Ubuntu Light";}
@font-face
	{font-family:"Ubuntu Medium";}
@font-face
	{font-family:"Ubuntu Mono";}
@font-face
	{font-family:"UD Digi Kyokasho N-B";}
@font-face
	{font-family:"UD Digi Kyokasho N-R";}
@font-face
	{font-family:"UD Digi Kyokasho NK-B";}
@font-face
	{font-family:"UD Digi Kyokasho NK-R";}
@font-face
	{font-family:"UD Digi Kyokasho NP-B";}
@font-face
	{font-family:"UD Digi Kyokasho NP-R";}
@font-face
	{font-family:Univers;}
@font-face
	{font-family:"Univers Condensed";}
@font-face
	{font-family:"Univers Condensed Light";}
@font-face
	{font-family:"Univers Light";}
@font-face
	{font-family:"Urdu Typesetting";}
@font-face
	{font-family:Utsaah;}
@font-face
	{font-family:Vani;}
@font-face
	{font-family:"Varela Round";}
@font-face
	{font-family:"Verdana Pro";}
@font-face
	{font-family:"Verdana Pro Black";}
@font-face
	{font-family:"Verdana Pro Cond";}
@font-face
	{font-family:"Verdana Pro Cond Black";}
@font-face
	{font-family:"Verdana Pro Cond Light";}
@font-face
	{font-family:"Verdana Pro Cond Semibold";}
@font-face
	{font-family:"Verdana Pro Light";}
@font-face
	{font-family:"Verdana Pro Semibold";}
@font-face
	{font-family:Vijaya;}
@font-face
	{font-family:"Walbaum Display";}
@font-face
	{font-family:"Walbaum Display Heavy";}
@font-face
	{font-family:"Walbaum Display Light";}
@font-face
	{font-family:"Walbaum Display SemiBold";}
@font-face
	{font-family:"Walbaum Heading";}
@font-face
	{font-family:"Walbaum Text";}
@font-face
	{font-family:Wandohope;}
@font-face
	{font-family:"Work Sans";}
@font-face
	{font-family:"Work Sans Black";}
@font-face
	{font-family:"Work Sans ExtraBold";}
@font-face
	{font-family:"Work Sans ExtraLight";}
@font-face
	{font-family:"Work Sans Light";}
@font-face
	{font-family:"Work Sans Medium";}
@font-face
	{font-family:"Work Sans SemiBold";}
@font-face
	{font-family:"Work Sans Thin";}
@font-face
	{font-family:Yesteryear;}
@font-face
	{font-family:"Yu Mincho";}
@font-face
	{font-family:"Yu Mincho Demibold";}
@font-face
	{font-family:"Yu Mincho Light";}
@font-face
	{font-family:"\@MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
h1
	{mso-style-name:"Heading 1\,h1\,Level 1 Topic Heading";
	mso-style-link:"Heading 1 Char\,h1 Char\,Level 1 Topic Heading Char";
	margin-top:16.0pt;
	margin-right:0in;
	margin-bottom:7.0pt;
	margin-left:0in;
	line-height:18.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:16.0pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
h2
	{mso-style-name:"Heading 2\,h2\,Level 2 Topic Heading\,H2\,Heading 2 Char1\,Heading 2 Char Char\,Heading 2 Char1 Char Char\,Heading 2 Char Char Char Char";
	mso-style-link:"Heading 2 Char\,h2 Char\,Level 2 Topic Heading Char\,H2 Char\,Heading 2 Char1 Char\,Heading 2 Char Char Char\,Heading 2 Char1 Char Char Char\,Heading 2 Char Char Char Char Char";
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:7.0pt;
	margin-left:39.0pt;
	line-height:16.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:14.0pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
h3
	{mso-style-name:"Heading 3\,h3";
	mso-style-link:"Heading 3 Char\,h3 Char";
	margin-top:11.0pt;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:39.0pt;
	line-height:13.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
h4
	{mso-style-name:"Heading 4\,h4";
	mso-style-link:"Heading 4 Char\,h4 Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:normal;}
h5
	{mso-style-name:"Heading 5\,h5";
	mso-style-link:"Heading 5 Char\,h5 Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:normal;}
h6
	{mso-style-link:"Heading 6 Char";
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:11.0pt;
	font-family:"Times New Roman",serif;
	color:black;
	font-weight:bold;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{mso-style-link:"Heading 7 Char";
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	color:black;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{mso-style-link:"Heading 8 Char";
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	color:black;
	font-style:italic;}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{mso-style-link:"Heading 9 Char";
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:11.0pt;
	font-family:"Arial",sans-serif;
	color:black;}
p.MsoIndex1, li.MsoIndex1, div.MsoIndex1
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:9.5pt;
	text-indent:-9.5pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoIndex2, li.MsoIndex2, div.MsoIndex2
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:19.0pt;
	text-indent:-9.5pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoIndex3, li.MsoIndex3, div.MsoIndex3
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:28.5pt;
	text-indent:-9.5pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoIndex4, li.MsoIndex4, div.MsoIndex4
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:38.0pt;
	text-indent:-9.5pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoIndex5, li.MsoIndex5, div.MsoIndex5
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:47.5pt;
	text-indent:-9.5pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoIndex6, li.MsoIndex6, div.MsoIndex6
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:57.0pt;
	text-indent:-9.5pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoIndex7, li.MsoIndex7, div.MsoIndex7
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:66.5pt;
	text-indent:-9.5pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoIndex8, li.MsoIndex8, div.MsoIndex8
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:76.0pt;
	text-indent:-9.5pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoIndex9, li.MsoIndex9, div.MsoIndex9
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:85.5pt;
	text-indent:-9.5pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:9.5pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:19.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoToc4, li.MsoToc4, div.MsoToc4
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:28.5pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoToc5, li.MsoToc5, div.MsoToc5
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:38.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoToc6, li.MsoToc6, div.MsoToc6
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:47.5pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoToc7, li.MsoToc7, div.MsoToc7
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:57.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoToc8, li.MsoToc8, div.MsoToc8
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:66.5pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoToc9, li.MsoToc9, div.MsoToc9
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:76.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoNormalIndent, li.MsoNormalIndent, div.MsoNormalIndent
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoFootnoteText, li.MsoFootnoteText, div.MsoFootnoteText
	{mso-style-link:"Footnote Text Char";
	margin:0in;
	line-height:9.0pt;
	text-autospace:none;
	font-size:7.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoCommentText, li.MsoCommentText, div.MsoCommentText
	{mso-style-link:"Comment Text Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{mso-style-name:"Header\,Page Header\,h";
	mso-style-link:"Header Char\,Page Header Char\,h Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{mso-style-name:"Footer\,Page Footer\,f";
	mso-style-link:"Footer Char\,Page Footer Char\,f Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoIndexHeading, li.MsoIndexHeading, div.MsoIndexHeading
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Arial",sans-serif;
	color:black;
	font-weight:bold;}
p.MsoCaption, li.MsoCaption, div.MsoCaption
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
p.MsoTof, li.MsoTof, div.MsoTof
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoEnvelopeAddress, li.MsoEnvelopeAddress, div.MsoEnvelopeAddress
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:2.0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Arial",sans-serif;
	color:black;}
p.MsoEnvelopeReturn, li.MsoEnvelopeReturn, div.MsoEnvelopeReturn
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Arial",sans-serif;
	color:black;}
span.MsoFootnoteReference
	{vertical-align:super;}
span.MsoEndnoteReference
	{vertical-align:super;}
p.MsoEndnoteText, li.MsoEndnoteText, div.MsoEndnoteText
	{mso-style-link:"Endnote Text Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoToa, li.MsoToa, div.MsoToa
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:9.5pt;
	text-indent:-9.5pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoMacroText, li.MsoMacroText, div.MsoMacroText
	{mso-style-link:"Macro Text Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:39.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Courier New";
	color:black;}
p.MsoToaHeading, li.MsoToaHeading, div.MsoToaHeading
	{margin-top:6.0pt;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Arial",sans-serif;
	color:black;
	font-weight:bold;}
p.MsoList, li.MsoList, div.MsoList
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.25in;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoListBullet, li.MsoListBullet, div.MsoListBullet
	{mso-style-link:"List Bullet Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoListNumber, li.MsoListNumber, div.MsoListNumber
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.25in;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoList2, li.MsoList2, div.MsoList2
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoList3, li.MsoList3, div.MsoList3
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.75in;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoList4, li.MsoList4, div.MsoList4
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:1.0in;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoList5, li.MsoList5, div.MsoList5
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:1.25in;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoListBullet2, li.MsoListBullet2, div.MsoListBullet2
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoListBullet3, li.MsoListBullet3, div.MsoListBullet3
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.75in;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoListBullet4, li.MsoListBullet4, div.MsoListBullet4
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:1.0in;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoListBullet5, li.MsoListBullet5, div.MsoListBullet5
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:1.25in;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoListNumber2, li.MsoListNumber2, div.MsoListNumber2
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoListNumber3, li.MsoListNumber3, div.MsoListNumber3
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.75in;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoListNumber4, li.MsoListNumber4, div.MsoListNumber4
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:1.0in;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoListNumber5, li.MsoListNumber5, div.MsoListNumber5
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:1.25in;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-link:"Title Char";
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	text-align:center;
	text-autospace:none;
	font-size:16.0pt;
	font-family:"Arial",sans-serif;
	color:black;
	font-weight:bold;}
p.MsoClosing, li.MsoClosing, div.MsoClosing
	{mso-style-link:"Closing Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:3.0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoSignature, li.MsoSignature, div.MsoSignature
	{mso-style-link:"Signature Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:3.0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{mso-style-link:"Body Text Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
	{mso-style-link:"Body Text Indent Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoListContinue, li.MsoListContinue, div.MsoListContinue
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoListContinue2, li.MsoListContinue2, div.MsoListContinue2
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:.5in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoListContinue3, li.MsoListContinue3, div.MsoListContinue3
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:.75in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoListContinue4, li.MsoListContinue4, div.MsoListContinue4
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:1.0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoListContinue5, li.MsoListContinue5, div.MsoListContinue5
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:1.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoMessageHeader, li.MsoMessageHeader, div.MsoMessageHeader
	{mso-style-link:"Message Header Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.75in;
	text-indent:-.75in;
	line-height:13.25pt;
	background:#CCCCCC;
	text-autospace:none;
	border:none;
	padding:0in;
	font-size:12.0pt;
	font-family:"Arial",sans-serif;
	color:black;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{mso-style-link:"Subtitle Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	text-align:center;
	line-height:13.25pt;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Arial",sans-serif;
	color:black;}
p.MsoSalutation, li.MsoSalutation, div.MsoSalutation
	{mso-style-link:"Salutation Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoDate, li.MsoDate, div.MsoDate
	{mso-style-link:"Date Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoBodyTextFirstIndent, li.MsoBodyTextFirstIndent, div.MsoBodyTextFirstIndent
	{mso-style-link:"Body Text First Indent Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	text-indent:10.5pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoBodyTextFirstIndent2, li.MsoBodyTextFirstIndent2, div.MsoBodyTextFirstIndent2
	{mso-style-link:"Body Text First Indent 2 Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:.25in;
	text-indent:10.5pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{mso-style-link:"Body Text 2 Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	line-height:200%;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{mso-style-link:"Body Text 3 Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:8.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoBodyTextIndent2, li.MsoBodyTextIndent2, div.MsoBodyTextIndent2
	{mso-style-link:"Body Text Indent 2 Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:.25in;
	line-height:200%;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoBodyTextIndent3, li.MsoBodyTextIndent3, div.MsoBodyTextIndent3
	{mso-style-link:"Body Text Indent 3 Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:8.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
a:link, span.MsoHyperlink
	{font-family:"Times New Roman",serif;
	color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{mso-style-link:"Document Map Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Tahoma",sans-serif;
	color:black;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{mso-style-link:"Plain Text Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Courier New";
	color:black;}
p.MsoAutoSig, li.MsoAutoSig, div.MsoAutoSig
	{mso-style-link:"E-mail Signature Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	color:black;}
address
	{mso-style-link:"HTML Address Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-style:italic;}
code
	{font-family:"Courier New";}
kbd
	{font-family:"Courier New";}
pre
	{mso-style-link:"HTML Preformatted Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Courier New";
	color:black;}
samp
	{font-family:"Courier New";}
tt
	{font-family:"Courier New";}
p.MsoCommentSubject, li.MsoCommentSubject, div.MsoCommentSubject
	{mso-style-link:"Comment Subject Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"Balloon Text Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:8.0pt;
	font-family:"Tahoma",sans-serif;
	color:black;}
p.MsoRMPane, li.MsoRMPane, div.MsoRMPane
	{margin:0in;
	line-height:normal;
	text-autospace:ideograph-numeric ideograph-other;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:.5in;
	line-height:115%;
	text-autospace:ideograph-numeric ideograph-other;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;
	color:windowtext;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	line-height:115%;
	text-autospace:ideograph-numeric ideograph-other;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;
	color:windowtext;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	line-height:115%;
	text-autospace:ideograph-numeric ideograph-other;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;
	color:windowtext;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:.5in;
	line-height:115%;
	text-autospace:ideograph-numeric ideograph-other;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;
	color:windowtext;}
p.ListEnd, li.ListEnd, div.ListEnd
	{mso-style-name:"List End";
	margin:0in;
	line-height:3.0pt;
	text-autospace:none;
	font-size:3.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ChNumber, li.ChNumber, div.ChNumber
	{mso-style-name:"Ch Number";
	margin:0in;
	line-height:18.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:16.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ChTitle, li.ChTitle, div.ChTitle
	{mso-style-name:"Ch Title";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	line-height:28.0pt;
	text-autospace:none;
	font-size:26.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.Authorpart, li.Authorpart, div.Authorpart
	{mso-style-name:"Author \(part\)";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:11.0pt;
	font-family:"Segoe",sans-serif;
	color:black;
	position:relative;
	top:-11.0pt;
	font-style:italic;}
p.Authorchapter, li.Authorchapter, div.Authorchapter
	{mso-style-name:"Author \(chapter\)";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:11.0pt;
	font-family:"Segoe",sans-serif;
	color:black;
	position:relative;
	top:-11.0pt;
	font-style:italic;}
p.ChTOCHead, li.ChTOCHead, div.ChTOCHead
	{mso-style-name:"Ch TOC Head";
	margin-top:13.0pt;
	margin-right:12.25pt;
	margin-bottom:2.0pt;
	margin-left:51.1pt;
	line-height:13.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:silver;}
p.ChTOC, li.ChTOC, div.ChTOC
	{mso-style-name:"Ch TOC";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:2.0pt;
	margin-left:51.0pt;
	line-height:13.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.Set-OffLine, li.Set-OffLine, div.Set-OffLine
	{mso-style-name:"Set-Off Line";
	mso-style-link:"Set-Off Line Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-style:italic;}
p.Fig-Graphic, li.Fig-Graphic, div.Fig-Graphic
	{mso-style-name:Fig-Graphic;
	mso-style-link:"Fig-Graphic Char";
	margin-top:9.0pt;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	line-height:normal;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.Footnote, li.Footnote, div.Footnote
	{mso-style-name:Footnote;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:46.0pt;
	text-indent:-8.0pt;
	line-height:9.0pt;
	text-autospace:none;
	font-size:7.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
span.Footnote1
	{mso-style-name:Footnote1;
	position:relative;
	top:-2.0pt;
	vertical-align:baseline;}
p.CodeBlock, li.CodeBlock, div.CodeBlock
	{mso-style-name:"Code Block";
	mso-style-link:"Code Block Char";
	margin-top:4.0pt;
	margin-right:0in;
	margin-bottom:7.0pt;
	margin-left:0in;
	line-height:10.0pt;
	text-autospace:none;
	font-size:7.0pt;
	font-family:"Lucida Sans Typewriter";
	color:black;}
span.CodeBlockChar
	{mso-style-name:"Code Block Char";
	mso-style-link:"Code Block";
	font-family:"Lucida Sans Typewriter";
	color:black;}
p.CodeBlockHead, li.CodeBlockHead, div.CodeBlockHead
	{mso-style-name:"Code Block Head";
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	line-height:11.0pt;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.CodeBlockNum-Caption, li.CodeBlockNum-Caption, div.CodeBlockNum-Caption
	{mso-style-name:"Code Block Num-Caption";
	margin-top:3.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	line-height:10.0pt;
	text-autospace:none;
	font-size:8.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.CodeBlockScreened, li.CodeBlockScreened, div.CodeBlockScreened
	{mso-style-name:"Code Block Screened";
	mso-style-link:"Code Block Screened Char";
	margin-top:15.0pt;
	margin-right:17.3pt;
	margin-bottom:.25in;
	margin-left:56.15pt;
	line-height:10.0pt;
	background:#D9D9D9;
	text-autospace:none;
	font-size:7.0pt;
	font-family:"Lucida Sans Typewriter";
	color:black;}
span.CodeBlockScreenedChar
	{mso-style-name:"Code Block Screened Char";
	mso-style-link:"Code Block Screened";
	font-family:"Lucida Sans Typewriter";
	color:black;
	background:#D9D9D9;}
p.CodeBlockScreenedHead, li.CodeBlockScreenedHead, div.CodeBlockScreenedHead
	{mso-style-name:"Code Block Screened Head";
	margin-top:15.0pt;
	margin-right:12.0pt;
	margin-bottom:0in;
	margin-left:51.0pt;
	line-height:11.0pt;
	background:#D9D9D9;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.CodeBlockScreenedaftertitle, li.CodeBlockScreenedaftertitle, div.CodeBlockScreenedaftertitle
	{mso-style-name:"Code Block Screened \(after title\)";
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.CodeBlockScreenedaftertitlemid, li.CodeBlockScreenedaftertitlemid, div.CodeBlockScreenedaftertitlemid
	{mso-style-name:"Code Block Screened \(after title mid\)";
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.CodeBlockScreenedTitlemid, li.CodeBlockScreenedTitlemid, div.CodeBlockScreenedTitlemid
	{mso-style-name:"Code Block Screened Title \(mid\)";
	margin-top:6.0pt;
	margin-right:12.0pt;
	margin-bottom:0in;
	margin-left:51.0pt;
	line-height:11.0pt;
	background:#D9D9D9;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.NumList, li.NumList, div.NumList
	{mso-style-name:"Num List";
	mso-style-link:"Num List Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:63.0pt;
	text-indent:-63.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.BullList, li.BullList, div.BullList
	{mso-style-name:"Bull List";
	mso-style-link:"Bull List Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:57.0pt;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.Objective, li.Objective, div.Objective
	{mso-style-name:Objective;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:57.0pt;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.Term, li.Term, div.Term
	{mso-style-name:Term;
	mso-style-link:"Term Char";
	margin:0in;
	line-height:13.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.ListPara, li.ListPara, div.ListPara
	{mso-style-name:"List Para";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:63.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.Termrunindef, li.Termrunindef, div.Termrunindef
	{mso-style-name:"Term runin def";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:75.0pt;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.Termcolumnardef, li.Termcolumnardef, div.Termcolumnardef
	{mso-style-name:"Term columnar def";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.QAListQ, li.QAListQ, div.QAListQ
	{mso-style-name:"QA List Q";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
p.QAListA, li.QAListA, div.QAListA
	{mso-style-name:"QA List A";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.Term2, li.Term2, div.Term2
	{mso-style-name:"Term 2";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:63.0pt;
	line-height:13.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.ListPara2, li.ListPara2, div.ListPara2
	{mso-style-name:"List Para 2";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:87.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.Termrunindef2, li.Termrunindef2, div.Termrunindef2
	{mso-style-name:"Term runin def 2";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.Termcolumnardef2, li.Termcolumnardef2, div.Termcolumnardef2
	{mso-style-name:"Term columnar def 2";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:5.0pt;
	margin-left:168.0pt;
	text-indent:-105.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.NumList2, li.NumList2, div.NumList2
	{mso-style-name:"Num List 2";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:87.0pt;
	text-indent:-87.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.BullList2, li.BullList2, div.BullList2
	{mso-style-name:"Bull List 2";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:87.0pt;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ListSet-OffLine, li.ListSet-OffLine, div.ListSet-OffLine
	{mso-style-name:"List Set-Off Line";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:63.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-style:italic;}
p.ListCodeBlock, li.ListCodeBlock, div.ListCodeBlock
	{mso-style-name:"List Code Block";
	margin-top:5.0pt;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:63.0pt;
	line-height:10.0pt;
	text-autospace:none;
	font-size:7.0pt;
	font-family:"Lucida Sans Typewriter";
	color:black;}
p.ListCodeBlockTitle, li.ListCodeBlockTitle, div.ListCodeBlockTitle
	{mso-style-name:"List Code Block Title";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:63.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;
	position:relative;
	top:4.0pt;}
p.ListCodeBlockNum-Caption, li.ListCodeBlockNum-Caption, div.ListCodeBlockNum-Caption
	{mso-style-name:"List Code Block Num-Caption";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:63.0pt;
	line-height:10.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:8.0pt;
	font-family:"Segoe",sans-serif;
	color:black;
	position:relative;
	top:4.0pt;}
p.ListCodeBlockScreenedHead, li.ListCodeBlockScreenedHead, div.ListCodeBlockScreenedHead
	{mso-style-name:"List Code Block Screened Head";
	margin-top:16.5pt;
	margin-right:17.3pt;
	margin-bottom:.25in;
	margin-left:75.0pt;
	line-height:9.0pt;
	background:#D9D9D9;
	text-autospace:none;
	font-size:7.0pt;
	font-family:"Lucida Sans Typewriter";
	color:black;}
p.ListCodeBlockScreenedaftertitle, li.ListCodeBlockScreenedaftertitle, div.ListCodeBlockScreenedaftertitle
	{mso-style-name:"List Code Block Screened \(after title\)";
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:75.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.Term-Definition, li.Term-Definition, div.Term-Definition
	{mso-style-name:Term-Definition;
	mso-style-link:"Term-Definition Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:63.0pt;
	text-indent:-63.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ListCodeBlockScreened, li.ListCodeBlockScreened, div.ListCodeBlockScreened
	{mso-style-name:"List Code Block Screened";
	mso-style-link:"List Code Block Screened Char";
	margin-top:15.0pt;
	margin-right:17.3pt;
	margin-bottom:.25in;
	margin-left:56.15pt;
	line-height:10.0pt;
	background:#D9D9D9;
	text-autospace:none;
	font-size:7.0pt;
	font-family:"Lucida Sans Typewriter";
	color:black;}
span.ListCodeBlockScreenedChar
	{mso-style-name:"List Code Block Screened Char";
	mso-style-link:"List Code Block Screened";
	font-family:"Lucida Sans Typewriter";
	color:black;
	background:#D9D9D9;}
p.ListNum-Caption, li.ListNum-Caption, div.ListNum-Caption
	{mso-style-name:"List Num-Caption";
	mso-style-link:"List Num-Caption Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:9.0pt;
	margin-left:63.0pt;
	line-height:10.0pt;
	text-autospace:none;
	font-size:8.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ListReaderaidmid, li.ListReaderaidmid, div.ListReaderaidmid
	{mso-style-name:"List Readeraid \(mid\)";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:75.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ListReaderaidBullList, li.ListReaderaidBullList, div.ListReaderaidBullList
	{mso-style-name:"List Readeraid Bull List";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:96.0pt;
	text-indent:-12.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ListReaderaidNumList, li.ListReaderaidNumList, div.ListReaderaidNumList
	{mso-style-name:"List Readeraid Num List";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:96.0pt;
	text-indent:-96.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ListReaderaidlast, li.ListReaderaidlast, div.ListReaderaidlast
	{mso-style-name:"List Readeraid \(last\)";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:17.0pt;
	margin-left:75.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ListTable, li.ListTable, div.ListTable
	{mso-style-name:"List Table";
	margin-top:9.0pt;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:63.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SeeAlso, li.SeeAlso, div.SeeAlso
	{mso-style-name:"See Also";
	mso-style-link:"See Also Char";
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-style:italic;}
p.ListSeeAlso, li.ListSeeAlso, div.ListSeeAlso
	{mso-style-name:"List See Also";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:63.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-style:italic;}
p.ListTableNum-Title, li.ListTableNum-Title, div.ListTableNum-Title
	{mso-style-name:"List Table Num-Title";
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:63.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
p.Authorblockquote, li.Authorblockquote, div.Authorblockquote
	{mso-style-name:"Author \(block quote\)";
	margin-top:0in;
	margin-right:24.0pt;
	margin-bottom:8.0pt;
	margin-left:63.0pt;
	text-align:right;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-style:italic;}
p.ProcedureListHead, li.ProcedureListHead, div.ProcedureListHead
	{mso-style-name:"Procedure List Head";
	margin-top:6.0pt;
	margin-right:0in;
	margin-bottom:7.0pt;
	margin-left:45.35pt;
	text-indent:4.3pt;
	line-height:14.0pt;
	page-break-after:avoid;
	background:#E6E6E6;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.ProcedureList, li.ProcedureList, div.ProcedureList
	{mso-style-name:"Procedure List";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:63.0pt;
	text-indent:-63.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ProcedureList2, li.ProcedureList2, div.ProcedureList2
	{mso-style-name:"Procedure List 2";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:87.0pt;
	text-indent:-87.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.TableHead, li.TableHead, div.TableHead
	{mso-style-name:"Table Head";
	mso-style-link:"Table Head Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	line-height:11.0pt;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.TableText, li.TableText, div.TableText
	{mso-style-name:"Table Text";
	mso-style-link:"Table Text Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.EditorsNote, li.EditorsNote, div.EditorsNote
	{mso-style-name:"Editor\0027s Note";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:8.0pt;
	font-family:"Segoe",sans-serif;
	color:red;}
p.ReaderaidCodeBlockScreened, li.ReaderaidCodeBlockScreened, div.ReaderaidCodeBlockScreened
	{mso-style-name:"Readeraid Code Block Screened";
	margin-top:15.0pt;
	margin-right:17.3pt;
	margin-bottom:.25in;
	margin-left:74.9pt;
	line-height:10.0pt;
	background:#D9D9D9;
	text-autospace:none;
	font-size:7.0pt;
	font-family:"Lucida Sans Typewriter";
	color:black;}
p.Readeraidonly, li.Readeraidonly, div.Readeraidonly
	{mso-style-name:"Readeraid \(only\)";
	margin-top:15.0pt;
	margin-right:12.0pt;
	margin-bottom:.25in;
	margin-left:51.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.Readeraidfirst, li.Readeraidfirst, div.Readeraidfirst
	{mso-style-name:"Readeraid \(first\)";
	margin-top:15.0pt;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:51.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.Readeraidmid, li.Readeraidmid, div.Readeraidmid
	{mso-style-name:"Readeraid \(mid\)";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:51.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ReaderaidNum-Caption, li.ReaderaidNum-Caption, div.ReaderaidNum-Caption
	{mso-style-name:"Readeraid Num-Caption";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:51.0pt;
	line-height:10.0pt;
	text-autospace:none;
	font-size:8.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ReaderaidCodeBlock, li.ReaderaidCodeBlock, div.ReaderaidCodeBlock
	{mso-style-name:"Readeraid Code Block";
	mso-style-link:"Readeraid Code Block Char";
	margin-top:2.0pt;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:51.0pt;
	line-height:10.0pt;
	text-autospace:none;
	font-size:7.0pt;
	font-family:"Lucida Sans Typewriter";
	color:black;}
p.ReaderaidCodeBlockTitle, li.ReaderaidCodeBlockTitle, div.ReaderaidCodeBlockTitle
	{mso-style-name:"Readeraid Code Block Title";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:51.0pt;
	line-height:11.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.ReaderaidCodeBlockaftertitle, li.ReaderaidCodeBlockaftertitle, div.ReaderaidCodeBlockaftertitle
	{mso-style-name:"Readeraid Code Block \(after title\)";
	margin-top:2.0pt;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:51.0pt;
	line-height:10.0pt;
	text-autospace:none;
	font-size:7.0pt;
	font-family:"Lucida Sans Typewriter";
	color:black;}
p.ReaderaidCodeBlockNum-Caption, li.ReaderaidCodeBlockNum-Caption, div.ReaderaidCodeBlockNum-Caption
	{mso-style-name:"Readeraid Code Block Num-Caption";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:0in;
	margin-left:51.0pt;
	line-height:10.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:8.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ReaderaidSeeAlso, li.ReaderaidSeeAlso, div.ReaderaidSeeAlso
	{mso-style-name:"Readeraid See Also";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:51.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-style:italic;}
p.Readeraidlast, li.Readeraidlast, div.Readeraidlast
	{mso-style-name:"Readeraid \(last\)";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:.25in;
	margin-left:51.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ReaderaidTerm, li.ReaderaidTerm, div.ReaderaidTerm
	{mso-style-name:"Readeraid Term";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:0in;
	margin-left:51.0pt;
	line-height:11.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.ReaderaidListPara, li.ReaderaidListPara, div.ReaderaidListPara
	{mso-style-name:"Readeraid List Para";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:75.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ReaderaidTermdefrunin, li.ReaderaidTermdefrunin, div.ReaderaidTermdefrunin
	{mso-style-name:"Readeraid Term def runin";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:75.0pt;
	text-indent:-24.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarTermcolumnardef, li.SbarTermcolumnardef, div.SbarTermcolumnardef
	{mso-style-name:"Sbar Term columnar def";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:5.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ReaderaidTermcolumnardef, li.ReaderaidTermcolumnardef, div.ReaderaidTermcolumnardef
	{mso-style-name:"Readeraid Term columnar def";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:5.0pt;
	margin-left:0in;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ReaderaidNumList, li.ReaderaidNumList, div.ReaderaidNumList
	{mso-style-name:"Readeraid Num List";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:75.0pt;
	text-indent:-75.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ReaderaidListCodeBlock, li.ReaderaidListCodeBlock, div.ReaderaidListCodeBlock
	{mso-style-name:"Readeraid List Code Block";
	margin-top:2.0pt;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:75.0pt;
	line-height:10.0pt;
	text-autospace:none;
	font-size:7.0pt;
	font-family:"Lucida Sans Typewriter";
	color:black;}
p.ReaderaidListGraphic, li.ReaderaidListGraphic, div.ReaderaidListGraphic
	{mso-style-name:"Readeraid List Graphic";
	margin-top:9.0pt;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:75.0pt;
	line-height:normal;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ReaderaidListCaption, li.ReaderaidListCaption, div.ReaderaidListCaption
	{mso-style-name:"Readeraid List Caption";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:75.0pt;
	line-height:10.0pt;
	text-autospace:none;
	font-size:8.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarHead, li.SbarHead, div.SbarHead
	{mso-style-name:"Sbar Head";
	mso-style-link:"Sbar Head Char";
	margin-top:12.0pt;
	margin-right:12.25pt;
	margin-bottom:3.0pt;
	margin-left:51.1pt;
	line-height:15.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
p.SbarParamid, li.SbarParamid, div.SbarParamid
	{mso-style-name:"Sbar Para \(mid\)";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:8.0pt;
	margin-left:51.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarParalast, li.SbarParalast, div.SbarParalast
	{mso-style-name:"Sbar Para \(last\)";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:21.0pt;
	margin-left:51.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarSubhead, li.SbarSubhead, div.SbarSubhead
	{mso-style-name:"Sbar Subhead";
	mso-style-link:"Sbar Subhead Char";
	margin-top:0in;
	margin-right:12.25pt;
	margin-bottom:0in;
	margin-left:51.1pt;
	line-height:14.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
p.SbarNum-Caption, li.SbarNum-Caption, div.SbarNum-Caption
	{mso-style-name:"Sbar Num-Caption";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:7.0pt;
	margin-left:51.0pt;
	line-height:10.5pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarCodeBlock, li.SbarCodeBlock, div.SbarCodeBlock
	{mso-style-name:"Sbar Code Block";
	mso-style-link:"Sbar Code Block Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:51.1pt;
	line-height:10.0pt;
	text-autospace:none;
	font-size:7.0pt;
	font-family:"Lucida Sans Typewriter";
	color:black;}
p.SbarCodeBlockHead, li.SbarCodeBlockHead, div.SbarCodeBlockHead
	{mso-style-name:"Sbar Code Block Head";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:0in;
	margin-left:51.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.SbarCodeBlockaftertitle, li.SbarCodeBlockaftertitle, div.SbarCodeBlockaftertitle
	{mso-style-name:"Sbar Code Block \(after title\)";
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:51.1pt;
	line-height:10.0pt;
	text-autospace:none;
	font-size:7.0pt;
	font-family:"Lucida Sans Typewriter";
	color:black;}
p.SbarCodeBlockNum-Caption, li.SbarCodeBlockNum-Caption, div.SbarCodeBlockNum-Caption
	{mso-style-name:"Sbar Code Block Num-Caption";
	margin-top:2.0pt;
	margin-right:12.0pt;
	margin-bottom:0in;
	margin-left:51.0pt;
	line-height:10.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:8.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarSeeAlso, li.SbarSeeAlso, div.SbarSeeAlso
	{mso-style-name:"Sbar See Also";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:8.0pt;
	margin-left:51.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-style:italic;}
p.SbarParafirst, li.SbarParafirst, div.SbarParafirst
	{mso-style-name:"Sbar Para \(first\)";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:8.0pt;
	margin-left:51.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarTerm, li.SbarTerm, div.SbarTerm
	{mso-style-name:"Sbar Term";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:0in;
	margin-left:51.0pt;
	line-height:13.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.SbarListPara, li.SbarListPara, div.SbarListPara
	{mso-style-name:"Sbar List Para";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:5.0pt;
	margin-left:75.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarTermdefrunin, li.SbarTermdefrunin, div.SbarTermdefrunin
	{mso-style-name:"Sbar Term def runin";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:5.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarNumList, li.SbarNumList, div.SbarNumList
	{mso-style-name:"Sbar Num List";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:5.0pt;
	margin-left:75.0pt;
	text-indent:-75.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarListCodeBlock, li.SbarListCodeBlock, div.SbarListCodeBlock
	{mso-style-name:"Sbar List Code Block";
	mso-style-link:"Sbar List Code Block Char";
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:75.0pt;
	line-height:10.0pt;
	text-autospace:none;
	font-size:7.0pt;
	font-family:"Lucida Sans Typewriter";
	color:black;}
p.SbarListFig-Graphic, li.SbarListFig-Graphic, div.SbarListFig-Graphic
	{mso-style-name:"Sbar List Fig-Graphic";
	margin-top:9.0pt;
	margin-right:12.25pt;
	margin-bottom:4.0pt;
	margin-left:110.9pt;
	line-height:normal;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarListNum-Caption, li.SbarListNum-Caption, div.SbarListNum-Caption
	{mso-style-name:"Sbar List Num-Caption";
	margin-top:0in;
	margin-right:12.25pt;
	margin-bottom:5.0pt;
	margin-left:110.9pt;
	line-height:10.5pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.TableNum-Title, li.TableNum-Title, div.TableNum-Title
	{mso-style-name:"Table Num-Title";
	mso-style-link:"Table Num-Title Char";
	margin-top:3.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
p.Table, li.Table, div.Table
	{mso-style-name:Table;
	margin-top:9.0pt;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:39.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.Tableaftertitle, li.Tableaftertitle, div.Tableaftertitle
	{mso-style-name:"Table \(after title\)";
	margin-top:4.0pt;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:39.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ListTableaftertitle, li.ListTableaftertitle, div.ListTableaftertitle
	{mso-style-name:"List Table \(after title\)";
	margin-top:4.0pt;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:63.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ReaderaidTableTitle, li.ReaderaidTableTitle, div.ReaderaidTableTitle
	{mso-style-name:"Readeraid Table Title";
	margin-top:3.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:51.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
p.ReaderaidTable, li.ReaderaidTable, div.ReaderaidTable
	{mso-style-name:"Readeraid Table";
	margin-top:5.0pt;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:51.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarTable, li.SbarTable, div.SbarTable
	{mso-style-name:"Sbar Table";
	margin-top:5.0pt;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:51.0pt;
	line-height:14.0pt;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarTableaftertitle, li.SbarTableaftertitle, div.SbarTableaftertitle
	{mso-style-name:"Sbar Table \(after title\)";
	margin-top:4.0pt;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:51.0pt;
	line-height:14.0pt;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ReaderaidTableaftertitle, li.ReaderaidTableaftertitle, div.ReaderaidTableaftertitle
	{mso-style-name:"Readeraid Table \(after title\)";
	margin-top:4.0pt;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:51.0pt;
	line-height:14.0pt;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarTableNum-Title, li.SbarTableNum-Title, div.SbarTableNum-Title
	{mso-style-name:"Sbar Table Num-Title";
	mso-style-link:"Sbar Table Num-Title Char";
	margin-top:3.0pt;
	margin-right:12.0pt;
	margin-bottom:3.0pt;
	margin-left:51.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
p.TabTextplaceholder, li.TabTextplaceholder, div.TabTextplaceholder
	{mso-style-name:"Tab Text \(placeholder\)";
	margin-top:6.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:39.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ReaderaidTabTextplaceolder, li.ReaderaidTabTextplaceolder, div.ReaderaidTabTextplaceolder
	{mso-style-name:"Readeraid Tab Text \(placeolder\)";
	margin-top:5.0pt;
	margin-right:12.0pt;
	margin-bottom:0in;
	margin-left:51.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarTabTextplaceholder, li.SbarTabTextplaceholder, div.SbarTabTextplaceholder
	{mso-style-name:"Sbar Tab Text \(placeholder\)";
	margin-top:5.0pt;
	margin-right:12.0pt;
	margin-bottom:0in;
	margin-left:51.0pt;
	line-height:14.0pt;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ReaderaidTableHead, li.ReaderaidTableHead, div.ReaderaidTableHead
	{mso-style-name:"Readeraid Table Head";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	line-height:11.0pt;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.ReaderaidTableText, li.ReaderaidTableText, div.ReaderaidTableText
	{mso-style-name:"Readeraid Table Text";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.TableFootnote, li.TableFootnote, div.TableFootnote
	{mso-style-name:"Table Footnote";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:6.0pt;
	text-indent:-6.0pt;
	line-height:8.5pt;
	text-autospace:none;
	font-size:7.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.TableSubhead, li.TableSubhead, div.TableSubhead
	{mso-style-name:"Table Subhead";
	mso-style-link:"Table Subhead Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	line-height:11.0pt;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.Tabtext, li.Tabtext, div.Tabtext
	{mso-style-name:"Tab text";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.Extract, li.Extract, div.Extract
	{mso-style-name:Extract;
	margin-top:0in;
	margin-right:24.0pt;
	margin-bottom:8.0pt;
	margin-left:63.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-style:italic;}
p.BMTitle, li.BMTitle, div.BMTitle
	{mso-style-name:"BM Title";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:19.0pt;
	margin-left:0in;
	line-height:28.0pt;
	text-autospace:none;
	font-size:26.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.NormalGlossary, li.NormalGlossary, div.NormalGlossary
	{mso-style-name:"Normal Glossary";
	mso-style-link:"Normal Glossary Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.GlossaryDefinition, li.GlossaryDefinition, div.GlossaryDefinition
	{mso-style-name:"Glossary Definition";
	mso-style-link:"Glossary Definition Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:12.0pt;
	text-indent:-12.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.NormalBibliography, li.NormalBibliography, div.NormalBibliography
	{mso-style-name:"Normal Bibliography";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.BibliographyEntry, li.BibliographyEntry, div.BibliographyEntry
	{mso-style-name:"Bibliography Entry";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:12.0pt;
	text-indent:-12.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.IA, li.IA, div.IA
	{mso-style-name:IA;
	margin-top:15.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:14.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:14.0pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
p.I1, li.I1, div.I1
	{mso-style-name:I1;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:15.0pt;
	text-indent:-15.0pt;
	line-height:9.5pt;
	text-autospace:none;
	font-size:7.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.I2, li.I2, div.I2
	{mso-style-name:I2;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:15.0pt;
	text-indent:-8.0pt;
	line-height:9.5pt;
	text-autospace:none;
	font-size:7.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ListFig-Graphic, li.ListFig-Graphic, div.ListFig-Graphic
	{mso-style-name:"List Fig-Graphic";
	margin-top:9.0pt;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:63.0pt;
	line-height:normal;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ReaderaidFig-Graphic, li.ReaderaidFig-Graphic, div.ReaderaidFig-Graphic
	{mso-style-name:"Readeraid Fig-Graphic";
	margin-top:9.0pt;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:51.0pt;
	line-height:normal;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.FMTitle, li.FMTitle, div.FMTitle
	{mso-style-name:"FM Title";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:19.0pt;
	margin-left:0in;
	line-height:28.0pt;
	text-autospace:none;
	font-size:26.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.BlockQuote, li.BlockQuote, div.BlockQuote
	{mso-style-name:"Block Quote";
	margin-top:0in;
	margin-right:24.0pt;
	margin-bottom:4.0pt;
	margin-left:63.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-style:italic;}
p.SbarFig-Graphic, li.SbarFig-Graphic, div.SbarFig-Graphic
	{mso-style-name:"Sbar Fig-Graphic";
	margin-top:9.0pt;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:51.0pt;
	line-height:normal;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
span.InlineCode
	{mso-style-name:"Inline Code";
	font-family:"Lucida Sans Typewriter";
	letter-spacing:0pt;}
p.TableCodeBlock, li.TableCodeBlock, div.TableCodeBlock
	{mso-style-name:"Table Code Block";
	margin-top:4.0pt;
	margin-right:0in;
	margin-bottom:7.0pt;
	margin-left:0in;
	line-height:10.0pt;
	text-autospace:none;
	font-size:7.0pt;
	font-family:"Lucida Sans Typewriter";
	color:black;}
p.Term-DefinitionBulleted, li.Term-DefinitionBulleted, div.Term-DefinitionBulleted
	{mso-style-name:"Term-Definition Bulleted";
	mso-style-link:"Term-Definition Bulleted Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:84.0pt;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ReaderaidBullList, li.ReaderaidBullList, div.ReaderaidBullList
	{mso-style-name:"Readeraid Bull List";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:96.0pt;
	text-indent:-.25in;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarBullList, li.SbarBullList, div.SbarBullList
	{mso-style-name:"Sbar Bull List";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:8.0pt;
	margin-left:111.0pt;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarBullList2, li.SbarBullList2, div.SbarBullList2
	{mso-style-name:"Sbar Bull List 2";
	margin-top:0in;
	margin-right:12.25pt;
	margin-bottom:8.0pt;
	margin-left:186.0pt;
	text-indent:-.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.TableBullList, li.TableBullList, div.TableBullList
	{mso-style-name:"Table Bull List";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:39.0pt;
	text-indent:-.25in;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.TableNumList, li.TableNumList, div.TableNumList
	{mso-style-name:"Table Num List";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:.25in;
	text-indent:-.25in;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ListReaderaidonly, li.ListReaderaidonly, div.ListReaderaidonly
	{mso-style-name:"List Readeraid \(only\)";
	margin-top:.25in;
	margin-right:12.0pt;
	margin-bottom:17.0pt;
	margin-left:75.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.ListReaderaidfirst, li.ListReaderaidfirst, div.ListReaderaidfirst
	{mso-style-name:"List Readeraid \(first\)";
	margin-top:.25in;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:75.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarReaderaidonly, li.SbarReaderaidonly, div.SbarReaderaidonly
	{mso-style-name:"Sbar Readeraid \(only\)";
	margin-top:15.0pt;
	margin-right:24.0pt;
	margin-bottom:.25in;
	margin-left:63.0pt;
	line-height:11.0pt;
	text-autospace:none;
	font-size:8.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarParaonly, li.SbarParaonly, div.SbarParaonly
	{mso-style-name:"Sbar Para \(only\)";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:24.0pt;
	margin-left:51.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.SbarSet-OffLine, li.SbarSet-OffLine, div.SbarSet-OffLine
	{mso-style-name:"Sbar Set-Off Line";
	mso-style-link:"Sbar Set-Off Line Char";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:8.0pt;
	margin-left:66.0pt;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-style:italic;}
p.SbarListSet-OffLine, li.SbarListSet-OffLine, div.SbarListSet-OffLine
	{mso-style-name:"Sbar List Set-Off Line";
	margin-top:0in;
	margin-right:12.0pt;
	margin-bottom:4.0pt;
	margin-left:1.25in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-style:italic;}
span.ReaderaidPrefix
	{mso-style-name:"Readeraid Prefix";
	font-family:"Segoe Semibold",sans-serif;}
p.SbarCodeBlockScreened, li.SbarCodeBlockScreened, div.SbarCodeBlockScreened
	{mso-style-name:"Sbar Code Block Screened";
	margin-top:15.0pt;
	margin-right:17.3pt;
	margin-bottom:.25in;
	margin-left:63.35pt;
	line-height:10.0pt;
	background:#D9D9D9;
	text-autospace:none;
	font-size:7.0pt;
	font-family:"Lucida Sans Typewriter";
	color:black;}
p.ObjectivesIntro, li.ObjectivesIntro, div.ObjectivesIntro
	{mso-style-name:"Objectives Intro";
	margin-top:13.0pt;
	margin-right:12.25pt;
	margin-bottom:2.0pt;
	margin-left:51.1pt;
	line-height:13.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:silver;}
p.PartNumber, li.PartNumber, div.PartNumber
	{mso-style-name:"Part Number";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:39.0pt;
	line-height:18.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:16.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.PartTitle, li.PartTitle, div.PartTitle
	{mso-style-name:"Part Title";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:19.0pt;
	margin-left:37.5pt;
	line-height:28.0pt;
	text-autospace:none;
	font-size:26.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.Num-Caption, li.Num-Caption, div.Num-Caption
	{mso-style-name:Num-Caption;
	mso-style-link:"Num-Caption Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:13.25pt;
	text-autospace:none;
	font-size:8.0pt;
	font-family:"Segoe",sans-serif;
	color:black;}
p.MarginText, li.MarginText, div.MarginText
	{mso-style-name:"Margin Text";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:8.5pt;
	text-autospace:none;
	font-size:7.5pt;
	font-family:"Segoe",sans-serif;
	color:black;}
span.InlineCode2
	{mso-style-name:"Inline Code 2";
	font-family:"Lucida Sans Typewriter";
	letter-spacing:0pt;}
span.FigTableNum
	{mso-style-name:FigTableNum;
	font-family:"Segoe",sans-serif;
	text-transform:uppercase;
	font-weight:bold;}
p.TOCtitle, li.TOCtitle, div.TOCtitle
	{mso-style-name:"TOC title";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:19.0pt;
	margin-left:0in;
	line-height:28.0pt;
	text-autospace:none;
	font-size:26.0pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
p.TOCFM, li.TOCFM, div.TOCFM
	{mso-style-name:"TOC FM";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:39.0pt;
	line-height:14.0pt;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.TOCPart, li.TOCPart, div.TOCPart
	{mso-style-name:"TOC Part";
	margin-top:14.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:39.0pt;
	text-indent:-39.0pt;
	line-height:16.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:14.0pt;
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
p.TOCChapter, li.TOCChapter, div.TOCChapter
	{mso-style-name:"TOC Chapter";
	margin-top:9.0pt;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	text-indent:-38.9pt;
	line-height:14.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.TOCH1, li.TOCH1, div.TOCH1
	{mso-style-name:"TOC H1";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:1.5pt;
	margin-left:63.0pt;
	line-height:13.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.TOCH2, li.TOCH2, div.TOCH2
	{mso-style-name:"TOC H2";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:1.5pt;
	margin-left:87.0pt;
	line-height:13.0pt;
	page-break-after:avoid;
	text-autospace:none;
	font-size:9.5pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
p.TPTitle, li.TPTitle, div.TPTitle
	{mso-style-name:"TP Title";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:24.0pt;
	margin-left:58.5pt;
	line-height:30.0pt;
	text-autospace:none;
	font-size:28.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
span.TPTitleMark
	{mso-style-name:"TP Title Mark";
	position:relative;
	top:-8.0pt;
	vertical-align:super;}
p.TPAuName, li.TPAuName, div.TPAuName
	{mso-style-name:"TP Au Name";
	margin-top:3.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:60.0pt;
	text-align:right;
	line-height:18.0pt;
	text-autospace:none;
	font-size:16.0pt;
	font-family:"Segoe Semibold",sans-serif;
	color:black;
	font-style:italic;}
p.Body, li.Body, div.Body
	{mso-style-name:Body;
	margin:0in;
	text-align:justify;
	line-height:11.0pt;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Times",serif;
	color:black;
	letter-spacing:-.1pt;}
p.Body-endofpara, li.Body-endofpara, div.Body-endofpara
	{mso-style-name:"Body-end of para";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:0in;
	text-align:justify;
	line-height:11.0pt;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Times",serif;
	color:black;
	letter-spacing:-.1pt;}
span.Term-DefinitionBulletedChar
	{mso-style-name:"Term-Definition Bulleted Char";
	mso-style-link:"Term-Definition Bulleted";
	font-family:"Segoe",sans-serif;
	color:black;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char\,h1 Char\,Level 1 Topic Heading Char";
	mso-style-link:"Heading 1\,h1\,Level 1 Topic Heading";
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char\,h2 Char\,Level 2 Topic Heading Char\,H2 Char\,Heading 2 Char1 Char\,Heading 2 Char Char Char\,Heading 2 Char1 Char Char Char\,Heading 2 Char Char Char Char Char";
	mso-style-link:"Heading 2\,h2\,Level 2 Topic Heading\,H2\,Heading 2 Char1\,Heading 2 Char Char\,Heading 2 Char1 Char Char\,Heading 2 Char Char Char Char";
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
span.TermChar
	{mso-style-name:"Term Char";
	mso-style-link:Term;
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
span.TableHeadChar
	{mso-style-name:"Table Head Char";
	mso-style-link:"Table Head";
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
span.TableSubheadChar
	{mso-style-name:"Table Subhead Char";
	mso-style-link:"Table Subhead";
	font-family:"Segoe Semibold",sans-serif;
	color:black;}
span.TableNum-TitleChar
	{mso-style-name:"Table Num-Title Char";
	mso-style-link:"Table Num-Title";
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
span.SbarTableNum-TitleChar
	{mso-style-name:"Sbar Table Num-Title Char";
	mso-style-link:"Sbar Table Num-Title";
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
span.NumListChar
	{mso-style-name:"Num List Char";
	mso-style-link:"Num List";
	font-family:"Segoe",sans-serif;
	color:black;}
span.Term-DefinitionChar
	{mso-style-name:"Term-Definition Char";
	mso-style-link:Term-Definition;
	font-family:"Segoe",sans-serif;
	color:black;}
span.SbarHeadChar
	{mso-style-name:"Sbar Head Char";
	mso-style-link:"Sbar Head";
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
span.Set-OffLineChar
	{mso-style-name:"Set-Off Line Char";
	mso-style-link:"Set-Off Line";
	font-family:"Segoe",sans-serif;
	color:black;
	font-style:italic;}
span.SbarSet-OffLineChar
	{mso-style-name:"Sbar Set-Off Line Char";
	mso-style-link:"Sbar Set-Off Line";
	font-family:"Segoe",sans-serif;
	color:black;
	font-style:italic;}
span.SbarSubheadChar
	{mso-style-name:"Sbar Subhead Char";
	mso-style-link:"Sbar Subhead";
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
span.Num-CaptionChar
	{mso-style-name:"Num-Caption Char";
	mso-style-link:Num-Caption;
	font-family:"Segoe",sans-serif;
	color:black;}
span.ZherinaSalamanca
	{mso-style-name:"Zherina Salamanca";
	font-family:"Arial",sans-serif;
	color:windowtext;}
span.ListBulletChar
	{mso-style-name:"List Bullet Char";
	mso-style-link:"List Bullet";
	font-family:"Segoe",sans-serif;
	color:black;}
span.BullListChar
	{mso-style-name:"Bull List Char";
	mso-style-link:"Bull List";
	font-family:"Segoe",sans-serif;
	color:black;}
span.SeeAlsoChar
	{mso-style-name:"See Also Char";
	mso-style-link:"See Also";
	font-family:"Segoe",sans-serif;
	color:black;
	font-style:italic;}
span.CommentTextChar
	{mso-style-name:"Comment Text Char";
	mso-style-link:"Comment Text";
	font-family:"Segoe",sans-serif;
	color:black;}
span.FooterChar
	{mso-style-name:"Footer Char\,Page Footer Char\,f Char";
	mso-style-link:"Footer\,Page Footer\,f";
	font-family:"Segoe",sans-serif;
	color:black;}
span.HeaderChar
	{mso-style-name:"Header Char\,Page Header Char\,h Char";
	mso-style-link:"Header\,Page Header\,h";
	font-family:"Segoe",sans-serif;
	color:black;}
span.Codefragment
	{mso-style-name:"Code fragment";
	font-family:Consolas;}
span.Fig-GraphicChar
	{mso-style-name:"Fig-Graphic Char";
	mso-style-link:Fig-Graphic;
	font-family:"Segoe",sans-serif;
	color:black;}
span.BodyTextChar
	{mso-style-name:"Body Text Char";
	mso-style-link:"Body Text";
	font-family:"Segoe",sans-serif;
	color:black;}
span.TableTextChar
	{mso-style-name:"Table Text Char";
	mso-style-link:"Table Text";
	font-family:"Segoe",sans-serif;
	color:black;}
span.ListNum-CaptionChar
	{mso-style-name:"List Num-Caption Char";
	mso-style-link:"List Num-Caption";
	font-family:"Segoe",sans-serif;
	color:black;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char\,h3 Char";
	mso-style-link:"Heading 3\,h3";
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
span.Heading4Char
	{mso-style-name:"Heading 4 Char\,h4 Char";
	mso-style-link:"Heading 4\,h4";
	font-family:"Segoe",sans-serif;
	color:black;}
span.Heading5Char
	{mso-style-name:"Heading 5 Char\,h5 Char";
	mso-style-link:"Heading 5\,h5";
	font-family:"Segoe",sans-serif;
	color:black;}
span.Heading6Char
	{mso-style-name:"Heading 6 Char";
	mso-style-link:"Heading 6";
	color:black;
	font-weight:bold;}
span.Heading7Char
	{mso-style-name:"Heading 7 Char";
	mso-style-link:"Heading 7";
	color:black;}
span.Heading8Char
	{mso-style-name:"Heading 8 Char";
	mso-style-link:"Heading 8";
	color:black;
	font-style:italic;}
span.Heading9Char
	{mso-style-name:"Heading 9 Char";
	mso-style-link:"Heading 9";
	font-family:"Arial",sans-serif;
	color:black;}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-link:"Balloon Text";
	font-family:"Tahoma",sans-serif;
	color:black;}
span.BodyText2Char
	{mso-style-name:"Body Text 2 Char";
	mso-style-link:"Body Text 2";
	font-family:"Segoe",sans-serif;
	color:black;}
span.BodyText3Char
	{mso-style-name:"Body Text 3 Char";
	mso-style-link:"Body Text 3";
	font-family:"Segoe",sans-serif;
	color:black;}
span.BodyTextFirstIndentChar
	{mso-style-name:"Body Text First Indent Char";
	mso-style-link:"Body Text First Indent";
	font-family:"Segoe",sans-serif;
	color:black;}
span.BodyTextIndentChar
	{mso-style-name:"Body Text Indent Char";
	mso-style-link:"Body Text Indent";
	font-family:"Segoe",sans-serif;
	color:black;}
span.BodyTextFirstIndent2Char
	{mso-style-name:"Body Text First Indent 2 Char";
	mso-style-link:"Body Text First Indent 2";
	font-family:"Segoe",sans-serif;
	color:black;}
span.BodyTextIndent2Char
	{mso-style-name:"Body Text Indent 2 Char";
	mso-style-link:"Body Text Indent 2";
	font-family:"Segoe",sans-serif;
	color:black;}
span.BodyTextIndent3Char
	{mso-style-name:"Body Text Indent 3 Char";
	mso-style-link:"Body Text Indent 3";
	font-family:"Segoe",sans-serif;
	color:black;}
span.ClosingChar
	{mso-style-name:"Closing Char";
	mso-style-link:Closing;
	font-family:"Segoe",sans-serif;
	color:black;}
span.CommentSubjectChar
	{mso-style-name:"Comment Subject Char";
	mso-style-link:"Comment Subject";
	font-family:"Segoe",sans-serif;
	color:black;
	font-weight:bold;}
span.DateChar
	{mso-style-name:"Date Char";
	mso-style-link:Date;
	font-family:"Segoe",sans-serif;
	color:black;}
span.DocumentMapChar
	{mso-style-name:"Document Map Char";
	mso-style-link:"Document Map";
	font-family:"Tahoma",sans-serif;
	color:black;}
span.E-mailSignatureChar
	{mso-style-name:"E-mail Signature Char";
	mso-style-link:"E-mail Signature";
	font-family:"Segoe",sans-serif;
	color:black;}
span.EndnoteTextChar
	{mso-style-name:"Endnote Text Char";
	mso-style-link:"Endnote Text";
	font-family:"Segoe",sans-serif;
	color:black;}
span.FootnoteTextChar
	{mso-style-name:"Footnote Text Char";
	mso-style-link:"Footnote Text";
	font-family:"Segoe",sans-serif;
	color:black;}
span.HTMLAddressChar
	{mso-style-name:"HTML Address Char";
	mso-style-link:"HTML Address";
	font-family:"Segoe",sans-serif;
	color:black;
	font-style:italic;}
span.HTMLPreformattedChar
	{mso-style-name:"HTML Preformatted Char";
	mso-style-link:"HTML Preformatted";
	font-family:"Courier New";
	color:black;}
span.MacroTextChar
	{mso-style-name:"Macro Text Char";
	mso-style-link:"Macro Text";
	font-family:"Courier New";
	color:black;}
span.MessageHeaderChar
	{mso-style-name:"Message Header Char";
	mso-style-link:"Message Header";
	font-family:"Arial",sans-serif;
	color:black;
	background:#CCCCCC;}
span.PlainTextChar
	{mso-style-name:"Plain Text Char";
	mso-style-link:"Plain Text";
	font-family:"Courier New";
	color:black;}
span.SalutationChar
	{mso-style-name:"Salutation Char";
	mso-style-link:Salutation;
	font-family:"Segoe",sans-serif;
	color:black;}
span.SignatureChar
	{mso-style-name:"Signature Char";
	mso-style-link:Signature;
	font-family:"Segoe",sans-serif;
	color:black;}
span.SubtitleChar
	{mso-style-name:"Subtitle Char";
	mso-style-link:Subtitle;
	font-family:"Arial",sans-serif;
	color:black;}
span.TitleChar
	{mso-style-name:"Title Char";
	mso-style-link:Title;
	font-family:"Arial",sans-serif;
	color:black;
	font-weight:bold;}
span.NormalGlossaryChar
	{mso-style-name:"Normal Glossary Char";
	mso-style-link:"Normal Glossary";
	font-family:"Segoe",sans-serif;
	color:black;}
span.GlossaryDefinitionChar
	{mso-style-name:"Glossary Definition Char";
	mso-style-link:"Glossary Definition";
	font-family:"Segoe",sans-serif;
	color:black;}
p.Head3, li.Head3, div.Head3
	{mso-style-name:Head3;
	mso-style-link:"Head3 Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:0in;
	line-height:115%;
	text-autospace:ideograph-numeric ideograph-other;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;
	color:windowtext;
	font-weight:bold;
	font-style:italic;}
span.Head3Char
	{mso-style-name:"Head3 Char";
	mso-style-link:Head3;
	font-family:"Calibri",sans-serif;
	font-weight:bold;
	font-style:italic;}
span.SbarCodeBlockChar
	{mso-style-name:"Sbar Code Block Char";
	mso-style-link:"Sbar Code Block";
	font-family:"Lucida Sans Typewriter";
	color:black;}
span.SbarListCodeBlockChar
	{mso-style-name:"Sbar List Code Block Char";
	mso-style-link:"Sbar List Code Block";
	font-family:"Lucida Sans Typewriter";
	color:black;}
span.ReaderaidCodeBlockChar
	{mso-style-name:"Readeraid Code Block Char";
	mso-style-link:"Readeraid Code Block";
	font-family:"Lucida Sans Typewriter";
	color:black;}
p.ccemessage, li.ccemessage, div.ccemessage
	{mso-style-name:cce_message;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:7.5pt;
	margin-left:0in;
	line-height:normal;
	text-autospace:ideograph-numeric ideograph-other;
	font-size:10.0pt;
	font-family:"Times New Roman",serif;
	color:red;}
span.msoIns
	{mso-style-name:"";
	text-decoration:underline;
	color:teal;}
span.msoDel
	{mso-style-name:"";
	text-decoration:line-through;
	color:red;}
.MsoChpDefault
	{font-size:10.0pt;}
 /* Page Definitions */
 @page WordSection1
	{size:531.0pt 9.0in;
	margin:0in 0in 0in 0in;}
div.WordSection1
	{page:WordSection1;}
@page WordSection2
	{size:531.35pt 9.0in;
	margin:48.25pt 41.75pt 45.35pt 59.75pt;}
div.WordSection2
	{page:WordSection2;}
@page WordSection3
	{size:531.0pt 9.0in;
	margin:48.25pt 41.75pt 45.35pt 59.75pt;}
div.WordSection3
	{page:WordSection3;}
@page WordSection4
	{size:531.0pt 9.0in;
	margin:48.25pt 41.75pt 45.35pt 59.75pt;}
div.WordSection4
	{page:WordSection4;}
@page WordSection5
	{size:531.0pt 9.0in;
	margin:48.25pt 41.75pt 45.35pt 59.75pt;}
div.WordSection5
	{page:WordSection5;}
@page WordSection6
	{size:531.0pt 9.0in;
	margin:48.25pt 41.75pt 45.35pt 59.75pt;}
div.WordSection6
	{page:WordSection6;}
@page WordSection7
	{size:531.0pt 9.0in;
	margin:48.25pt 41.75pt 45.35pt 59.75pt;}
div.WordSection7
	{page:WordSection7;}
@page WordSection8
	{size:531.0pt 9.0in;
	margin:.5in .5in .5in .5in;}
div.WordSection8
	{page:WordSection8;}
@page WordSection9
	{size:531.0pt 9.0in;
	margin:48.25pt 41.75pt 45.35pt 59.75pt;}
div.WordSection9
	{page:WordSection9;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US link=blue vlink=purple style='word-wrap:break-word;text-justify-trim:
punctuation'>

<div class=WordSection1>

<p class=MsoNormal><img width=710 height=865 id="Canvas 2"
src="Engineering%20for%20Accessibility_files/image001.gif"></p>

</div>

<span style='font-size:9.0pt;font-family:"Times",serif;color:black;letter-spacing:
-.1pt'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection2>

<p class=Body>PUBLISHED BY</p>

<p class=Body>Microsoft Press</p>

<p class=Body>A Division of Microsoft Corporation</p>

<p class=Body>One Microsoft Way</p>

<p class=Body-endofpara>Redmond, Washington 98052-6399</p>

<p class=Body-endofpara>Copyright © 2009 by Microsoft Corporation</p>

<p class=Body-endofpara>All rights reserved. No part of the contents of this
book may be reproduced or transmitted in any form or by any means without the
written permission of the publisher.</p>

<p class=Body>Library of Congress Control Number: 2009930292</p>

<p class=Body>&nbsp;</p>

<p class=Body>A CIP catalogue record for this book is available from the
British Library.</p>

<p class=Body>&nbsp;</p>

<p class=Body>Microsoft Press books are available through booksellers and
distributors worldwide. For further infor­mation about international editions,
contact your local Microsoft Corporation office or contact Microsoft Press
International directly at fax (425) 936-7329. Visit our Web site at
www.microsoft.com/mspress. Send comments to mspinput@microsoft.com.</p>

<p class=Body>&nbsp;</p>

<p class=Body><span style='color:windowtext'>Microsoft, Microsoft Press, Active
Accessibility, MSDN, Silverlight, Win32, Windows, Windows Server, and Windows
Vista</span> are either registered trademarks or trademarks of the Microsoft
group of companies. Other product and company names mentioned herein may be the
trademarks of their respective owners.</p>

<p class=Body>&nbsp;</p>

<p class=Body>The example companies, organizations, products, domain names,
e-mail addresses, logos, people, places, and events depicted herein are
fictitious. No association with any real company, organization, product, domain
name, e-mail address, logo, person, place, or event is intended or should be
inferred.</p>

<p class=Body>&nbsp;</p>

<p class=Body>This book expresses the author’s views and opinions. The
information contained in this book is provided without any express, statutory,
or implied warranties. Neither the authors, Microsoft Corporation, nor its
resellers, or distributors will be held liable for any damages caused or
alleged to be caused either directly or indirectly by this book.</p>

<p class=Body>&nbsp;</p>

<p class=Body style='margin-bottom:2.0pt'><b>Acquisitions Editor:</b> Ben Ryan</p>

<p class=Body-endofpara align=left style='margin-bottom:2.0pt;text-align:left'><b>Developmental
Editor: </b>Devon Musgrave</p>

<p class=Body-endofpara align=left style='margin-bottom:2.0pt;text-align:left'><b>Project
Editor: </b>Lynn Finnel</p>

<p class=Body-endofpara align=left style='margin-bottom:2.0pt;text-align:left'><b>Editorial
Production: </b>Online Training Solutions, Inc.</p>

<p class=Body-endofpara align=left style='margin-bottom:2.0pt;text-align:left'><b>Cover:
</b>Tom Draper Design</p>

<p class=Body-endofpara align=left style='margin-bottom:2.0pt;text-align:left'><b>&nbsp;</b></p>

<p class=Body-endofpara align=left style='margin-bottom:2.0pt;text-align:left'><b>&nbsp;</b></p>

<p class=Body>Body Part No. X15-66460</p>

<b><span style='font-size:26.0pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span></b>

<p class=TOCtitle>Table of Contents</p>

<p class=TOCH1>Introduction.................................................................................................................... vii</p>

<p class=TOCChapter>1            The UI Automation Environment..................................................................... 1</p>

<p class=TOCH1>Providers and Clients<span style='display:none'> 1</span></p>

<p class=TOCH2>Providers<span style='display:none'>. 2</span></p>

<p class=TOCH2>Clients<span style='display:none'>. 2</span></p>

<p class=TOCH1>Main Components<span style='display:none'> 3</span></p>

<p class=TOCH2>Automation Elements<span style='display:none'> 3</span></p>

<p class=TOCH2>The UIA Tree<span style='display:none'>. 3</span></p>

<p class=TOCH2>Control Patterns<span style='display:none'> 5</span></p>

<p class=TOCH2>Control Types<span style='display:none'>. 5</span></p>

<p class=TOCH2>Properties<span style='display:none'>. 6</span></p>

<p class=TOCH2>Events<span style='display:none'>. 7</span></p>

<p class=TOCH2>Custom Control Patterns, Properties, and Events<span
style='display:none'>. 7</span></p>

<p class=TOCH1><span style='display:none'>Planning Your Hierarchy.. 8</span></p>

<p class=TOCChapter>2........................................ Designing the
Logical Hierarchy<span style='display:none'>. 9</span></p>

<p class=TOCH1>The Logical Hierarchy<span style='display:none'>. 10</span></p>

<p class=TOCH1>Mapping Basics<span style='display:none'>. 11</span></p>

<p class=TOCH2>Elements and Controls<span style='display:none'>. 11</span></p>

<p class=TOCH2>Element Relationships and Navigation<span style='display:none'>. 12</span></p>

<p class=TOCH1>Getting Started<span style='display:none'>. 14</span></p>

<p class=TOCH1>How to Do It<span style='display:none'> 16</span></p>

<p class=TOCH2>Example: Employee Timecard<span style='display:none'>. 17</span></p>

<span style='font-size:9.5pt;font-family:"Segoe Semibold",sans-serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<p class=TOCH1>Using the Logical Hierarchy for Planning Accessibility Settings<span
style='display:none'>. 23</span></p>

<p class=TOCH2>Keyboard Navigation<span style='display:none'>. 24</span></p>

<p class=TOCH2>Graphics: Decorative vs. Contextual<span style='display:none'> 24</span></p>

<p class=TOCH1>Complex User Interfaces<span style='display:none'>. 24</span></p>

<p class=TOCH1>Designing Element Functionality<span style='display:none'>. 25</span></p>

<p class=TOCChapter>3           Designing Your Implementation<span
style='display:none'>. 27</span></p>

<p class=TOCH1>Product Example Continued: Employee Timecard<span
style='display:none'>. 28</span></p>

<p class=TOCH1>Prep Work: Creating the Implementation Table<span
style='display:none'>. 29</span></p>

<p class=TOCH1>Process A: Control Maps to a UIA Control Type<span
style='display:none'>. 31</span></p>

<p class=TOCH2>Step 1: Gathering Required Control Patterns<span
style='display:none'> 31</span></p>

<p class=TOCH2>Step 2: Gathering Required Control Type Properties<span
style='display:none'>. 32</span></p>

<p class=TOCH2>Step 3: Gathering Requirements for Additional Control <br>
Functionality<span style='display:none'>. 36</span></p>

<p class=TOCH1>Process B: Control Does Not Map to a UIA Control Type<span
style='display:none'>. 40</span></p>

<p class=TOCH1>Methods and Events<span style='display:none'>. 41</span></p>

<p class=TOCH1>Framework-Dependent Decisions<span style='display:none'> 42</span></p>

<p class=TOCH1>Implementing Your Native UIA Solution<span style='display:none'>. 43</span></p>

<p class=TOCH1>Rounding Up Native Solutions<span style='display:none'>. 43</span></p>

<p class=TOCChapter>4..................................................................... Testing
and Delivery<span style='display:none'>. 45</span></p>

<p class=TOCH1>Accessibility Testing and Test Automation<span style='display:
none'>. 46</span></p>

<p class=TOCH1>Tools<span style='display:none'>. 47</span></p>

<p class=TOCH2>Investigation Tools<span style='display:none'>. 47</span></p>

<p class=TOCH2>UIA Verify Test Automation Framework<span style='display:none'>. 48</span></p>

<p class=TOCH1>Keyboard<span style='display:none'>. 49</span></p>

<p class=TOCH1>Users and AT Devices<span style='display:none'>. 50</span></p>

<p class=TOCH1>Delivery<span style='display:none'>. 50</span></p>

<p class=TOCH1>Conclusion: 7 Steps to a Better Computing World<span
style='display:none'>. 51</span></p>

<p class=TOCH1>References<span style='display:none'>. 51</span></p>

<span style='font-size:12.0pt;font-family:"Segoe Semibold",sans-serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<p class=TOCChapter><span style='display:none'>Appendix A: Windows Automation
API: Overview.. 53</span></p>

<p class=TOCH1>Microsoft Active Accessibility and UI Automation Compared<span
style='display:none'>. 54</span></p>

<p class=TOCH1>Architecture and Interoperability<span style='display:none'>. 54</span></p>

<p class=TOCH2>Microsoft Active Accessibility Architecture<span
style='display:none'>. 55</span></p>

<p class=TOCH1>UI Automation Architecture<span style='display:none'>. 56</span></p>

<p class=TOCH2>Interoperability Between Microsoft Active Accessibility-Based <br>
Applications and UI Automation-Based Applications<span style='display:none'> 56</span></p>

<p class=TOCH1>Limitations of Microsoft Active Accessibility<span
style='display:none'>. 58</span></p>

<p class=TOCH1>UI Automation Specification<span style='display:none'>. 58</span></p>

<p class=TOCH2>UI Automation Elements<span style='display:none'> 59</span></p>

<p class=TOCH2>UI Automation Tree<span style='display:none'>. 60</span></p>

<p class=TOCH2>UI Automation Properties<span style='display:none'> 61</span></p>

<p class=TOCH2>UI Automation Control Patterns<span style='display:none'> 61</span></p>

<p class=TOCH2>UI Automation Control Types<span style='display:none'> 61</span></p>

<p class=TOCH2>UI Automation Events<span style='display:none'>. 62</span></p>

<p class=TOCH1>The IAccessibleEx Interface<span style='display:none'>. 62</span></p>

<p class=TOCH1>Choosing Microsoft Active Accessibility, UI Automation, or <br>
IAccessibleEx<span style='display:none'>. 62</span></p>

<p class=TOCChapter><span style='display:none'>. Appendix B: UI Automation Overview. 65</span></p>

<p class=TOCH1><span lang=FR>UI Automation Components</span><span
style='display:none'>. 66</span></p>

<p class=TOCH1>UI Automation Header Files<span style='display:none'>. 66</span></p>

<p class=TOCH1>UI Automation Model<span style='display:none'> 67</span></p>

<p class=TOCH1>UI Automation Providers<span style='display:none'> 68</span></p>

<p class=TOCChapter><span style='display:none'>  Glossary  69</span></p>

<p class=TOCChapter><span style='position:absolute;z-index:251657728;
margin-left:12px;margin-top:119px;width:547px;height:109px'><img width=547
height=109 src="Engineering%20for%20Accessibility_files/image002.gif"
alt="What do you think of this book? We want to hear from you! Microsoft is interested in hearing your feedback so we can continually improve our books and learning resources for you. To participate in a brief online survey, please visit Microsoft.com slash learning slash booksurvey."></span><span
style='position:absolute;z-index:251656704;margin-left:0px;margin-top:503px;
width:547px;height:109px'><img width=547 height=109
src="Engineering%20for%20Accessibility_files/image003.gif"></span><span
style='display:none'>  Index……………………………………………………………………………………………  75</span></p>

<p class=TOCChapter>&nbsp;</p>

<p class=TOCChapter>&nbsp;</p>

<p class=TOCChapter>&nbsp;</p>

<p class=TOCChapter>&nbsp;</p>

<h1>&nbsp;</h1>

<h1>About the Authors</h1>

<p class=MsoNormal><img width=96 height=135 id="Picture 19"
src="Engineering%20for%20Accessibility_files/image004.gif"
alt="This is a photo of author, Jason Grieves"></p>

<p class=MsoNormal>Jason Grieves is a Program Manager in the Windows
Accessibility Group. Jason works with students of all ages to identify their
abilities rather than disabilities. In turn, he finds solutions to use those
abilities to live, work, and play.</p>

<p class=MsoNormal><img width=96 height=135 id="Picture 18"
src="Engineering%20for%20Accessibility_files/image005.gif"
alt="This is a photo of author, Masahiko Kaneko"></p>

<p class=MsoNormal>Masahiko Kaneko is a Senior Program Manager for UI
Automation. A program manager in accessibility at Microsoft for more than 10
years, he has been involved with several releases of the Windows Operating
System as well as many other Microsoft products.</p>

<h2 style='margin-left:0in'>Technical Contributors</h2>

<p class=MsoNormal>Larry Waldman has been a Program Manager working on
Microsoft Office and accessibility for more than four years. While working on
Office, he has led research in graphics acces­sibility, and recently became the
driver for accessibility across the entire line of Office products.</p>

<p class=MsoNormal>Annuska Perkins is a Senior Accessibility Strategist at
Microsoft. She is passionate about improving the usability and effectiveness of
accessible technology solutions. She does product planning and incubation, in
collaboration with business groups across Microsoft.</p>

<p class=MsoNormal>Greg Rolander is a programming writer in the Windows
Experience division. Greg writes the documentation for the Windows SDK for the
Windows Automation API, as well as several other Windows components.</p>

<span style='font-size:26.0pt;font-family:"Segoe Semibold",sans-serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<p class=ChTitle>Introduction</p>

<p class=MsoNormal>What comes to mind when you think of accessibility? If
you’re like most people, you might conjure up images of a wheelchair or perhaps
someone who is blind. What about someone with a broken arm, a child with a
learning disability, or a 65-year-old who needs high-prescription eyeglasses to
read? When it comes to technology, accessibility pertains to a <br>
wide range of people with a wide range of abilities, not just the folks with
disabilities.</p>

<p class=MsoNormal>Accessible technology is technology that users can adapt to
meet their visual, hearing, dexterity, cognitive, and speech needs and
interaction preferences. Accessible technology includes accessibility options
and utilities built into products, as well as specialty hardware <br>
and software add-ons called assistive technology (AT) that help individuals
interact with a computer.</p>

<p class=MsoNormal>There are essentially two types of users of accessible
technology: (1) those who need it, because of disabilities or impairments,
age-related conditions, or temporary conditions (such as limited mobility from
a broken arm), and (2) those who use it out of preference, for a more
comfortable or convenient computing experience. The majority of computer users
(54 per­cent) are aware of some form of accessible technology, and 44 percent
of computer users use some form of it, but many of them are not using AT that
would benefit them (Forrester 2004).</p>

<p class=MsoNormal style='margin-right:.3in'>A
2003–2004 study commissioned by Microsoft and conducted by Forrester Research
found that over half—57 percent—of computer users in the United
  States between the ages of 18 and 64 could benefit from accessible
technology. Most of these users did not identify themselves as having a
disability or impaired but expressed certain task-related difficulties or
impairments when using a computer. Forrester (2003) also found the following
number of users with these specific difficulties:</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>One in four experiences a visual difficulty.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>One in four experiences pain in the wrists or hands.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>One in five experiences hearing difficulty.</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>Besides permanent disabilities, the severity and type of
difficulty or impairment an individual experiences can vary throughout a
person’s life. Table I-1 lists the four key classes of disabil­ities and the
types of accessibility options, utilities, or AT devices your users might use
to address their difficulties or impairments.</p>

<span class=FigTableNum><span style='font-size:7.5pt;color:black;font-weight:
normal'><br clear=all style='page-break-before:always'>
</span></span>

<p class=TableNum-Title>TABLE I-1<span style='font-family:"Cambria Math",serif'>&#8195;</span>Possible
AT solutions users might use to address their difficulties or impairments</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <thead>
  <tr>
   <td width=172 valign=top style='width:129.25pt;background:#D9D9D9;
   padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Class of Disability</p>
   </td>
   <td width=176 valign=top style='width:131.9pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>User Experience Without AT</p>
   </td>
   <td width=175 valign=top style='width:131.35pt;background:#D9D9D9;
   padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Possible AT Solutions</p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width=172 valign=top style='width:129.25pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>Vision</p>
  </td>
  <td width=176 valign=top style='width:131.9pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>&nbsp;</p>
  </td>
  <td width=175 valign=top style='width:131.35pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=172 valign=top style='width:129.25pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Mild
  (low vision, color blindness)</p>
  </td>
  <td width=176 valign=top style='width:131.9pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Difficulty with legibility of soft­ware and hardware
  interfaces</p>
  </td>
  <td width=175 valign=top style='width:131.35pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Setting changes to font size and colors</p>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Alternative font style and rasterization</p>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Larger screens</p>
  <p class=ListEnd>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=172 valign=top style='width:129.25pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Severe
  (blindness)</p>
  </td>
  <td width=176 valign=top style='width:131.9pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Unable to use computer monitor, need the option of
  receiving information through hearing or touch</p>
  </td>
  <td width=175 valign=top style='width:131.35pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Screen reader (for text-to-speech and sound cues)</p>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Audio description of video</p>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Refreshable Braille display</p>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Keyboard navigation</p>
  <p class=ListEnd>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=172 valign=top style='width:129.25pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>Dexterity</p>
  </td>
  <td width=176 valign=top style='width:131.9pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>&nbsp;</p>
  </td>
  <td width=175 valign=top style='width:131.35pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=172 valign=top style='width:129.25pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Mild
  (temporary pain, reduced dexterity such as from a broken arm) to severe
  (paralysis, maybe carpal tunnel syndrome)</p>
  </td>
  <td width=176 valign=top style='width:131.9pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Using standard mouse or keyboard is painful or difficult</p>
  </td>
  <td width=175 valign=top style='width:131.35pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Fine-tuning mouse and keyboard</p>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Software (on-screen) keyboard and mouse alternative</p>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Speech recognition utility</p>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Alternative input device, such as a joystick or head-tracking
  mouse</p>
  <p class=ListEnd>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=172 valign=top style='width:129.25pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>Hearing</p>
  </td>
  <td width=176 valign=top style='width:131.9pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>&nbsp;</p>
  </td>
  <td width=175 valign=top style='width:131.35pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=172 valign=top style='width:129.25pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Mild
  (hard of hearing) to <br>
  severe (deaf)</p>
  </td>
  <td width=176 valign=top style='width:131.9pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Difficulty distinguishing words and sounds or not at all,
  need to receive information visually</p>
  </td>
  <td width=175 valign=top style='width:131.35pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Volume adjustments</p>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Sounds supplemented by visual cues</p>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Multimedia captioning</p>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Sign language</p>
  <p class=ListEnd>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=172 valign=top style='width:129.25pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'><span style='font-size:
  9.0pt;font-family:"Segoe Semibold",sans-serif;color:black'><br clear=all
  style='page-break-before:always'>
  </span>
  <p class=TableSubhead><br clear=all style='page-break-before:always'>
  Cognitive</p>
  </td>
  <td width=176 valign=top style='width:131.9pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>&nbsp;</p>
  </td>
  <td width=175 valign=top style='width:131.35pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=172 valign=top style='width:129.25pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Mild
  (learning difficulties) to severe (Alzheimer’s, dementia)</p>
  </td>
  <td width=176 valign=top style='width:131.9pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Difficulty with word recognition, memory, concentration,
  and reasoning; UI might be over­whelming</p>
  </td>
  <td width=175 valign=top style='width:131.35pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Reading and learning aids</p>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Word prediction programs</p>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Audio speech paired with visual presentation</p>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Simplified UI</p>
  <p class=TableBullList style='margin-left:10.85pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span>Task reminders</p>
  <p class=ListEnd>&nbsp;</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>By 2010, the number of accessible technology users is
expected to rise to 70 million, up from 57 million users in 2003 (Forrester
2004). Among users who use built-in accessibility options and utilities, 68
percent have mild or severe difficulties or impairments, whereas the remaining
32 percent have no difficulties or impairments (Forrester 2004). Among users
who use AT products, such as trackballs or screen magnifiers, 65 percent did
not report health issues as reasons for using AT products, but rather cited
that these products make computers easier to use, more comfortable, and more
convenient, or that they wish to avoid developing a future health issue
(Forrester 2004).</p>

<p class=MsoNormal>If a majority of your users could benefit from your product
being accessible, doesn’t it just make sense to build an accessible product? If
you have decided to do so, you are sending a message to your customers that
their needs matter. Populations in many countries are getting older. Civil
rights for people with disabilities are gradually being extended to encompass
digital inclusion. Governments are requiring procurement officials to purchase
products that are the most accessible (mandated in the U.S.
by Section 508 of the Rehabilitation Act). For technology producers, creating
accessible products is just the right thing to do, and it makes good business
sense.</p>

<h1>Who Should Read This Book</h1>

<p class=MsoNormal>This book is intended to be an introduction to create
accessible software products. If you want to understand how to incorporate
programmatic access and keyboard access into your inter­faces and how
accessibility fits into the software development cycle, this book is for you. If
you are a project manager or someone who is overseeing the development of an
accessible product, you should also find this book helpful in understanding how
accessibility is inte­grated at each stage of the development cycle.</p>

<h1>What This Book Covers</h1>

<p class=MsoNormal>As you might guess, accessibility should be integrated from
the beginning of the product development cycle, when the application or product
is in the planning or design phase, rather than later, when retrofitting your
product for accessibility can be extremely costly—and sometimes impossible,
because part of accessibility development requires attention at the
architecture level. This book will guide you through the process of planning
for the two crit­ical pieces for accessibility, programmatic access and keyboard
access, from the beginning of the software development lifecycle and
integrating it throughout. It is, therefore, suggested that you first read the
chapters in this book sequentially and then afterwards use this book as a
reference as you develop your product. This book will also show you how to map
out the logical hierarchy for your product and plan for implementation using UI
</p>

<br clear=all style='page-break-before:always'>

<p class=MsoNormal>Automation (UIA), Microsoft’s accessibility API, to create
products that work with assistive technologies.</p>

<p class=MsoNormal>Here is what to expect in each chapter:</p>

<p class=Term-DefinitionBulleted><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>Chapter 1, “The UI Automation Environment,”</b> provides
definitions and an overview of UIA and its role in accessibility.</p>

<p class=Term-DefinitionBulleted><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>Chapter 2, “Designing the Logical Hierarchy,”</b> walks you
through the steps for designing a logical hierarchy of your product, which will
serve as a model for your accessibility implementation.</p>

<p class=Term-DefinitionBulleted><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>Chapter 3, “Designing Your Implementation,”</b> guides you
through the process of designing the implementation of the controls in your UI.</p>

<p class=Term-DefinitionBulleted><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>Chapter 4, “Testing and Delivery,”</b> discusses testing for
the programmatic access and keyboard access in your product and documentation
for delivery, as well as a brief summary of steps for incorporating
accessibility into your product.</p>

<p class=ListEnd>&nbsp;</p>

<h1>The Basics</h1>

<p class=MsoNormal>As mentioned, programmatic access and keyboard access are
two critical pieces to accessi­bility and are the basis for this book. Let’s go
over these two areas a little further, as well as some basic information and
settings you should be aware of when developing for accessi­bility.</p>

<h2>Programmatic Access</h2>

<p class=MsoNormal>Programmatic access is critical for creating accessibility
in applications. Programmatic access is achieved when an application or library
of UI functionality exposes the content, interactions, context, and semantics
of the UI via a discoverable and publicly documented application pro­gramming
interface (API). Another program can use the API to provide an augmentative,
automated, or alternate user interaction. Basic information conveyed through
programmatic access includes: navigation, interactive controls, asynchronous
changes to the page, keyboard focus, and other important information about the
UI.</p>

<p class=MsoNormal>Programmatic access involves ensuring all UI controls are
exposed programmatically to the AT. Without it, the APIs for AT cannot
interpret information correctly, leaving the user unable to use the products
sufficiently or forcing the AT to use undocumented programming inter­faces or
techniques never intended to be used as an “accessibility” interface. When UI
controls are exposed to AT, the AT is able to determine what actions and
options are </p>

<br clear=all style='page-break-before:always'>

<p class=MsoNormal>available to the user. Without proper programmatic access, a
user may receive useless, erroneous, or even no information about what they are
doing in the program.</p>

<h2>Keyboard Access</h2>

<p class=MsoNormal>Keyboard access pertains to the keyboard navigation and
keyboard focus of an application. For users who are blind or have mobility
issues, being able to navigate the UI with a keyboard is extremely important;
however, only those UI controls that require user interaction to func­tion
should be given keyboard focus. Components that don’t require an action, such
as static images, do not need keyboard focus.</p>

<p class=MsoNormal>It is important to remember that unlike navigating with a
mouse, keyboard navigation is linear. So, when considering keyboard navigation,
think about how your user will interact with your product and what the logical
navigation for a user will be. In Western cultures, people read from left to
right, top to bottom. It is, therefore, common practice to follow this pattern
for keyboard navigation, though there are exceptions to this practice.</p>

<p class=MsoNormal>When designing keyboard navigation, examine your UI, and
think about these questions:</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>How are the controls laid out or grouped in the UI?</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Are there a few significant groups of controls?</p>

<p class=BullList2><span style='font-size:12.0pt;font-family:"Courier New"'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span>If
yes, do those groups contain another level of groups?</p>

<p class=ListEnd>&nbsp;</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Among peer controls, should navigation be done by tabbing around,
or via special navigation (such as arrow keys), or both?</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>The goal is to help the user understand how the UI is laid
out and identify the controls that are actionable. If you are finding that
there are too many tab stops before the user completes the navigation loop,
consider grouping related controls together. Some controls that are related,
such as a hybrid control, may need to be addressed at this early exploration
stage. Once you begin to develop your product, it is difficult to rework the
keyboard navigation, so plan carefully and plan early!</p>

<p class=SeeAlso>Go further: For guidelines on designing keyboard focus and
keyboard navigation, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h2>Respect Your User</h2>

<p class=MsoNormal>When developing accessible products, a key thing to keep in
mind is to respect your end user’s preferences and requirements. Whether they
are selecting larger icons, choosing high contrast, or using a screen reader,
users configure their system settings for a more comfor­table user experience.
It is absolutely essential, then, that you allow system-wide settings to </p>

<br clear=all style='page-break-before:always'>

<p class=MsoNormal>work with your product. Overriding those settings through
hard-coding might impede or even prevent a user from accessing parts of your
products.</p>

<h2>Visual UI Design Settings</h2>

<p class=MsoNormal>When designing the visual UI, ensure that your product has a
high contrast setting, uses the default system fonts and smoothing options,
correctly scales to the dots per inch (dpi) screen settings, has default text
with at least a 5:1 contrast ratio with the background, and has color
combinations that will be easy for users with color deficiencies to
differentiate.</p>

<h3>High Contrast Setting</h3>

<p class=MsoNormal>One of the built-in accessibility features in Microsoft’s
Windows operating systems is the High Contrast mode, which heightens the color
contrast of text and images on the computer screen. For some people, increasing
the contrast in colors reduces eyestrain and makes it easier to read. When you
verify your UI in high contrast, you want to check that controls, such as
links, have been coded consistently and with system colors (not with hard-coded
colors) to ensure that they will be able to see all the controls on the screen
that a user not using high contrast would see.</p>

<h3>System Font Settings</h3>

<p class=MsoNormal>To ensure readability and minimize any “unexpected”
distortions to the text, make sure that your product always adheres to the
default system fonts and uses the anti-aliasing and smoothing options. If your
product uses custom fonts, users may face significant readability issues and
distractions when they customize the presentation of their UI (through the use
of <br>
a screen reader or by using different font styles to view your UI, for
instance).</p>

<h3>High DPI Resolutions</h3>

<p class=MsoNormal>For users with vision impairments, having a scalable UI is important.
UIs that do not scale correctly in high dpi resolutions may cause important UI
components to overlap or hide other components and can become inaccessible. Since
the release of Windows Vista, the Windows platform replaced large font settings
with dpi configurations.</p>

<p class=SeeAlso><span class=Set-OffLineChar><span style='font-style:normal'>Go
further: For more information on h</span></span>ow to write high dpi
applications, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<b><span style='font-size:12.0pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span></b>

<h3>Color Contrast Ratio</h3>

<p class=MsoNormal>The updated Section 508 of the Americans with Disability Act,
as well as other legislations, requires that the default color contrasts
between text and its background must be 5:1. For large texts (18-point font
sizes, or 14 points and bolded) the required default contrast is 3:1.</p>

<p class=SeeAlso>Go further: For more information on checking color contrast,
go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h3>Color Combinations</h3>

<p class=MsoNormal>About 7 percent of males (and less than 1 percent of
females) have some form of color defi­ciency. Users with colorblindness have
problems distinguishing between certain colors, so it is important that color
alone is never used to convey status or meaning in an application. As for
decorative images (such as icons or backgrounds), color combinations should be
chosen in a manner that maximizes the perception of the image by colorblind
users.</p>

<p class=SeeAlso>Go further: For more information on color combinations, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h1>How Accessibility Fits into the Development Cycle</h1>

<p class=MsoNormal>Now that we’ve covered some of the basics, let’s talk about
how accessibility fits into each stage of the development cycle—requirements,
design, implementation, verification, and release. You can adapt this model to
the development cycle for your product. Figure I-1 provides a comprehensive
view of a traditional software development cycle and activities <br>
you can do to incorporate accessibility into your product.</p>

<p class=Fig-Graphic><img width=352 height=689 id="Picture 17"
src="Engineering%20for%20Accessibility_files/image006.gif"
alt="Illustration showing how the accessibility development lifecycle is incorporated into the product development lifecycle"></p>

<p class=Num-Caption><span class=FigTableNum><span style='font-size:7.5pt'>Figure
I-1</span></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>The
development cycle</p>

<b><span style='font-size:14.0pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span></b>

<h2>Requirements Stage</h2>

<p class=MsoNormal>There may be a variety of reasons why you may want to
incorporate accessibility into your product for a variety of reasons: you want
to create software that’s accessible for a loved one, you hope to sell your
product to the U.S. government, you want to expand your market base, your
company or the law requires it, or you simply desire to do the right thing for
your cus­tomers. When you decide to create a new product or update an existing
one, you should know whether you will incorporate accessibility into your
product.</p>

<p class=MsoNormal>Once you have set your requirements, generate personas that
exemplify users of varying types of abilities. Create scenarios to determine
what design features will delight and assist your users, and illustrate how
your users will accomplish tasks with your product. Prioritize your features,
and make sure that all users can complete your use cases. Beware of blanks in
your specifications! Your goal is to ensure that your product will be usable by
people of varying abilities.</p>

<p class=SeeAlso>Go further: For more information on personas, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h2>Design Stage</h2>

<p class=MsoNormal>In the design stage, the framework you will use is critical
to the development of your product. If you have the luxury of choosing your
framework, think about how much effort it will take to create your controls
within the framework. What are the default or built-in accessibility prop­erties
that come with it? Which controls will you need to customize? When choosing
your framework, you are essentially choosing how much of the accessibility
controls you will get “for free” (that is, how much of the controls are already
built-in) and how much will require additional costs because of control
customizations. If accessibility was implemented in the past, look at the
design docs for those earlier versions to see how accessibility features were
implemented in them.</p>

<p class=MsoNormal>Once you have your framework, design a logical hierarchy to
map out your controls (Chapter 2 covers this topic in more detail). If your
design is too complex, or your framework won’t even support the features that
you are thinking of, it may not be worth the time, money, or effort to develop
them. Accessibility can sometimes be a way to measure the usability and
approachability of your product’s overall design. For instance, if you are
finding that the design of your keyboard navigation or logical hierarchy is
becoming way too complex, it’s likely that your user will have a hard time
navigating your UI and will have a bad experience with your product. Go back to
the drawing board, and make sure you are following funda­mental user experience
(UX) and accessible design practices. It’s likely that somebody has already
addressed the same design issues you’re facing.</p>

<br clear=all style='page-break-before:always'>

<p class=MsoNormal>When you have designed your programmatic access and keyboard
access implementation, ensure that all accessibility API information is noted
in the specs, including all the basic development settings touched on earlier
(settings for high contrast, system font defaults, a dpi-aware UI, a 5:1
text-to-background contrast ratio, and color combinations that will be easy for
users with color deficiencies to differentiate). Keep in mind that it may be
harder (or easier) to adhere to certain accessibility settings, depending on
the framework. Programmatic access is often limited by the UI framework for the
application, so it is crucial in the design stage to reconfirm the standards
and expectations of the accessibility API supported by the UI framework.
Keyboard navigations and the flexibility of accessibility implementations are
usually tied to the architecture of the UI framework.</p>

<p class=MsoNormal>It is absolutely critical to note that when designing your
programmatic access, <i>you should avoid creating new custom controls as much
as possible</i>, because the cost for development, documentation, and help on
how to interact with the control is significant, and ATs may not know how to
interact with the control.</p>

<h2>Implementation Stage</h2>

<p class=MsoNormal>In the implementation stage, you will need to make sure that
the chosen architecture and specs will work. If the specs do not work, go back
to the design stage, and figure out a more effective or less expensive
alternative.</p>

<p class=MsoNormal>When you implement the specs, be sure to keep the user
experience in mind as you develop your product. Accessibility personas are
great for reminding you of who your users are!</p>

<h2>Verification Stage</h2>

<p class=MsoNormal>In the verification or test stage, ensure that all the specs
were implemented correctly and that the accessibility API is reporting
correctly for programmatic access. Your accessibility API, <br>
such as UIA, must expose correctly to AT. For testing, use both accessibility
test tools and full-featured, third-party accessibility aids. Write test cases
and build verification tests for your accessibility scenarios to ensure that
all the specs were implemented correctly.</p>

<br clear=all style='page-break-before:always'>

<p class=MsoNormal>Consider leveraging automated testing, and establish a
process and metrics for accessibility bugs. You want to have clear and
consistent severity ratings for these problems. Such ratings may look something
like the following:</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>High severity means that no workarounds are available for your
target users, or the bug blocks the user from completing the task.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Moderate severity means that workarounds are available, or that
the bug does not block the user’s ability to complete the operation. Do not
overlook moderate severity issues, just because there is a workaround. These
issues can sometimes introduce other, significant usability or product quality
issues.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Low severity means that the bug’s impact to accessibility with
workarounds is low.</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>The verification stage is a good time to start documenting
all the accessibility options and features of your product. Just be sure to
create documentation for your users in accessible formats! If you hope to sell
your product to the U.S. government, you may also start funneling this
information into a Section 508 Voluntary Product Accessibility Template (VPAT),
which is a standardized form developed by the Information Technology Industry
Council (ITIC) to show how a software product meets key regulations of Section
508 of the Rehabilitation Act. You absolutely want to address any high severity
issues before the VPAT process, as any problems with your product will be
subject to VPAT documentation.</p>

<p class=MsoNormal>Before your final release, be sure to obtain and incorporate
feedback from your customers and partners throughout the development cycle.
Include people with disabilities in your usability studies and beta testing.
Work with your usability team to plan for specific accessi­bility studies.
Include AT vendors in feedback programs, and collaborate with them to ensure
that their products work with yours. Ideally, you should not need to make any
major changes to your product at this stage. Any major (or expensive) changes
should be reserved for your next revision.</p>

<p class=SeeAlso>Go further: For more information on accessibility tools and
declarations of conformance, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h2>Release Stage</h2>

<p class=MsoNormal>In the release stage, continue to engage with AT vendors and
users. Include accessible docu­mentation both internally and externally with
your product, and collaborate with your marketing group on go-to-launch
activities and external messaging for your product.</p>

<b><span style='font-size:16.0pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span></b>

<h1>Ready, Set, Go!</h1>

<p class=MsoNormal>At this point, you should now have a general understanding
of what accessibility is, the types of AT your users may be relying on to use
your product, the basic development settings you should include in your
product, and how accessibility fits into the development cycle. You are now
ready to learn more about the various components in the UIA architecture, how
to design a logical hierarchy, design your implementation, and how to test your
implementation and deliver your product. Through each stage of the process, you
will continue to learn how to set the foundation for accessibility through
programmatic access and keyboard access. For more information on the visual UI
design settings mentioned earlier (such as high contrast, default font, and
high dpi settings), which are also necessary for an accessible product, check
out the sample of resources we provide to get you started.</p>

<p class=MsoNormal>Remember, designing and developing for accessibility is one
of the best ways to give you clarity about the user experience in general. By
creating accessible products, you are working to improve the user experience
for all people. The next chapter proceeds with an introduction to UIA,
Microsoft’s accessibility API, which will help you integrate accessibility into
your product.</p>

<p class=Readeraidonly><span style='font-size:9.5pt;font-family:"Segoe Semibold",sans-serif'>Find
Additional Content Online</span><span style='font-family:"Cambria Math",serif'>&#8194;</span>As
new or updated material becomes available that com­plements your book, it will
be posted online on the Microsoft Press Online Developer Tools Web site. The
type of material you might find includes updates to book content, articles,
links to com­panion content, errata, sample chapters, and more. This Web is
available at <i>www.microsoft.com/<br>
learning/books/online/developer</i>, and is updated periodically.</p>

<h1>Support for This Book</h1>

<p class=MsoNormal>Every effort has been made to ensure the accuracy of this
book. As corrections or changes are collected, they will be added to a
Microsoft Knowledge Base article.</p>

<p class=MsoNormal>Microsoft Press provides support for books at the following
Web site:</p>

<p class=Set-OffLine>http://www.microsoft.com/learning/support/books/</p>

<b><span style='font-size:14.0pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span></b>

<h2>Questions and Comments</h2>

<p class=MsoNormal>If you have comments, questions, or ideas regarding the
book, or questions that are not answered by visiting the sites above, please
send them to Microsoft Press via e-mail to</p>

<p class=Set-OffLine>mspinput@microsoft.com.</p>

<p class=MsoNormal>Or via postal mail to</p>

<p class=Set-OffLine><span style='font-style:normal'>Microsoft Press</span></p>

<p class=Set-OffLine><span style='font-style:normal'>Attn:</span> Engineering
Software for Accessibility <span style='font-style:normal'>Editor</span></p>

<p class=Set-OffLine><span style='font-style:normal'>One Microsoft Way</span></p>

<p class=Set-OffLine><span style='font-style:normal'>Redmond, WA 98052-6399.</span></p>

<p class=MsoNormal>Please note that Microsoft software product support is not
offered through these addresses.</p>

<h1>References</h1>

<p class=MsoNormal style='margin-left:.75in;text-indent:-15.1pt'>Forrester
Research, Inc. 2004. “Accessible Technology in Computing: Examining Awareness, Use,
and Future Potential.” Cambridge, MA: 22–41.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-15.1pt'>————.
2003. “The Wide Range of Abilities and Its Impact on Technology.” Cambridge, MA:
7–18. </p>

</div>

<span style='font-size:9.5pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span>

<div class=WordSection3>

<p class=ChNumber>Chapter 1</p>

<p class=ChTitle>The UI Automation Environment</p>

<p class=MsoNormal>Intended for interoperable implementations by other
companies, Microsoft’s UI Automation (UIA) Community Promise is a specification
that provides information about Microsoft's accessibility frameworks, including
Active Accessibility (MSAA), UI Automation (UIA), and its shared
implementations. In this chapter, we provide a summary of descriptions from the
UIA Community Promise to show how the components of UIA fit together to enable accessibility.</p>

<p class=MsoNormal>UIA provides programmatic access to UI controls on the
desktop, enabling assistive technol­ogy (AT) products, such as screen readers,
to provide information about the UI to end users. ATs enable the user to
manipulate the UI by means other than the standard mouse and keyboard, such as
through speech recognition.</p>

<p class=MsoNormal>UIA improves upon Microsoft’s legacy accessibility
framework, MSAA, by aiming to address the following goals:</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Enable efficient access and security over MSAA’s architecture</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Expose more robust information about the UI</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Offer interoperability with MSAA implementations</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Provide developers the option of using either native interfaces
or managed interfaces</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>For demonstration purposes, examples are in native code
(unmanaged interfaces based on COM); however, the same principles and techniques
are applied to managed practices (the programming model of the Microsoft .NET
Framework). Whether you will use native or managed code depends upon your
framework and preferences.</p>

<p class=SeeAlso>Go further: For more information on the UIA Community Promise,
go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h1>Providers and Clients</h1>

<p class=MsoNormal>In UIA, applications, such as word processing programs, are
called <i>Providers</i>. ATs, such as screen readers, are called <i>Clients</i>.
<a name="_Toc181514020"></a><a name="_Toc207799562"></a><a name="_Toc211663861">Providers
expose properties and features of the UI <span class=Term-DefinitionChar>by
implementing UIA interfaces. Clients can then obtain information about the UI through
a client interface from the UIA framework.</span></a></p>

<p class=MsoNormal>Providers communicate to Clients through UIA Events. Events
are crucial for notifying Clients of changes to the UIA Tree (discussed later
in this chapter), UI states, or UI controls. Unlike WinEvents used in MSAA, UIA
Events use a subscription mechanism, rather than a broadcast mechanism, to
obtain information. UIA Clients register for UIA Events for specific user inter­faces
or even parts of the UI and can also request that some UIA Properties and
Control Pattern information be cached along with registration for better
performance.</p>

<p class=MsoNormal>Figure 1-1 is a simplified illustration of a UIA Provider
and Client.</p>

<p class=Fig-Graphic><img width=447 height=148 id="Picture 16"
src="Engineering%20for%20Accessibility_files/image007.gif"
alt="Diagram showing how a UIA Provider and Clients communicate through Events"></p>

<p class=Num-Caption><span class=FigTableNum><span style='font-size:7.5pt'>Figure
1-1</span></span><span class=FigTableNum><span style='font-size:7.5pt;
font-family:"Cambria Math",serif'>&#8194;</span></span>Simplified illustration
of a UIA Provider and Client</p>

<h2>Providers</h2>

<p class=MsoNormal>An application may support UIA through one of two ways:</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Designing the UI based on standard framework controls and
libraries that support UIA</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Implementing the UIA Provider interfaces</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>The following are just some of the common actions performed
by UIA Providers:</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Expose UI controls by describing their functionality through
Control Patterns, Properties, and Methods</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Expose the relationships of UIA Elements through the UIA Tree</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Report changes and actions related to the UI by raising UIA
Events</p>

<p class=ListEnd>&nbsp;</p>

<h2>Clients</h2>

<p class=MsoNormal>UIA Clients can perform many different actions. The
following are just some of the common actions performed:</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Search for elements within the UIA Tree</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Navigate among UIA Elements</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Subscribe to UIA Events</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Manipulate the UI by using UIA Control Patterns</p>

<p class=ListEnd>&nbsp;</p>

<h1>Main Components</h1>

<p class=MsoNormal><a name="_Toc181514021"></a>Now
that you have a general sense of how UIA works, let’s talk further about the
main components of the framework: the Automation Elements and the UIA Tree.</p>

<h2>Automation Elements</h2>

<p class=MsoNormal>UIA exposes every component of the UI to Client applications
as an Automation Element. Elements are contained in a tree structure, with the
desktop as the root element.</p>

<p class=MsoNormal>Automation Elements are associated with pairs of Properties
and Control Patterns, represent­ing the functionality of an element in the UI.
One of these properties is the UIA Control Type, which defines its basic
appearance and functionality as a single recognizable entity, such as a button
or check box. Table 1-1 lists a few Control Types and Patterns associated with
a typical Automation Element.</p>

<p class=TableNum-Title>TABLE 1-1<span style='font-family:"Cambria Math",serif'>&#8194;</span>Example
set of Control Types and Patterns associated with a typical Automation Element</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <tr>
  <td width=196 valign=top style='width:146.75pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead>Name</p>
  </td>
  <td width=196 valign=top style='width:146.75pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead>Control Type</p>
  </td>
  <td width=196 valign=top style='width:146.8pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead>Control Pattern</p>
  </td>
 </tr>
 <tr>
  <td width=196 valign=top style='width:146.75pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>OK</p>
  </td>
  <td width=196 valign=top style='width:146.75pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>Button</span></p>
  </td>
  <td width=196 valign=top style='width:146.8pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>Invoke</span></p>
  </td>
 </tr>
 <tr>
  <td width=196 valign=top style='width:146.75pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Open</p>
  </td>
  <td width=196 valign=top style='width:146.75pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>ComboBox</span></p>
  </td>
  <td width=196 valign=top style='width:146.8pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>Value, Expand/Collapse</span></p>
  </td>
 </tr>
 <tr>
  <td width=196 valign=top style='width:146.75pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Installed Programs</p>
  </td>
  <td width=196 valign=top style='width:146.75pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>List</span></p>
  </td>
  <td width=196 valign=top style='width:146.8pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>Selection, Scroll</span></p>
  </td>
 </tr>
</table>

<h2>The UIA Tree</h2>

<p class=MsoNormal>The UIA Tree allows UIA Clients to navigate through the structure
of the UI. The root element of the Tree is the desktop, whose child elements
are programs running on it, such as an application or the operating system’s UI.
Each of the child elements can contain elements representing parts of the UI,
such as menus, buttons, toolbars, and lists. These elements in turn can also contain
sub-elements, such as items in a list.</p>

<p class=MsoNormal>The UIA Tree is not a fixed structure and is seldom seen in
its totality, because it might contain thousands of elements. Parts of it are
built as they are needed, and it can undergo changes as elements are added,
moved, or removed. <span class=Term-DefinitionChar>UIA enables reparenting and
repositioning, so that an element can move to another part of the tree, despite
the hierarchy imposed by ownership of the underlying architecture.</span></p>

<p class=MsoNormal>Navigation in the UIA Tree <span class=Term-DefinitionChar>is
hierarchical: from parents to children and from one sibling to the next. </span>UIA
Providers support the UIA Tree by implementing navigation among items within a
fragment, which consists of its root and sub-elements. Simple parts of the UI,
however, do not need navigation implemented. The UIA framework manages
navigations between frag­ments based on the underlying architecture.</p>

<p class=MsoNormal><span class=Term-DefinitionChar>A simple UIA Provider can be
seen in Figure 1-2. Created on a Win32 framework, the Email Address window
contains two child elements: the Email text label and its corresponding edit
box. The Email text label and the edit box are siblings and would be positioned
next to each other in the fragment of the UIA Tree. In Chapter 2, “Designing
the Logical Hierarchy,” we discuss in more detail why correctly mapping sibling
relationships is important for navigation and giving users of AT context about
the UI.</span></p>

<p class=Fig-Graphic><span class=Term-DefinitionChar><img width=321 height=160
id="Picture 15" src="Engineering%20for%20Accessibility_files/image008.gif"
alt="Illustration of an application window with two children: a text label and its corresponding edit box"></span></p>

<p class=Num-Caption><span class=FigTableNum><span style='font-size:7.5pt'>Figure
1-2</span></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>UIA
Provider with two child elements: the Email text label and its corresponding
edit box</p>

<p class=MsoNormal>UIA offers three default views of the UIA Tree for Clients. Clients
can customize the view by defining new conditions for the UIA Properties.</p>

<p class=Term-DefinitionBulleted><a name="uiautomation_raw_view"></a><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>Raw view</b>&#8195;The raw view is a UIA Tree with no
filtering. All elements are available in this view.</p>

<p class=Term-DefinitionBulleted><a name="uiautomation_control_view"></a><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>Control view</b>&#8195;The control view of the UIA Tree
simplifies the AT product's task of describing the UI to the end user and
helping that end user interact with the application. The view maps to the UI
structure perceived by an end user. It includes all Automation Elements that an
end user would understand as interactive or contributing to the logical
structure of the control in the UI. Examples of UI items that contribute to the
logical structure of the UI, but are not interactive themselves, are list view
headers, toolbars, menus, and the status bar. Non-interactive items used simply
for layout or decorative purposes will not appear in the control view. An
example would be a panel that is used only to lay out the controls in a dialog box,
decorative graphics, and static text in a dialog box. UIA Providers can specify
the elements appearing in control view by setting the UIA <span
class=InlineCode><span style='font-size:8.5pt'>IsControlElement</span></span> Property
to True.</p>

<p class=Term-DefinitionBulleted><a name="uiautomation_content_view"></a><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>Content view</b>&#8195;The content view of the UIA Tree is a
subset of the control view. It contains UI items that convey the true
information in a UI, including UI items that can receive keyboard focus and
some text that are not labels for other UI items nearby. For example, the
values in a drop-down combo box will appear in the content view because they
represent the information being used by an end user. UIA Providers can specify
the elements appearing in content view by setting the UIA <span
class=InlineCode><span style='font-size:8.5pt'>IsContentElement</span></span>
Property to True.</p>

<p class=ListEnd>&nbsp;</p>

<h2>Control Patterns</h2>

<p class=MsoNormal>Control patterns represent common UI behaviors (such as
invoking a button) and support the properties, methods, and events. Each UIA
Control Pattern is its own interface with properties and methods that provide a
way to categorize and expose a control's functionality, indepen­dent of the UIA
Control Type or the appearance of the control. Table 1-2 provides examples of
the functionality represented by different UIA Control Patterns.</p>

<p class=TableNum-Title>TABLE 1-2<span style='font-family:"Cambria Math",serif'>&#8194;</span>Examples
of functionality for different Control Patterns</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <thead>
  <tr>
   <td width=235 valign=top style='width:176.0pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Functionality</p>
   </td>
   <td width=289 valign=top style='width:216.5pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Control Pattern</p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width=235 valign=top style='width:176.0pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Ability to share three states of on / off / indeterminate </p>
  </td>
  <td width=289 valign=top style='width:216.5pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableCodeBlock><span class=InlineCode><span style='font-size:8.5pt'>Toggle</span></span></p>
  </td>
 </tr>
 <tr>
  <td width=235 valign=top style='width:176.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Ability to support a numeric value within a range</p>
  </td>
  <td width=289 valign=top style='width:216.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableCodeBlock><span class=InlineCode><span style='font-size:8.5pt'>RangeValue</span></span></p>
  </td>
 </tr>
 <tr>
  <td width=235 valign=top style='width:176.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Ability to support a string value</p>
  </td>
  <td width=289 valign=top style='width:216.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableCodeBlock><span class=InlineCode><span style='font-size:8.5pt'>Value</span></span></p>
  </td>
 </tr>
 <tr>
  <td width=235 valign=top style='width:176.0pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Ability to move / resize / rotate</p>
  </td>
  <td width=289 valign=top style='width:216.5pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableCodeBlock><span class=InlineCode><span style='font-size:8.5pt'>Transform</span></span></p>
  </td>
 </tr>
</table>

<p class=SeeAlso>Go further: For more information on UIA Control Patterns, go
to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h2>Control Types</h2>

<p class=MsoNormal>UIA Control Types are well-known identifiers that can be
used to indicate what kind of con­<br>
trol a particular element represents, such as a <span
class=Term-DefinitionChar>Button, Check Box, Combo Box, Data Grid, Document,
Hyperlink, Image, ToolTip, Tree, or Window</span>. Each Control Type has a set
of conditions, which include specific guidelines for the UIA Tree, Property
values, Control Patterns, and Events that a control <i>must </i>meet to use a
Control Type defined in the UIA Specification.</p>

<span style='font-size:9.5pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal>Having a well-known identifier makes it easier for Client
programs to determine what kinds of controls they must interact with in the UI.
The Control Types included with UIA offer a clearer identification for the
controls than ones defined by MSAA’s <span class=InlineCode><span
style='font-size:8.5pt'>accRole</span></span> property.</p>

<p class=MsoNormal>Controls do <i>not</i> have to set a Control Type, however.
If there is no Control Type that represents your control well, set the Control
Type to “custom,” and expose your control properly through the patterns and
properties (including the <span class=InlineCode><span style='font-size:8.5pt'>LocalizedControlType</span></span>
property) that makes the most sense for your control. The UIA Specification
defines required, recommended, or prohibited control patterns and properties. Custom
controls can implement additional Control Patterns or Properties while being
mapped to a specific Control Type.</p>

<p class=SeeAlso>Go further: For more information on UIA Control Types, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h2>Properties</h2>

<p class=MsoNormal>In UIA, there are two kinds of properties that provide
information about a UI element:</p>

<p class=Term-DefinitionBulleted><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>Automation Element Properties</b><span style='font-family:
"Cambria Math",serif'>&#8195;</span>Properties that are applicable to most
elements. For example, two properties that apply to all Automation Elements are
the <span class=InlineCode><span style='font-size:8.5pt'>Name</span></span> and
<span class=InlineCode><span style='font-size:8.5pt'>AutomationId</span></span>
properties. Having these properties properly filled is highly recommended
because most Clients use these properties for every Automation Element, but
there may be times when the <span class=InlineCode><span style='font-size:8.5pt'>Name</span></span>
property may be blank for valid reasons. For example, elements used solely for
layout purposes are often kept nameless, but interactive controls should not be
left with a blank <span class=InlineCode><span style='font-size:8.5pt'>Name</span></span>
property.</p>

<p class=Term-DefinitionBulleted><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>Control Pattern Properties</b><span class=TermChar><span
style='font-family:"Cambria Math",serif'>&#8195;</span></span>Properties
specific to the functionality represented in the Control Pattern interfaces.
For instance, the UIA Value Pattern will support the Value property to
represent the context of controls such as a progress bar or calendar.</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>To ensure that you are providing the right information for
clients to consume, be sure to adhere to the Specification. Certain properties
have very strict requirements set. At other times, sometimes leaving the
default property values is the right course of action.</p>

<p class=SeeAlso>Go further: For more information on UIA Properties, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<b><span style='font-size:14.0pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span></b>

<h2>Events</h2>

<p class=MsoNormal>UIA Events correspond to activities occurring in the UI and
are crucial pieces of information for UIA Clients. As mentioned, UIA uses a
subscription model for UIA Events; a UIA Provider will not process an Event
unless a Client is listening for them. Table 1-3 lists the four different types
of UIA Events.</p>

<p class=TableNum-Title>TABLE 1-3<span style='font-family:"Cambria Math",serif'>&#8194;</span>UIA
Events</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <thead>
  <tr>
   <td width=103 valign=top style='width:77.0pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Event</p>
   </td>
   <td width=420 valign=top style='width:315.0pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Description</p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width=103 valign=top style='width:77.0pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Property change</p>
  </td>
  <td width=420 valign=top style='width:315.0pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Raised when a UIA property changes. For example, if a Client
  needs to monitor an application's check box control, it can register to
  listen for a Property change Event on the <span class=InlineCode>ToggleState</span>
  property of the Toggle Pattern. When the check box control is checked or
  unchecked, the property change Event for the Property gets raised.</p>
  </td>
 </tr>
 <tr>
  <td width=103 valign=top style='width:77.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Element action</p>
  </td>
  <td width=420 valign=top style='width:315.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Raised when an action is made in the UI, often related to
  UIA Control Patterns. For example, when an item is selected, an <span
  class=InlineCode>ElementSelected</span> Event gets raised.</p>
  </td>
 </tr>
 <tr>
  <td width=103 valign=top style='width:77.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Structure change</p>
  </td>
  <td width=420 valign=top style='width:315.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Raised when the structure of the UIA Tree changes. The
  structure changes when new UI items become visible, hidden, or removed on the
  desktop.</p>
  </td>
 </tr>
 <tr>
  <td width=103 valign=top style='width:77.0pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>General event</p>
  </td>
  <td width=420 valign=top style='width:315.0pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Raised when actions of global interest to the Client
  occur, such as when the focus shifts from one element to another, or when a
  window closes.</p>
  </td>
 </tr>
</table>

<p class=SeeAlso><a name="_Toc181514023"></a>Go
further: For more information on UI Automation Events, go to <a name="OLE_LINK1"></a><a
name="OLE_LINK2">http://go.microsoft.com/fwlink/?LinkId=150842.</a></p>

<h2><a name="_Toc181514025"></a><a name="_Toc211663865"></a>Custom
Control Patterns, Properties, and Events</h2>

<p class=MsoNormal>UIA features several Control Patterns, Properties, and
Events, but the Windows implemen­tation of UIA also offers further
extensibility by registration of custom control patterns, properties, and
events. As of today, this functionality is not available for managed
applications of both UIA Providers and Clients.</p>

<p class=MsoNormal>New custom control patterns, properties, and events are only
necessary if the standard UIA Control Patterns, Properties, and Events are not
sufficient. Because of the extraordinary costs associated with creating new
custom control patterns, properties, and events, you should avoid doing so
whenever possible.</p>

<p class=SeeAlso>Go further: For more information on UIA Custom Control
Patterns, Properties, and Events and future interoperable specifications, go to
http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<p class=MsoNormal></p>

<h1><a name="_Toc181514028"></a><a name="_Toc211663869"></a>Planning
Your Hierarchy</h1>

<p class=MsoNormal>Now that we have covered how each of the components of UIA
fit together and enable programmatic access, you are ready to learn how to
design a navigational tree, called the <i>logical hierarchy,</i> for your
product. In the next chapter, we walk you through the steps for designing a
logical hierarchy, using an employee timecard application as an example.</p>

<span style='font-size:16.0pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span>

<p class=ChNumber>Chapter 2</p>

<p class=ChTitle>Designing the Logical Hierarchy</p>

<p class=MsoNormal>Imagine that you need to use WordPad, and you need to access
it from the Start menu. How would you open the menu if you couldn’t see the
screen? How would you get to the applica­tion among the different items in the
menu? How would you know where you were in the menu and what item your keyboard
focus was on? By thinking about these questions, you have put yourself in the
shoes of some of your users who need a way to navigate and interact with your
UI.</p>

<p class=MsoNormal>Unlike users who can use a mouse and monitor to navigate the
UI, users who use a screen reader primarily use a keyboard for navigating
through the UI and audio devices to listen to where they are in the UI. It is,
therefore, extremely important that the navigation and structure of the UI be
useful, accurate, and logical. The following steps during the design phase will
help to ensure that your product provides such structure and navigation:</p>

<p class=NumList>                 1.  <span class=Term-DefinitionChar>Design
what your UI should look like and how it will operate.</span> The navigation
and programmatic access of the UI should closely match its visual counterpart.
If you make changes to the visual design, then you will need to make changes to
the application’s navigation and programmatic access as well.</p>

<p class=NumList>                 2.  Determine which UI framework you are
going to use. Each framework has a different set of controls, flexibilities,
and accessibility support. Depending on your UI scenarios, a particular choice
may work better or worse. Take time to assess your scenarios with the
framework’s accessibility support. You may end up with painful costs because of
your ignorance about the framework’s limitations.</p>

<p class=NumList>                 3.  Identify the controls to create the UI.
Use framework controls whenever possible and not custom controls. When using
framework controls, use them as they were intended. Any irregular or
nonstandard use of a control often leads to bad usability and accessibility.</p>

<p class=NumList>                 4.  After studying the logic of your
navigation and the structure of your UI, design a <i>logical hierarchy</i>,
which will enable you to plan out the accessibility in your product. An acces­sible
solution is only possible when you fully understand the logic and structure of
your own UI.</p>

<p class=NumList>                 5.  Plan for UI Automation (UIA) for any of
your custom controls identified in step 3, includ­ing those custom controls
based on framework controls. Remember that creating new custom controls is
extremely costly. If you have no custom controls, you can skip this step.</p>

<p class=MsoNormal>In this chapter, we focus on step 4, how to design a logical
hierarchy for your UI, and the <br>
next chapter walks through step 5 in detail. Both chapters may provide you with
helpful information for steps 1 through 3, which may be part of the business
planning and investigation of your application.</p>

<h1>The Logical Hierarchy</h1>

<p class=MsoNormal>What do we mean by the term “logical hierarchy?” When AT
programs, such as screen readers, read your UI, visual presentation is not
sufficient; you must provide a programmatic alternative that makes sense
structurally to the users. A logical hierarchy can help you do that. It is a
way of studying the layout of your UI and structuring each element so that
users can understand it. A logical hierarchy is mainly used:</p>

<p class=NumList>                 1.  To provide programs context for the
logical (reading) order of the elements in the UI.</p>

<p class=NumList>                 2.  To identify clear boundaries between
custom controls and standard controls in the UI.</p>

<p class=NumList>                 3.  To determine how pieces of the UI
interact together.</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>A logical hierarchy is a great way to address any potential
usability issues. If you cannot structure the UI in a relatively simple manner,
you may have problems with usability in your UI. A logical representation of a
simple dialog box should not result in pages of diagrams. For logical
hierarchies that become too deep or too wide, you may need to redesign your UI.</p>

<p class=MsoNormal>Figure 2-1 shows what an e-mail address window containing
two child elements and its corresponding logical hierarchy looks like.</p>

<p class=Fig-Graphic><img width=515 height=196 id="Picture 14"
src="Engineering%20for%20Accessibility_files/image009.gif"
alt="Illustration of an application window with two children and its corresponding logical hierarchy"></p>

<p class=Num-Caption><span class=FigTableNum><span style='font-size:7.5pt'>Figure
2-1</span></span>&#8194;UIA Provider with two child elements and its
corresponding logical hierarchy</p>

<p class=MsoNormal>When diagrammed, a logical hierarchy will look like a tree,
but this “tree-like” structure should not be confused with the UIA Tree. The
logical hierarchy is a tool in your specification used to help design the user
experience. It is an abstraction of your application’s UI and the </p>

<p class=MsoNormal>founda­tion for accessible software design. Designing a
logical hierarchy will also help you understand how to map the control’s
functionality and features in UIA, which we cover in the next chapter, and it
will help to reveal any constraints or hidden costs in advance, as well.</p>

<p class=MsoNormal>By taking the time to identify and design the logical
hierarchy of your UI, you will be on your way to turning over a very usable and
accessible product.</p>

<h1>Mapping Basics</h1>

<p class=MsoNormal>To create a logical hierarchy, you will examine the layout
of your UI to determine how you want your user to navigate through the
elements. Then, for each control, you will identify whether they are common or
custom controls and map them accordingly. Before we walk through these steps in
greater detail, let’s go over some basics you should know about elements,
controls, element relationships, and navigation when mapping a logical
hierarchy.</p>

<h2>Elements and Controls</h2>

<p class=MsoNormal>UI elements are the most basic “building blocks” in a logical
hierarchy. They are either con­trols provided by the framework or are exposed
as an element with separate functionality by other elements.</p>

<p class=MsoNormal>Some frameworks have controls that other frameworks do not.
If you are using the frame­work’s control as is, you do not need to break down
the control any further and map out any child elements that make up that
control in your logical hierarchy. The framework already provides a majority of
the programmatic access for the control, so the control can be mapped as a
single element. For example, because Win32 common controls have a “Menu”
control, you would only need to map the Menu control as a single element.</p>

<p class=MsoNormal>On the other hand, in the case of a developer using HTML,
the “Menu” control does not exist. So, the individual elements that make up the
control, such as a menu bar, menu items, and pop-up menus, would need to be
represented in a logical hierarchy to ensure that programmatic access for these
items are implemented.</p>

<h3>Naming Elements</h3>

<p class=MsoNormal>As you learned in Chapter 1, “The UI Automation
Environment,” AT programs and their users depend on the <span class=InlineCode><span
style='font-size:8.5pt'>Name</span></span> Property of an element, so be sure
to include an accessible name with each element that you map. Consistent naming
practices are very important. An accessible name should be consistent with the
UI text on-screen, for example.</p>

<p class=MsoNormal>For images and visual UI elements, the accessible name can
sometimes be alternative text, which gives users context about the graphic. For
instance, an icon with only an exclamation mark may have a name of “Alert” to
tell users what the graphic is about.</p>

<h3>Containers</h3>

<p class=MsoNormal>Any element that bounds another object or group of objects
is called a “container.” For example, a data grid is a container, composed of
individual grid items. Those individual grid items may also have elements that
contain other elements.</p>

<p class=MsoNormal>When designing a logical hierarchy, you should only focus on
containers that are useful for UI operations and providing context. Avoid
including any grouping elements that are purely programmatic or only for visual
design. For example, do not include a layout element that only adds redundancy
or a graphical element that is hardly named (such as a background image for
branding). Without these types of elements, AT clients can more easily filter
elements when navigating different views of the UIA Tree.</p>

<h2>Element Relationships and Navigation</h2>

<p class=MsoNormal>You should already be familiar with parent/child and sibling
relationships. Every element has a relationship, relative to the application
window, which contains all UI elements in the applica­tion. Elements that share
the same parent, such as the application window, are siblings.</p>

<p class=MsoNormal>The order in which sibling elements appear in the logical
hierarchy is particularly important because the exact model will be used by
screen readers and other AT to relay to users what they will hear and
experience.</p>

<p class=MsoNormal>Take a look at how the elements in a data entry group box
are numbered in Figure 2-2.</p>

<p class=Fig-Graphic><img width=426 height=245 id="Picture 13"
src="Engineering%20for%20Accessibility_files/image010.gif"
alt="Illustration showing elements of a data entry group box numbered following a poor navigational order"></p>

<p class=Num-Caption><span class=FigTableNum><span style='font-size:7.5pt'>Figure
2-2</span></span>&#8194;Elements in a data entry group box using a poor
navigational order</p>

<p class=MsoNormal>If a screen reader were to read and follow the UI structure
by the exact order in Figure 2-2, it would read the UI incorrectly, as in
Figure 2-3. It may read the UI as follows: “...Data Entry, Date, Hours, Work Log,
Work Log date: Monday, March 2, 2009, (blank) nameless editable text, (blank)
nameless editable text...” The user would have a very difficult time trying to
fill out the crucial pieces of information in their timecard. Because the Date,
Hours, and Work Log labels are not read with their corresponding fields, the
user may have a hard time entering information for these three things.</p>

<p class=Fig-Graphic><img width=311 height=366 id="Picture 12"
src="Engineering%20for%20Accessibility_files/image011.gif"
alt="Illustration showing how a screen reader would interpret the poor navigational order of the data entry group box elements from Figure 2-2"></p>

<p class=Num-Caption><span class=FigTableNum><span style='font-size:7.5pt'>Figure
2-3</span></span>&#8194;UI representation of a data entry group box to a screen
reader following the poor navigational order of Figure 2-2</p>

<p class=MsoNormal>Be sure to examine the layout of your UI and the
relationships between elements. How would you want your user to read through
the interface? What navigational order makes the most sense? What sequence
would allow a user to understand the UI most intuitively? Determine what
controls relate to each other (for example, a label and its corresponding edit
box). Someone who is blind must be able to navigate your UI in a logical and
easy way. It is not surprising that accessible UI design shares a lot of best
practices and guidelines with usability and UI design guidelines.</p>

<b><span style='font-size:12.0pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span></b>

<h3>Standard Mapping Scheme: Top to Bottom, Left to Right</h3>

<p class=MsoNormal>Although the standard mapping of the logical hierarchy
follows a top-to-bottom, left-to-right scheme (a <i>depth-first search</i> tree
traversal pattern) of the UI, AT clients can interpret the logical hierarchy
however they want. That is, the clients can examine or navigate through the
elements following a different pattern, such as from the bottom up or right to
left. As long as the parent/child and sibling relationships are represented
correctly and optimally, the logical hierarchy can be localized to fit the users’
needs.</p>

<h1>Getting Started</h1>

<p class=MsoNormal>There are four things that you need before you start to
design a logical hierarchy:</p>

<p class=NumList><span class=Term-DefinitionBulletedChar><b>                 </b>1.<b>  Format</b></span>&#8195;How
you format your logical hierarchy is up to you, but your engineering team
should decide how you want it represented before you begin mapping. You can map
the logical hierarchy visually using a node-link diagram (as in Figure 2-1) or
textually using an outline or table format.</p>

<p class=ListPara>Mapping in an outline format may look something like the
following:</p>

<p class=ListPara style='margin-left:81.0pt'>I.
Window: Product Name</p>

<p class=ListPara style='margin-left:81.0pt;text-indent:9.0pt'>A.
Element: Name (top-level child)</p>

<p class=ListPara style='margin-left:81.0pt;text-indent:9.0pt'>B.
Element: Name (top-level child)</p>

<p class=ListPara style='margin-left:99.0pt;text-indent:9.0pt'>a.
Element: Name (second-level child)</p>

<p class=ListPara style='margin-left:1.25in;text-indent:.25in'>b.
Element: Name (second-level child)</p>

<p class=ListPara style='margin-left:99.0pt;text-indent:27.0pt'>i.
Element: Name (third-level child)</p>

<p class=ListPara style='margin-left:81.0pt;text-indent:9.0pt'>C.
Element: Name (top-level child)</p>

<p class=ListPara>Mapping in a table format may look something like Table 2-1.</p>

<p class=ListPara>&nbsp;</p>

<p class=ListPara>&nbsp;</p>

<p class=ListPara>&nbsp;</p>

<p class=ListPara>&nbsp;</p>

<p class=ListPara>&nbsp;</p>

<p class=ListPara></p>

<p class=ListTableNum-Title>TABLE 2-1<span style='font-family:"Cambria Math",serif'>&#8194;</span>Template
for Mapping in a Table Format</p>

<p class=ListTableNum-Title>Window: Product Name</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:63.35pt;border-collapse:collapse'>
 <tr>
  <td width=196 valign=top style='width:146.75pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>Parent
  Element</p>
  </td>
  <td width=196 valign=top style='width:146.75pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>Child Elements</p>
  </td>
 </tr>
 <tr>
  <td width=196 valign=top style='width:146.75pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Element:
  Name (top-level child)</p>
  </td>
  <td width=196 valign=top style='width:146.75pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Element: Name (second-level
  child)</p>
  </td>
 </tr>
 <tr>
  <td width=196 valign=top style='width:146.75pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'></p>
  </td>
  <td width=196 valign=top style='width:146.75pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Element: Name (second-level
  child)</p>
  <p class=TableBullList style='margin-right:2.9pt'><span style='font-family:
  Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span>Element: Name (third-level child)</p>
  </td>
 </tr>
 <tr>
  <td width=196 valign=top style='width:146.75pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Element:
  Name (top-level child)</p>
  </td>
  <td width=196 valign=top style='width:146.75pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Element: Name (second-level
  child)</p>
  </td>
 </tr>
</table>

<p class=ListPara>&nbsp;</p>

<p class=ListPara>When mapping with a diagram, use the mapping symbols in Table
2-2 for your logical hierarchy.</p>

<p class=ListTableNum-Title>TABLE 2-2&#8194;Logical Hierarchy Mapping Symbols</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:63.35pt;border-collapse:collapse'>
 <tr>
  <td width=115 valign=top style='width:86.0pt;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>Symbol</p>
  </td>
  <td width=189 valign=top style='width:141.65pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:6.0pt'>Represents</p>
  </td>
 </tr>
 <tr>
  <td width=115 valign=top style='width:86.0pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Circle<span
  style='font-family:"MS Mincho"'>&#8195;</span>O  </p>
  </td>
  <td width=189 valign=top style='width:141.65pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>UI element</p>
  </td>
 </tr>
 <tr>
  <td width=115 valign=top style='width:86.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Solid
  line<span style='font-family:"MS Mincho"'>&#8195;</span>—</p>
  </td>
  <td width=189 valign=top style='width:141.65pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>Parent/child relationship</p>
  </td>
 </tr>
 <tr>
  <td width=115 valign=top style='width:86.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Ellipsis<span
  style='font-family:"MS Mincho"'>&#8195;</span>…</p>
  </td>
  <td width=189 valign=top style='width:141.65pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>More siblings or repeat elements</p>
  </td>
 </tr>
 <tr>
  <td width=115 valign=top style='width:86.0pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Asterisk 
  *</p>
  </td>
  <td width=189 valign=top style='width:141.65pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>Custom control</p>
  </td>
 </tr>
</table>

<p class=ListPara>In addition, you can use color to further differentiate
custom controls from standard controls.</p>

<p class=NumList><span class=Term-DefinitionBulletedChar><b><span lang=FR>                 </span></b></span><span
class=Term-DefinitionBulletedChar><span lang=FR>2.<b>  UI prototypes</b></span></span>&#8195;<span
lang=FR>Paper prototypes, computer drawings, UI code mockups, etc. </span>Any
prototype will do, just make sure you have enough variations of the prototype
to consider different modes of the UI if there are any.</p>

<p class=NumList><span class=Term-DefinitionChar><b>                 </b>3.<b>  Control
libraries of your choice</b>&#8195;</span><span
class=Term-DefinitionBulletedChar>You will refer to the control library to
determine whether a control is provided by the UI framework, as well as to help
you correctly identify the control type to add to your logical hierarchy.</span></p>

<p class=NumList><span class=Term-DefinitionBulletedChar><b>                 </b>4.<b>  UIA
Specifications for Control Types, Patterns, and Properties</b></span>&#8195;The
technical reference will help you determine whether a custom control can map to
a UIA Control Type or other Properties. The specifications can be found at <i>http://go.microsoft.com/<br>
fwlink/?LinkId=150842</i>. Table 2-3 lists 39 Control Types supported in UIA.</p>

<p class=NumList>&nbsp;</p>

<p class=NumList></p>

<p class=ListTableNum-Title>TABLE 2-3&#8194;Control Types supported in UI
Automation</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:63.35pt;border-collapse:collapse'>
 <tr>
  <td width=316 colspan=2 valign=top style='width:236.65pt;background:#D9D9D9;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>UI
  Automation Control Types</p>
  </td>
  <td width=17 valign=top style='width:13.05pt;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>&nbsp;</p>
  </td>
  <td width=163 valign=top style='width:122.45pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=167 valign=top style='width:125.15pt;border:none;border-top:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'><span
  lang=FR>Button</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=FR>Calendar</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=FR>CheckBox</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=FR>ComboBox</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=FR>Custom</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=FR>DataGrid</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=FR>DataItem</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=FR>Document</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'>Edit</p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'>Group</p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'>Header</p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'>HeaderItem</p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'>Hyperlink</p>
  </td>
  <td width=166 colspan=2 valign=top style='width:124.55pt;border:none;
  border-top:solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'>Image</p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=SV>List</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=SV>ListItem</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=SV>Menu</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=SV>MenuBar</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=SV>MenuItem</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=SV>Pane</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=SV>ProgressBar</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=SV>RadioButton</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=SV>ScrollBar</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=SV>Separator</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=SV>Slider</span></p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'><span lang=SV>Spinner</span></p>
  </td>
  <td width=163 valign=top style='width:122.45pt;border:none;border-top:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>SplitButton</p>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>StatusBar</p>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>Tab</p>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>TabItem</p>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>Table</p>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>Text</p>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>Thumb</p>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>TitleBar</p>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>ToolBar</p>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>ToolTip</p>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>Tree</p>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>TreeItem</p>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>Window</p>
  </td>
 </tr>
 <tr height=0>
  <td width=167 style='border:none'></td>
  <td width=149 style='border:none'></td>
  <td width=17 style='border:none'></td>
  <td width=163 style='border:none'></td>
 </tr>
</table>

<p class=ListEnd>&nbsp;</p>

<h1>How to Do It</h1>

<p class=MsoNormal>The steps in this section should provide you with a quick
start on how to design your logical hierarchy. The example that follows
provides further discussion.</p>

<p class=NumList>                 1.  The product window is parent to all the
elements contained in it. Map the product win­dow at the top of your logical
hierarchy, and label the element using its Control Type and the name you assign
it, such as the “Window: Email Address” node in Figure 2-1. If you are using an
outline or a table format, this element would be the first item in your outline
or a header 1 (see the previous section, “Getting Started”).</p>

<p class=NumList>                 2.  Examine the layout of your UI to
determine how you want your user to navigate through the elements in it. Note
which elements are grouped together or relate to one another, such as labels
and their corresponding fields. Navigation between siblings should be by tab stops
and arrow keys for elements within a grouping. As you design your logical
hierarchy, you must ensure that the structure reflects the parent/child and
sibling relationships of your UI to allow for AT users to easily navigate
through it. Prototyping can help with this step.</p>

<p class=NumList>                 3.  Identify custom controls, whether brand
new or ones that have been modified with a different functionality on an
existing framework control. For instance, the Win32 list view control does not
support a check box, but if you modified the control so that it does have a
check box, you would identify the control as a custom control.</p>

<p class=NumList>                 4.  For each programmatically significant
element (that is, an element necessary for UI operations or for giving ATs
context), map the control type and name the element (and child elements) as
follows:</p>

<p class=BullList2><span style='font-size:12.0pt;font-family:"Courier New"'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span class=Term-DefinitionBulletedChar><b>Standard</b></span><span style='font-family:"Cambria Math",serif'>&#8195;</span>Map
the node as a single element if the control is based on standard control customizations.
For a standard combo box, for instance, you would not need to map an element
for the open and close button or list box in the control because the detailed
mapping within the “combo box control” is already implied.</p>

<p class=BullList2><span style='font-size:12.0pt;font-family:"Courier New"'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
class=Term-DefinitionChar><b>Custom</b></span>&#8195;Map the individual
elements that make up that control in the logical hierarchy, if the control is
new or customized based on a standard control of the UI framework. If possible,
try to find an associated UIA Control Type. Chapter 3, “Designing Your
Implementation,” touches more on this topic.</p>

<p class=ListEnd>&nbsp;</p>

<p class=ListPara>Table 2-4 lists a series of questions that will help you
identify elements that should be included in your logical hierarchy.</p>

<p class=ListTableNum-Title style='margin-left:0in;text-indent:.5in'>TABLE 2-4<span style='font-family:"Cambria Math",serif'>&#8194;</span>Questions to
identify an element to be mapped in a logical hierarchy</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:63.35pt;border-collapse:collapse'>
 <tr>
  <td width=173 valign=top style='width:129.95pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>Question</p>
  </td>
  <td width=349 valign=top style='width:262.05pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>Considerations</p>
  </td>
 </tr>
 <tr>
  <td width=173 valign=top style='width:129.95pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Question
  1: Does the framework provide the control?</p>
  </td>
  <td width=349 valign=top style='width:262.05pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>If yes, map the control as a
  single element in your logical hierarchy, and move on to the next control in
  your UI. If no, proceed to Question 2.</p>
  </td>
 </tr>
 <tr>
  <td width=173 valign=top style='width:129.95pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Question
  2: Does the control map to a Control Type in UIA?</p>
  </td>
  <td width=349 valign=top style='width:262.05pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Each UIA Control Type has
  required and optional Properties and Control Patterns. If it is difficult to
  map an element to a UIA Control Type, identify the types of UI functions it
  exhibits, and map the functionalities to the appropriate UIA Control Patterns
  and Properties.</p>
  <p class=TableText style='margin-right:2.9pt'>While UIA allows for a “Custom”
  Control Type, a control can be identified by the levels (different elements)
  or enhancements (different functionalities) used for the existing Control
  Type. For example, the RangeValue Control Pattern could be an enhance­ment in
  a combo box Control Type used to support loading status information.</p>
  <p class=TableText style='margin-right:6.0pt'>If the element does not meet any
  of the specifications for a UIA Control Type, consider splitting the element
  into sub-elements if the control is a mix of multiple Control Types, and return
  to Question 1 for each sub-element.</p>
  </td>
 </tr>
 <tr>
  <td width=173 valign=top style='width:129.95pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Question
  3: Can you interact with parts of the control with the keyboard alone?</p>
  </td>
  <td width=349 valign=top style='width:262.05pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>Every action that is provided
  by the mouse must also be provided by the keyboard. Be careful not to confuse
  selection for focus. Mouse “hot tracking” is also sometimes confused as
  selection or focus. If keyboard-only navigation becomes too difficult, consider
  an alternate way of grouping the elements in your UI or redesigning the
  hierarchy.</p>
  </td>
 </tr>
 <tr>
  <td width=173 valign=top style='width:129.95pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Question
  4: Can the control’s functionality be defined com­pletely by Control Patterns
  and Properties?</p>
  </td>
  <td width=349 valign=top style='width:262.05pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'>You may have already answered this question in Question
  2 if the element maps to a UIA Control Type. Make sure all possible Patterns
  and Properties are mapped based on UI scenarios and functions, and reconfirm
  that you’re not violating rules and requirements for each Control Type
  specification.</p>
  <p class=TableText style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:0in'>If the answer to this question is no, identify missing
  features and functions. Consider using a different Control Type or logical
  structure. Breaking down the control into smaller elements can sometimes help
  avoid missing features or functions.</p>
  </td>
 </tr>
</table>

<h2>Example: Employee Timecard</h2>

<p class=MsoNormal>To demonstrate how to design one logical hierarchy, we will
use an employee timecard application built on a Win32 framework, as an example.
Figure 2-4 shows what the timecard looks like.</p>

<p class=Fig-Graphic><img width=381 height=369
src="Engineering%20for%20Accessibility_files/image012.gif"
alt="Illustration of an employee timecard"></p>

<p class=Num-Caption><span class=FigTableNum><span style='font-size:7.5pt'>Figure
2-4</span></span>&#8194;Employee timecard built on a Win32 framework</p>

<p class=MsoNormal>In the timecard, employees can:</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Click a date on the grid to see their hours or work log notes
populate in the Data Entry fields.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Use the arrow keys on the keyboard to navigate through the days
in the grid.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Enter their hours in the Hours field.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Enter notes about their work in the Work Log field.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Click the Previous Week button to see the previous week, and the
Next Week button for the next week.</p>

<p class=BullList2><span style='font-size:12.0pt;font-family:"Courier New"'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span>At
the start of the fiscal year, the Previous Week button will not be available
because the system archives the previous year, and employees will no longer
have access to those weeks.</p>

<p class=BullList2><span style='font-size:12.0pt;font-family:"Courier New"'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span>If
employees are on the current week, the Next Week button will not be available
because they cannot log their hours or work for future weeks.</p>

<p class=ListEnd>&nbsp;</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Save an entry without submitting.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Submit a week for payroll review.</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>Except for the grid, all controls in the timecard are
standard Win32 controls.</p>

<h3>Navigational Order</h3>

<p class=MsoNormal>Looking at the timecard, we see that there are two visual
containers in the UI: the grid, made up of columns for each day of the week,
and the Data Entry box, which contains the Date, Hours, and Work Log fields.
Because these items are grouped together, and the fields within the container
are closely related, we must ensure that the order in which we map these items
must follow one another logically. Following a general top-to-bottom,
left-to-right scheme, Figure 2-5 shows the navigational order in which we will
map the logical hierarchy.</p>

<p class=Fig-Graphic><img width=458 height=421 id="Picture 11"
src="Engineering%20for%20Accessibility_files/image013.gif"
alt="Illustration showing elements on the employee timecard numbered for navigational order"></p>

<p class=Num-Caption><span class=FigTableNum><span style='font-size:7.5pt'>Figure
2-5</span></span>&#8194;Navigational order for mapping the timecard’s logical
hierarchy</p>

<h3>Mapping the First Element: Window</h3>

<p class=MsoNormal>Now, we can start mapping. The window element containing the
timecard application is mapped at the top of the logical hierarchy and named
“Window: Timecard.”</p>

<h3>Standard Controls: First Three, Top-Level Children</h3>

<p class=MsoNormal>The next three controls are the calendar image, the
“Welcome, Yukako Souza!” label next to it, and the Previous Week push button.
Looking at the Win32 control library, we see that the framework provides
controls for these items, so they are standard controls and can be mapped as
single elements on our logical hierarchy.</p>

<p class=MsoNormal>Below the window element, we plot the first three, top-level
child elements from left to right according to their numerical navigational
order (Figure 2-6). To indicate the parent-child relationships to the window,
we draw lines from the child elements to the parent element.</p>

<p class=Fig-Graphic><img width=290 height=148 id="Picture 10"
src="Engineering%20for%20Accessibility_files/image014.gif"
alt="Diagram of the first three, top-level children of the employee timecard mapped in a logical hierarchy under the application window node"></p>

<p class=Num-Caption><span class=FigTableNum><span style='font-size:7.5pt'>Figure
2-6</span></span>&#8194;First three, top-level child elements of the employee timecard</p>

<h3>Custom Control: Grid</h3>

<p class=MsoNormal><span class=Num-CaptionChar><span style='font-size:8.0pt'>The
next control that we need to map is the grid. Looking at the Win32 control
library, we see that there is not a control that captures all of the
functionality of our timecard grid. It is, therefore, a custom control, which
means we must break down the grid control into elements that make up the UI
fragment for that control (as it might be seen in the UIA Tree). But which
elements do we map? Using the questions in Table 2-4, we can identify these
elements:</span></span></p>

<p class=BullList><span class=Num-CaptionChar><span style='font-size:8.0pt;
font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><span class=Num-CaptionChar><span style='font-size:8.0pt'>Question
1: Does the framework provide the control? No. We move onto Question 2.</span></span></p>

<p class=BullList><span class=Num-CaptionChar><span style='font-size:8.0pt;
font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><span class=Num-CaptionChar><span style='font-size:8.0pt'>Question
2: Does the control map to a Control Type in UIA? Yes. Looking at the UIA Specification
for some sort of grid control, we see that our timecard grid supports the
requirements for the DataGrid control. We also see that the required tree
structure includes any headers and data items. In our timecard, the header is
the row of labels running underneath the columns (Su, M, T, W, Th, F, and Sa),
and the columns are the data items.</span></span></p>

<span class=Num-CaptionChar><span style='font-size:8.0pt'><br clear=all
style='page-break-before:always'>
</span></span>

<p class=MsoNormal><span class=Num-CaptionChar><span style='font-size:8.0pt'>Our
logical hierarchy now looks like Figure 2-7. Note that because there are
several grid item and header elements, we mark those nodes with an ellipsis to
indicate that there is more than one element for that Control Type (see Table
2-1 for mapping symbols).</span></span></p>

<p class=Fig-Graphic><img width=428 height=326 id="Picture 9"
src="Engineering%20for%20Accessibility_files/image015.gif"
alt="Diagram of the timecard's grid elements added to the logical hierarchy"></p>

<p class=Num-Caption><span class=FigTableNum><span style='font-size:7.5pt'>Figure
2-7</span></span>&#8194;Grid element added to the employee timecard’s logical
hierarchy</p>

<p class=MsoNormal>Determining the elements to map for the grid may have seemed
fairly straightforward, but sometimes it is not that easy. Let’s say that we
weren’t sure about the grid’s functionality. Instead of mapping the grid to the
DataGrid control, we make the mistake of identifying the columns as push
buttons, because when we click them, they interact very much like push buttons.
Let’s see how we might have worked through this process.</p>

<p class=BullList><span class=Num-CaptionChar><span style='font-size:8.0pt;
font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><span class=Num-CaptionChar><span style='font-size:8.0pt'>Question
1: Does the framework provide the control? No. We move onto Question 2.</span></span></p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span class=Num-CaptionChar><span style='font-size:8.0pt'>Question
2: Does the control map to a Control Type in UIA? Yes. </span></span><span
class=Term-DefinitionChar>When we click</span> one of the columns, the
interaction is very much like clicking a push button. For now, let’s say that
the columns are all push buttons, which can be mapped to the <span
class=InlineCode><span style='font-size:8.5pt'>Button</span></span> Control
Type in UIA. </p>

<br clear=all style='page-break-before:always'>

<p class=BullList2><span style='font-size:12.0pt;font-family:"Courier New"'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span>Does
the element meet the UIA Control Type Specification requirements com­pletely?
No. We see that one of the Properties for the <span class=InlineCode><span
style='font-size:8.5pt'>Button</span></span> control is that buttons are
self-labeled by their contents, as with an “OK” or “Save” button. In <br>
our timecard, our “buttons” (the clickable columns) are not labeled as such,
but instead have labels with the days of the week running underneath them. We
could argue that the number of hours that appear on the columns are labels for
the “buttons,” but the value (“8” for 8 hours, for instance) does not
accurately describe the column nor is it constant (some days may not even have
any hours entered, for instance). We must, therefore, start the process over
again.</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>Taking a step back and looking at the grid as a whole, we
see that that the grid is (and by definition, should be) made up of rows and
columns. Each day is a clickable column, and the group of labels that runs in a
row underneath the columns is actually a header for the days of the week.
Looking at the UIA requirements for the DataGrid Control Type, we see that a
data grid must have data items within that control. At this point, we can
deduce that the clickable columns are data items (and not buttons). To verify,
we check the requirements for the Control Type in the UIA Specification and
confirm that the clickable columns meet the con­ditions for the DataItem Control
Type. The columns are, in fact, data items, elements that we can map in a
logical hierarchy. A close examination of the UIA Specification can save you
time and answer a lot of design questions because the structures for controls
are clearly defined.</p>

<h3>Container: Data Entry Group Box</h3>

<p class=MsoNormal>The remaining controls are all Win32 common controls and can
be mapped as single, standard elements. As mentioned earlier, however, the Data
Entry group box is a visual container in the UI for the Date, Hours, and Work
Log fields and their corresponding labels. We must be sure to reflect these
parent/child relationships in the logical hierarchy. Figure 2-8 illustrates
what the completed logical hierarchy looks like for the timecard application.</p>

<p class=Fig-Graphic><img width=516 height=424 id="Picture 8"
src="Engineering%20for%20Accessibility_files/image016.gif"
alt="Diagram of the completed logical hierarchy for the employee timecard"></p>

<p class=Num-Caption><span class=FigTableNum><span style='font-size:7.5pt'>Figure
2-8</span></span>&#8194;Completed logical hierarchy for employee timecard</p>

<h1>Using the Logical Hierarchy for Planning Accessibility Settings</h1>

<p class=MsoNormal>After plotting out the elements of your UI, the logical
hierarchy can be used to assist with planning other accessibility settings,
such as keyboard navigation and graphics.</p>

<b><span style='font-size:14.0pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span></b>

<h2>Keyboard Navigation</h2>

<p class=MsoNormal>Because your controls are already laid out in a logical
hierarchy, it is easy to design your keyboard navigation. Controls that the
user can interact with, such as buttons, links, or list boxes, should receive
keyboard focus and may need to be part of a tab-stop loop in the keyboard
navigation. Users should be able to move between controls using the TAB key and
SHIFT+TAB. For grouped elements, you may need to ensure sub-navigation routines
using arrow keys within two dimensional grids, or even CTRL+TAB to move between
the grouped elements. If your UI supports multiple-selection, you may need to
support SHIFT+RIGHT ARROW and SHIFT+LEFT ARROW key combinations.</p>

<p class=SeeAlso>Go further: For more information on designing keyboard
navigation and UI design, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h2>Graphics: Decorative vs. Contextual</h2>

<p class=MsoNormal>Your logical hierarchy can also help you identify decorative
elements from contextual elements in your UI and the order in which they should
be read by an AT program. Because the logical hierarchy is a rather primitive
representation of your UI design, you should not have very many decorative UI
elements in the hierarchy, because the user does not typically need to interact
with graphics. Only graphics that play a crucial role in the UI’s messaging
should be included, such as notification or information icons, and the order of
the information about the graphical information should not interfere with other
important information in the UI. For instance, information about a background
graphic in the UI should not appear in the logical hierarchy where it would
interfere with critical information for the user. Identifying which graphics
are decorative and contextual and determining where they should appear in the
logical hierarchy will help with filtering any trivial elements in the object
model.</p>

<p class=SeeAlso>Go further: UIA can filter out non-control or non-content
elements by allocating elements with both the IsContentElement and IsControlElement
Properties set to FALSE. For more information about how to choose and set values
for those Properties, go to http://go.microsoft.com/fwlink/<br>
?LinkId=150842.</p>

<h1>Complex User Interfaces</h1>

<p class=MsoNormal>The logical hierarchy for the employee timecard that we just
designed was fairly simple, but user interfaces are becoming more complex with
richer functionality. As you create logical hierarchies for your UI, keep these
principles in mind:</p>

<br clear=all style='page-break-before:always'>

<p class=MsoNormal></p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Create logical hierarchies for all UIs that you design to ensure
“seamless accessibility” for your users. Any new child window that your
application creates, such as pop-up windows, should have its own logical
hierarchy and accessible implementation.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Take advantage of UI framework–provided controls and components.
Just as you want to use built-in controls, using standard controls enables you
to get some programmatic access “for free.” Again, using these components may
require you to adhere to certain accessibility guidelines and restrictions on
the controls, but those have a much lower cost than a completely native UIA
solution. For example, Windows Common Controls provides a list view control
that can easily be implemented into your design, but the accessibility support
for an irregular customization of a list view control may be extremely
expensive when what you really wanted was an “engineering shortcut.”</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Keep the UI as intuitive as possible. As mentioned, accessibility
shares best practices and requirements with many usability and UI design
guidelines. Always remember that the more complex and unique your user
interface, the more work you will have to do to make it accessible. If you can
accomplish your requirements in a usable, accessible, and aesthetically
pleasing manner using framework controls and components, then your costs for
implementation and testing will be much less than when you have to use custom
controls.</p>

<p class=SeeAlso>Go further: For other components provided by Windows, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h1>Designing Element Functionality</h1>

<p class=MsoNormal>Elements are the building blocks of your UI’s logical
hierarchy. By mapping out the programmatic access for your application in a
logical hierarchy, you help to ensure that <br>
client programs, such as AT and automation tools, can navigate the UI and that
users can confidently use your product. In the next chapter, we discuss how to
determine the implementation of your controls, with particular focus on the
design of custom controls in your logical hierarchy.</p>

</div>

<span style='font-size:9.5pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span>

<div class=WordSection4>

<p class=ChNumber>Chapter 3</p>

<p class=ChTitle>Designing Your Implementation</p>

<p class=MsoNormal>After you have finished designing your logical hierarchy,
you should know which controls in your product are provided by the UI framework
and which are not. Designing the imple­mentation of your controls depends upon
this distinction:</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>For controls provided by the framework, you must adhere to the UI
framework’s guidelines to make them accessible. For example, if you are using
the Windows Presentation Foundation (WPF) framework, you would adhere to WPF’s
guidelines for accessibility.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>For custom controls not provided by the UI framework, you must
implement a native UI Automation (UIA) solution. You have already mapped these
custom controls to individual elements in the logical hierarchy, so now you must
design the native UIA solution for each of these elements.</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>The key to designing a native solution for programmatic
access is to fully expose the ele­ment’s functionality so that a user of
assistive technology (AT) can use the control. There are two different
processes for designing the implementation of a native solution:</p>

<p class=Term-Definition><span class=Term-DefinitionBulletedChar>                A.  <b>Control
maps to a UIA Control Type.</b></span><span style='font-family:"Cambria Math",serif'>&#8195;</span>If
your custom control can map directly to <br>
a UIA Control Type, you must design the control’s functionality according to
the UIA Control Type Specification, including any additional requirements for
other Patterns <br>
and Properties that the control may exhibit. Unless it is prohibited, a Control
Type can support additional Patterns and Properties than what is required or
suggested by the UIA Specification.</p>

<p class=Term-Definition><span class=Term-DefinitionBulletedChar>                 B.  <b>Control
does <i>not</i> map to a UIA Control Type.</b></span><span style='font-family:
"Cambria Math",serif'>&#8195;</span>In the case where your custom control does <i>not</i>
map to a UIA Control Type, then you must determine the control’s functionality
and design the control around the Control Patterns and Properties using the
requirements of the UIA Specification. It is worth noting again that you should
avoid creating new custom controls as much as possible because the cost for
development, documentation, and help on how to interact with the control is
significant, and ATs may not know how to interact with the control.</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>In this chapter, we talk about both of these design
processes, focusing on controls that do map directly to a UIA Control Type. We
also touch on the UIA Methods and Events that are needed to implement your
controls and point you to resources for actually implementing them.</p>

<h1>Product Example Continued: Employee Timecard</h1>

<p class=MsoNormal>In the last chapter, we used an employee timecard, built on
a Win32 framework (Figure 3-1), to design a logical hierarchy. We continue to
use the timecard in this chapter to demonstrate how to design the
implementation of custom controls.</p>

<p class=Fig-Graphic><span style='font-size:0pt;border:none black 1.0pt;
padding:0in;background:black;layout-grid-mode:line'> </span><span lang=X-NONE
style='font-size:0pt;border:none black 1.0pt;padding:0in;background:black'><img
width=381 height=344 id="Picture 7"
src="Engineering%20for%20Accessibility_files/image017.gif"
alt="Diagram of the completed logical hierarchy for the employee timecard"></span></p>

<p class=Num-Caption><span class=FigTableNum><span style='font-size:7.5pt'>Figure
3-1</span></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>Product
example: employee timecard built on a Win32 framework</p>

<p class=MsoNormal>As you may recall, all the elements in the timecard, except
for the grid, were Win32 common controls. By mapping out a logical hierarchy
for our timecard (Figure 3-2), we can see where custom accessibility support is
needed. Because Win32 does not provide a “Grid” control, we needed to map out
the individual elements that make up that the control, so that the control will
expose correctly to AT.</p>

<p class=Fig-Graphic><img width=516 height=424 id="Picture 6"
src="Engineering%20for%20Accessibility_files/image018.gif"
alt="Diagram of the completed logical hierarchy for the employee timecard"><span style='font-size:0pt;border:none black 1.0pt;padding:0in;background:black;
layout-grid-mode:line'> </span></p>

<p class=Num-Caption><span class=FigTableNum><span style='font-size:7.5pt'>Figure
3-2</span></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>Logical
hierarchy for the employee timecard</p>

<h1>Prep Work: Creating the Implementation Table</h1>

<p class=MsoNormal>By now, you should have an understanding of what Control
Types, Control Patterns, and Properties are. Before we proceed, let’s briefly
recap these terms:</p>

<p class=Term-DefinitionBulleted><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>Control Type</b><span style='font-family:"Cambria Math",serif'>&#8195;</span>A
pre-defined set of patterns, properties, and conditions used to define a
control’s basic appearance and functionality.</p>

<p class=Term-DefinitionBulleted><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>Control Pattern</b><span style='font-family:"Cambria Math",serif'>&#8195;</span>Defines
the control’s actions or behaviors.</p>

<p class=Term-DefinitionBulleted><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>Properties</b><span style='font-family:"Cambria Math",serif'>&#8195;</span>Provides
specific information about the UI element or the Control Patterns supported.</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>When you design a native solution for a custom control in
UIA, you are essentially creating an engineering “recipe” using the UIA
Specification for UIA Control Types, Control Patterns, </p>

<p class=MsoNormal>Properties, and Events. These “ingredients” together will be
used to implement an accessible custom control.</p>

<p class=MsoNormal>Before we proceed with designing our controls, let’s do some
prep work. We will create an implementation table for the primary components of
the UI:</p>

<p class=NumList>                 1.  Create columns with the following headers:</p>

<p class=BullList2><span style='font-size:12.0pt;font-family:"Courier New"'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
class=Term-DefinitionChar><b>Control</b></span>&#8195;For the elements
identified as custom in your logical hierarchy.</p>

<p class=BullList2><span style='font-size:12.0pt;font-family:"Courier New"'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
class=Term-DefinitionChar><b>Control Type</b></span>&#8195;For the UIA Control
Type of the element.</p>

<p class=BullList2><span class=Term-DefinitionChar><span style='font-size:12.0pt;
font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><span class=Term-DefinitionChar><b>Control Patterns&#8195;</b>For
the required patterns necessary to implement the accessibility of the control.</span></p>

<p class=BullList2><span style='font-size:12.0pt;font-family:"Courier New"'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
class=Term-DefinitionChar><b>Properties</b></span>&#8195;For the required
automation element and control pattern properties necessary to implement the
accessibility of a UI element feature.</p>

<p class=ListEnd>&nbsp;</p>

<p class=NumList>                 2.  Using your logical hierarchy as a
reference, list each custom element in the Control column. You can omit
duplicate elements, such as list items or data items that share the same
characteristics with its peers. For example, the employee timecard has seven
unique controls for “Grid Item: Days,” but the design for each instance will be
the same (except for unique Properties such as the Automation Id).</p>

<p class=NumList>                 3.  In the Control Type column, list the UIA
Control Type that the element maps to. Again, you should have this information
as a result of mapping out the logical hierarchy for your product.</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>Table 3-1 illustrates what the implementation table looks
like for the employee timecard so far.</p>

<p class=TableNum-Title>TABLE 3-1<span style='font-family:"Cambria Math",serif'>&#8194;</span>Employee
Timecard Custom Controls</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <thead>
  <tr>
   <td width=123 valign=top style='width:92.3pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Control</p>
   </td>
   <td width=72 valign=top style='width:54.3pt;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Control Type</p>
   </td>
   <td width=92 valign=top style='width:69.1pt;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Control Patterns</p>
   </td>
   <td width=129 valign=top style='width:97.05pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Properties</p>
   </td>
   <td width=106 valign=top style='width:79.75pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>&nbsp;</p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width=123 valign=top style='width:92.3pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead></p>
  </td>
  <td width=72 valign=top style='width:54.3pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>&nbsp;</p>
  </td>
  <td width=92 valign=top style='width:69.1pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>&nbsp;</p>
  </td>
  <td width=129 valign=top style='width:97.05pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>Automation Element Properties</p>
  </td>
  <td width=106 valign=top style='width:79.75pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>Control Pattern Properties</p>
  </td>
 </tr>
 <tr>
  <td width=123 valign=top style='width:92.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Data Grid: Calendar</p>
  </td>
  <td width=72 valign=top style='width:54.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Data Grid</p>
  </td>
  <td width=92 valign=top style='width:69.1pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  </td>
  <td width=129 valign=top style='width:97.05pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  </td>
  <td width=106 valign=top style='width:79.75pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=123 valign=top style='width:92.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Grid Item: Days</p>
  </td>
  <td width=72 valign=top style='width:54.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Grid Item</p>
  </td>
  <td width=92 valign=top style='width:69.1pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  </td>
  <td width=129 valign=top style='width:97.05pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  </td>
  <td width=106 valign=top style='width:79.75pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=123 valign=top style='width:92.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Header: Days</p>
  </td>
  <td width=72 valign=top style='width:54.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Header</p>
  </td>
  <td width=92 valign=top style='width:69.1pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  </td>
  <td width=129 valign=top style='width:97.05pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  </td>
  <td width=106 valign=top style='width:79.75pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=123 valign=top style='width:92.3pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Header Items: Days of Week</p>
  </td>
  <td width=72 valign=top style='width:54.3pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Header Item</p>
  </td>
  <td width=92 valign=top style='width:69.1pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  </td>
  <td width=129 valign=top style='width:97.05pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  </td>
  <td width=106 valign=top style='width:79.75pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  </td>
 </tr>
</table>

<h1>Process A: Control Maps to a UIA Control Type</h1>

<p class=MsoNormal>Designing the implementation for custom controls that map to
a UIA Control Type is a two-part process. You will:</p>

<p class=NumList>                 1.  Gather all the UIA Specification
requirements for the UIA Control Type and list them in your implementation
table.</p>

<p class=NumList>                 2.  List any additional Patterns or
Properties for the controls if they exhibit any additional functionality, but
make sure those additional Patterns or Properties do not contradict with the
UIA Specification.</p>

<p class=MsoNormal>All of the controls map to UIA Control Types in our employee
timecard application, so we proceed with Process A.</p>

<h2>Step 1: Gathering Required Control Patterns</h2>

<p class=MsoNormal>The first control in our table is the calendar grid, which
maps to the <span class=InlineCode><span style='font-size:8.5pt'>DataGrid</span></span>
Control Type. The UIA Specification provides a table of required Patterns supported
by the Data Grid Control Type (Table 3-2). We must go through each of these
Patterns to verify which apply to our specific custom control.</p>

<p class=TableNum-Title>TABLE 3-2<span style='font-family:"Cambria Math",serif'>&#8194;</span>Required
UI Automation Control Patterns for the DataGrid Control Type from the UIA
Specification</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <thead>
  <tr>
   <td width=103 valign=top style='width:77.0pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Control Pattern</p>
   </td>
   <td width=72 valign=top style='width:.75in;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Support</p>
   </td>
   <td width=349 valign=top style='width:261.5pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Notes</p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width=103 valign=top style='width:77.0pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Grid Pattern</p>
  </td>
  <td width=72 valign=top style='width:.75in;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Yes</p>
  </td>
  <td width=349 valign=top style='width:261.5pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>The data grid control itself always supports the Grid Control
  Pattern because the items that it contains have metadata that is laid out in
  a grid.</p>
  </td>
 </tr>
 <tr>
  <td width=103 valign=top style='width:77.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Scroll Pattern</p>
  </td>
  <td width=72 valign=top style='width:.75in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Depends</p>
  </td>
  <td width=349 valign=top style='width:261.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>The ability to scroll the data grid depends on content and
  whether scroll bars are present.</p>
  </td>
 </tr>
 <tr>
  <td width=103 valign=top style='width:77.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Selection Pattern</p>
  </td>
  <td width=72 valign=top style='width:.75in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Depends</p>
  </td>
  <td width=349 valign=top style='width:261.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>The ability to select the data grid depends on content.</p>
  </td>
 </tr>
 <tr>
  <td width=103 valign=top style='width:77.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Table Pattern</p>
  </td>
  <td width=72 valign=top style='width:.75in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Depends</p>
  </td>
  <td width=349 valign=top style='width:261.5pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>A data grid control that has a header should support the Table
  Control Pattern.</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>Among the Patterns listed, only the Grid Pattern must always
be supported by controls using the <span class=InlineCode><span
style='font-size:8.5pt'>DataGrid</span></span> Control Type. The Scroll
Pattern, Selection Pattern, and Table Pattern, however, are dependent upon the
specific data grid. Because the calendar grid in our timecard appli­cation does
not scroll, the Scroll Pattern does not apply. The user can, however, select
items in our grid, so the Selection Pattern also applies. Finally, our grid
does support headers (which run underneath each column), so it supports the
Table Pattern, as well. In our implementation table, we would, thus, list the
Grid, Selection, and Table Patterns under the Control Patterns column for our
timecard grid (Table 3-3).</p>

<b><span style='font-size:9.5pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span></b>

<p class=TableNum-Title>TABLE 3-3<span style='font-family:"Cambria Math",serif'>&#8194;</span>Required
Control Patterns for the employee timecard’s calendar grid custom control</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <thead>
  <tr>
   <td width=123 valign=top style='width:92.3pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Control</p>
   </td>
   <td width=72 valign=top style='width:54.3pt;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Control Type</p>
   </td>
   <td width=92 valign=top style='width:69.1pt;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Control Patterns</p>
   </td>
   <td width=129 valign=top style='width:97.05pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Properties</p>
   </td>
   <td width=106 valign=top style='width:79.75pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>&nbsp;</p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width=123 valign=top style='width:92.3pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead></p>
  </td>
  <td width=72 valign=top style='width:54.3pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>&nbsp;</p>
  </td>
  <td width=92 valign=top style='width:69.1pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>&nbsp;</p>
  </td>
  <td width=129 valign=top style='width:97.05pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>Automation Element Properties</p>
  </td>
  <td width=106 valign=top style='width:79.75pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>Control Pattern Properties</p>
  </td>
 </tr>
 <tr>
  <td width=123 valign=top style='width:92.3pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Grid: Calendar</p>
  </td>
  <td width=72 valign=top style='width:54.3pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>DataGrid</p>
  </td>
  <td width=92 valign=top style='width:69.1pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Grid</p>
  <p class=TableText>Selection</p>
  <p class=TableText>Table</p>
  </td>
  <td width=129 valign=top style='width:97.05pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  </td>
  <td width=106 valign=top style='width:79.75pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  </td>
 </tr>
</table>

<h2>Step 2: Gathering Required Control Type Properties</h2>

<p class=MsoNormal>The next step is to fill out our columns for the two types
of Control Properties:</p>

<p class=NumList>                 1.  Automation Element Properties</p>

<p class=NumList>                 2.  Control Pattern Properties</p>

<p class=ListEnd>&nbsp;</p>

<p class=SeeAlso>Go further: For UI Automation Element and Control Pattern
Properties, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h3>2a. Required Automation Element Properties</h3>

<p class=MsoNormal>The Automation Element Properties listed for each Control
Type is a subset of all the Auto­mation Elements available that are likely to
describe the element. The <span class=InlineCode><span style='font-size:8.5pt'>AutomationId</span></span>
and <span class=InlineCode><span style='font-size:8.5pt'>Name</span></span>
Properties appear on all Property lists for UIA Control Types. For the <span
class=InlineCode><span style='font-size:8.5pt'>DataGrid</span></span> Control
Type, the UIA Specification lists Automation Element Properties whose value or
definition is particularly relevant to <span class=InlineCode><span
style='font-size:8.5pt'>DataGrid</span></span> controls (Table 3-4).</p>

<p class=TableNum-Title>TABLE 3-4<span style='font-family:"Cambria Math",serif'>&#8194;</span>UI
Automation Properties for the DataGrid Control Type from the UIA Specification</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <thead>
  <tr>
   <td width=127 valign=top style='width:95.0pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Property</p>
   </td>
   <td width=72 valign=top style='width:.75in;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Value</p>
   </td>
   <td width=325 valign=top style='width:243.5pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Notes</p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width=127 valign=top style='width:95.0pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span
  class=InlineCode>AutomationId</span></p>
  </td>
  <td width=72 valign=top style='width:.75in;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>See notes</p>
  </td>
  <td width=325 valign=top style='width:243.5pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>The value of this Property needs to be unique across all
  controls in an application.</p>
  </td>
 </tr>
 <tr>
  <td width=127 valign=top style='width:95.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span
  class=InlineCode>BoundingRectangle</span></p>
  </td>
  <td width=72 valign=top style='width:.75in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>See notes</p>
  </td>
  <td width=325 valign=top style='width:243.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>The outermost rectangle that contains the whole control.</p>
  </td>
 </tr>
 <tr>
  <td width=127 valign=top style='width:95.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span
  class=InlineCode>ClickablePoint</span></p>
  </td>
  <td width=72 valign=top style='width:.75in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>See notes</p>
  </td>
  <td width=325 valign=top style='width:243.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Supported if there is a bounding rectangle. If not every
  point within the bounding rectangle is clickable, and you perform specialized
  hit testing, then override and provide a clickable point.</p>
  </td>
 </tr>
 <tr>
  <td width=127 valign=top style='width:95.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span
  class=InlineCode>ControlType</span></p>
  </td>
  <td width=72 valign=top style='width:.75in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>DataGrid</p>
  </td>
  <td width=325 valign=top style='width:243.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>This value is the same for all UI frameworks.</p>
  </td>
 </tr>
 <tr>
  <td width=127 valign=top style='width:95.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>&nbsp;</span></p>
  <p class=TableText><span class=InlineCode>&nbsp;</span></p>
  <p class=TableText><span
  class=InlineCode>IsContentElement</span></p>
  </td>
  <td width=72 valign=top style='width:.75in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  <p class=TableText>&nbsp;</p>
  <p class=TableText>True</p>
  </td>
  <td width=325 valign=top style='width:243.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  <p class=TableText>&nbsp;</p>
  <p class=TableText>The value of this Property must always be True. This means
  that the data grid control must always be in the content view of the UI
  Automation tree.</p>
  </td>
 </tr>
 <tr>
  <td width=127 valign=top style='width:95.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span
  class=InlineCode>IsControlElement</span></p>
  </td>
  <td width=72 valign=top style='width:.75in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>True</p>
  </td>
  <td width=325 valign=top style='width:243.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>The value of this Property must always be True. This means
  that the data grid control must always be in the control view of the UI
  Automation Tree.</p>
  </td>
 </tr>
 <tr>
  <td width=127 valign=top style='width:95.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span
  class=InlineCode>IsKeyboardFocusable</span></p>
  </td>
  <td width=72 valign=top style='width:.75in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>See notes</p>
  </td>
  <td width=325 valign=top style='width:243.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>If the control can receive keyboard focus, it must support
  this Property.</p>
  </td>
 </tr>
 <tr>
  <td width=127 valign=top style='width:95.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span
  class=InlineCode>LabeledBy</span></p>
  </td>
  <td width=72 valign=top style='width:.75in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>See notes</p>
  </td>
  <td width=325 valign=top style='width:243.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>If there is a static text label, then this Property must
  expose a reference to that control.</p>
  </td>
 </tr>
 <tr>
  <td width=127 valign=top style='width:95.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span
  class=InlineCode>LocalizedControlType</span></p>
  </td>
  <td width=72 valign=top style='width:.75in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>See notes</p>
  </td>
  <td width=325 valign=top style='width:243.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Localized string corresponding to the DataGrid Control
  Type. The default value is &quot;data grid&quot; for en-US or English (United
  States).</p>
  </td>
 </tr>
 <tr>
  <td width=127 valign=top style='width:95.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span
  class=InlineCode>Name</span></p>
  </td>
  <td width=72 valign=top style='width:.75in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>See notes</p>
  </td>
  <td width=325 valign=top style='width:243.5pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>The data grid control typically gets the value for its
  Name Property from a static text label. If there is not a static text label,
  an application developer must assign a value for the Name Property. The value
  of the Name Property must never be the textual contents of the edit control.</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>For all 10 Properties, we can apply values specific to the
timecard’s calendar grid. For the <span class=InlineCode><span
style='font-size:8.5pt'>AutomationId</span></span>, <span class=InlineCode><span
style='font-size:8.5pt'>BoundingRectangle</span></span>, <span
class=InlineCode><span style='font-size:8.5pt'>ClickablePoint</span></span>, <span
class=InlineCode><span style='font-size:8.5pt'>IsKeyboardFocusable</span></span>,
<span class=InlineCode><span style='font-size:8.5pt'>LabeledBy</span></span>, <span
class=InlineCode><span style='font-size:8.5pt'>Name</span></span>, and <span
class=InlineCode><span style='font-size:8.5pt'>LocalizableControlType</span></span>
Properties, which have no specified value, we must refer to the UIA
Specification to find the data type for the values needed for the Property. For
each of these variable Properties, we specify the Property values for the
timecard in Table 3-5. Note that the <span class=InlineCode><span
style='font-size:8.5pt'>ClickablePoint</span></span> Property is omitted
because it is irrelevant for the timecard’s grid.</p>

<p class=TableNum-Title>TABLE 3-5<span style='font-family:"Cambria Math",serif'>&#8194;</span>Variable
Automation Element Property values assigned for custom calendar grid control</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <thead>
  <tr>
   <td width=145 valign=top style='width:108.5pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Automation Element Property</p>
   </td>
   <td width=78 valign=top style='width:58.5pt;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Value</p>
   </td>
   <td width=96 valign=top style='width:1.0in;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Data Type</p>
   </td>
   <td width=205 valign=top style='width:153.5pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Notes</p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width=145 valign=top style='width:108.5pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>AutomationId</span></p>
  </td>
  <td width=78 valign=top style='width:58.5pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>TimecardGrid</p>
  </td>
  <td width=96 valign=top style='width:1.0in;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>VT_BSTR</p>
  </td>
  <td width=205 valign=top style='width:153.5pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>The value for the <span class=InlineCode>AutomationId</span>
  should be unique among siblings.</p>
  </td>
 </tr>
 <tr>
  <td width=145 valign=top style='width:108.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>BoundingRectangle</span></p>
  </td>
  <td width=78 valign=top style='width:58.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Coordinates of table onscreen</p>
  </td>
  <td width=96 valign=top style='width:1.0in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>VT_R8|VT_ARRAY</p>
  </td>
  <td width=205 valign=top style='width:153.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>The value of the rectangle is expressed in physical screen
  coordinates.</p>
  </td>
 </tr>
 <tr>
  <td width=145 valign=top style='width:108.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>IsKeyboardFocusable</span></p>
  </td>
  <td width=78 valign=top style='width:58.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>False</p>
  </td>
  <td width=96 valign=top style='width:1.0in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>VT_BOOL</p>
  </td>
  <td width=205 valign=top style='width:153.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>The grid itself cannot receive keyboard focus; only the
  grid items can.</p>
  </td>
 </tr>
 <tr>
  <td width=145 valign=top style='width:108.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>LabeledBy</span></p>
  </td>
  <td width=78 valign=top style='width:58.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Null</p>
  </td>
  <td width=96 valign=top style='width:1.0in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>VT_UNKNOWN</p>
  </td>
  <td width=205 valign=top style='width:153.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Null because there is no text label for the grid.</p>
  </td>
 </tr>
 <tr>
  <td width=145 valign=top style='width:108.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>Name</span></p>
  </td>
  <td width=78 valign=top style='width:58.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>“Calendar”</p>
  </td>
  <td width=96 valign=top style='width:1.0in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>VT_BSTR</p>
  </td>
  <td width=205 valign=top style='width:153.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Typically, the value for the <span class=InlineCode>Name</span>
  Property should match the label<br>
   text on screen. Because there is no <br>
  on-screen label, “Calendar” is<br>
   assigned. In combination with the <span class=InlineCode>LocalizedControlType</span>
  Property, the control may read as “Calendar timecard grid.”</p>
  </td>
 </tr>
 <tr>
  <td width=145 valign=top style='width:108.5pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>LocalizedControlType</span></p>
  </td>
  <td width=78 valign=top style='width:58.5pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>“timecard grid”</p>
  </td>
  <td width=96 valign=top style='width:1.0in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>VT_STR</p>
  </td>
  <td width=205 valign=top style='width:153.5pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>LocalizedControlType</span> can be
  modified to be more understand­<br>
  able to the user. For English, it is suggested that the string for the <span
  class=InlineCode>LocalizedControlType</span> Property be typed in small caps
  because it will be used in-line with the Name Property.</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>With the required Automation Element Property values now
defined, you can fill out the Automation Element Properties column for the
calendar grid. Table 3-6 shows what our table looks like so far.</p>

<p class=TableNum-Title>TABLE 3-6<span style='font-family:"Cambria Math",serif'>&#8194;</span>Implementation
table with the required Automation Element Properties and their values for the
employee timecard’s calendar grid custom control</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <thead>
  <tr>
   <td width=79 valign=top style='width:59.35pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Control</p>
   </td>
   <td width=75 valign=top style='width:56.45pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Control <br>
   Type</p>
   </td>
   <td width=80 valign=top style='width:60.2pt;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Control Patterns</p>
   </td>
   <td width=200 valign=top style='width:150.05pt;background:#D9D9D9;
   padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Properties</p>
   </td>
   <td width=89 valign=top style='width:66.45pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>&nbsp;</p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width=79 valign=top style='width:59.35pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead></p>
  </td>
  <td width=75 valign=top style='width:56.45pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>&nbsp;</p>
  </td>
  <td width=80 valign=top style='width:60.2pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>&nbsp;</p>
  </td>
  <td width=200 valign=top style='width:150.05pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>Automation Element Properties</p>
  </td>
  <td width=89 valign=top style='width:66.45pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>Control Pattern Properties</p>
  </td>
 </tr>
 <tr>
  <td width=79 valign=top style='width:59.35pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Grid: Calendar</p>
  </td>
  <td width=75 valign=top style='width:56.45pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>DataGrid</p>
  </td>
  <td width=80 valign=top style='width:60.2pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Grid</p>
  <p class=TableText>Selection</p>
  <p class=TableText>Table</p>
  </td>
  <td width=200 valign=top style='width:150.05pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>AutomationId</span>: TableHeader</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>BoundingRectangle</span>: Coordinates of
  table onscreen </p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>ControlType</span>: DataGrid</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>IsContentElement</span>: True</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>IsControlElement</span>: True</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>IsKeyboardFocusable</span>: False</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>LabeledBy</span>: Null</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>LocalizedControlType:</span> “timecard
  grid”</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>Name</span>: “Calendar”</p>
  <p class=ListEnd>&nbsp;</p>
  </td>
  <td width=89 valign=top style='width:66.45pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>&nbsp;</p>
  </td>
 </tr>
</table>

<p class=SeeAlso>&nbsp;</p>

<p class=SeeAlso>Go further: For data types and properties, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h3>2b. Required Control Pattern Properties</h3>

<p class=MsoNormal>Each Control Pattern in UIA has Properties of their own that
we need to implement. Using the UIA Specification again, we can see what
Properties are required for each Control Pattern and assign a value for each
Pattern Property. Table 3-7 lists the Property name, value assigned, and notes
about the Property for each Control Pattern.</p>

<p class=TableNum-Title>TABLE 3-7<span style='font-family:"Cambria Math",serif'>&#8194;</span>Control
Pattern Property names and values for the timecard’s calendar grid</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <thead>
  <tr>
   <td width=111 valign=top style='width:82.95pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Control Pattern</p>
   </td>
   <td width=142 valign=top style='width:106.55pt;background:#D9D9D9;
   padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Property Name (Data Type)</p>
   </td>
   <td width=88 valign=top style='width:66.2pt;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Value</p>
   </td>
   <td width=182 valign=top style='width:1.9in;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Notes</p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width=111 valign=top style='width:82.95pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Grid Pattern</p>
  </td>
  <td width=142 valign=top style='width:106.55pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>ColumnCount<br>
  </span>(VT_I4)</p>
  </td>
  <td width=88 valign=top style='width:66.2pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>7</p>
  </td>
  <td width=182 valign=top style='width:1.9in;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>The total number of columns in a grid. The control has
  seven columns, one column for each day.</p>
  </td>
 </tr>
 <tr>
  <td width=111 valign=top style='width:82.95pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText></p>
  </td>
  <td width=142 valign=top style='width:106.55pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>RowCount<br>
  </span>(VT_I4)</p>
  </td>
  <td width=88 valign=top style='width:66.2pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>1</p>
  </td>
  <td width=182 valign=top style='width:1.9in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>The total number of rows in a grid. The control has one
  row of columns.</p>
  </td>
 </tr>
 <tr>
  <td width=111 valign=top style='width:82.95pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Selection Pattern</p>
  </td>
  <td width=142 valign=top style='width:106.55pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>CanSelectMultiple<br>
  </span>(VT_BOOL)</p>
  </td>
  <td width=88 valign=top style='width:66.2pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>False</p>
  </td>
  <td width=182 valign=top style='width:1.9in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>A value that specifies whether the container allows more
  than one child element to be selected concurrently. The user can only select
  one column at a time, so the value is false.</p>
  </td>
 </tr>
 <tr>
  <td width=111 valign=top style='width:82.95pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText></p>
  </td>
  <td width=142 valign=top style='width:106.55pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>IsSelectionRequired<br>
  </span>(VT_BOOL)</p>
  </td>
  <td width=88 valign=top style='width:66.2pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>False</p>
  </td>
  <td width=182 valign=top style='width:1.9in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>A value that specifies whether the container requires at
  least one child item to be selected. Employees are not required to select a
  column when viewing their timecard, so the value is false.</p>
  </td>
 </tr>
 <tr>
  <td width=111 valign=top style='width:82.95pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Table Pattern</p>
  </td>
  <td width=142 valign=top style='width:106.55pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>RowOrColumnMajor </span>(VT_I4)</p>
  </td>
  <td width=88 valign=top style='width:66.2pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Column</p>
  </td>
  <td width=182 valign=top style='width:1.9in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>The primary direction of traversal for the table. Column
  is chosen for the timecard because users would generally read the control by
  date, which is in a column.</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>Now that we have determined what our Property values should
be for each of the calendar grid’s required UIA Control Patterns, we can fill
out the Control Pattern Properties column as shown in Table 3-8.</p>

<b><span style='font-size:9.5pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span></b>

<p class=TableNum-Title>TABLE 3-8<span style='font-family:"Cambria Math",serif'>&#8194;</span>Implementation
table with the required Control Pattern Properties and their values for the
employee timecard’s calendar grid custom control</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width=548
 style='margin-left:43.0pt;border-collapse:collapse'>
 <tr>
  <td width=61 valign=top style='width:45.5pt;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead>Control</p>
  </td>
  <td width=57 valign=top style='width:42.75pt;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead>Control Type</p>
  </td>
  <td width=57 valign=top style='width:42.75pt;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead>Control Patterns</p>
  </td>
  <td width=184 valign=top style='width:137.75pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead>Properties</p>
  </td>
  <td width=190 valign=top style='width:142.5pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=61 valign=top style='width:45.5pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead></p>
  </td>
  <td width=57 valign=top style='width:42.75pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>&nbsp;</p>
  </td>
  <td width=57 valign=top style='width:42.75pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>&nbsp;</p>
  </td>
  <td width=184 valign=top style='width:137.75pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>Automation Element Properties</p>
  </td>
  <td width=190 valign=top style='width:142.5pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead>Control Pattern Properties</p>
  </td>
 </tr>
 <tr>
  <td width=61 valign=top style='width:45.5pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Grid: Calendar</p>
  </td>
  <td width=57 valign=top style='width:42.75pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>DataGrid</p>
  </td>
  <td width=57 valign=top style='width:42.75pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Grid </p>
  <p class=TableText>Selection </p>
  <p class=TableText>Table </p>
  </td>
  <td width=184 valign=top style='width:137.75pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>AutomationID</span>: TableHeader</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>BoundingRectangle</span>: Coordinates of
  table onscreen</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>ControlType</span>: DataGrid</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>IsContentElement</span>: True</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>IsControlElement</span>: True</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>IsKeyboardFocusable</span>: False</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>LabeledBy</span>: Null</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>LocalizedControlType</span>: “timecard
  grid”</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>Name</span>: Calendar</p>
  <p class=ListEnd>&nbsp;</p>
  </td>
  <td width=190 valign=top style='width:142.5pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Grid Pattern</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>ColumnCount</span>: 7</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>RowCount</span>: 1</p>
  <p class=ListEnd style='margin-right:6.0pt'>&nbsp;</p>
  <p class=TableText>Selection Pattern</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>CanSelectMultiple</span>: False</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>IsSelectionRequired</span>: False</p>
  <p class=ListEnd style='margin-right:6.0pt'>&nbsp;</p>
  <p class=TableText>Table Pattern</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>RowOrColumnMajor</span>: Column</p>
  <p class=ListEnd style='margin-right:6.0pt'>&nbsp;</p>
  </td>
 </tr>
</table>

<h2>Step 3: Gathering Requirements for Additional Control Functionality</h2>

<p class=MsoNormal>Now that we have finished listing in our implementation
table all the Control Patterns and Properties required by the UIA Specification
for a <span class=InlineCode><span style='font-size:8.5pt'>DataGrid</span></span>
control, we need to list any additional Control Patterns and Properties that
apply specifically to our control.</p>

<p class=MsoNormal>The question now is “Does my control exhibit additional
functionality, aside from the required Control Patterns?” If the answer is yes,
then determine what additional UIA Patterns or Prop­erties the control maps to
in UIA. If you absolutely cannot find a Control Pattern or Property that
exhibits the additional functionality of your control, then you must create
custom Control Patterns and Properties to describe your control, or its functionality,
and include those in your implementation table. Be aware, however, that your
custom specifications are only useful if UIA Clients can share and adopt your
specifications. Refer to the UIA Community Promise Specification and resources
from the Accessibility Interoperability Alliance (AIA) for best practices and
guidance on maximizing usability.</p>

<p class=MsoNormal>In the case of our timecard’s calendar grid, it does exhibit
some additional functionality. When the user clicks one of the days in the
grid, the Data Entry fields populate with any information that has been
previously entered for that day. The grid affects another part of the
application, </p>

<br clear=all style='page-break-before:always'>

<p class=MsoNormal>the fields in the Data Entry group box. Because our grid
exhibits additional functionality, we must, then, identify and map this
functionality to a UIA Control Pattern or Property and list the requirements
for that Pattern or Property in our implementation table. Looking at the UIA
Specification, we see that the <span class=InlineCode><span style='font-size:
8.5pt'>ControllerFor</span></span> Property best describes this other
functionality (Table 3-9).</p>

<p class=TableNum-Title>TABLE 3-9<span style='font-family:"Cambria Math",serif'>&#8194;</span>Description
of the <span class=InlineCode><span style='font-size:8.5pt'>ControllerFor</span></span>
Property from the UIA Specification</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <tr>
  <td width=187 valign=top style='width:140.0pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>Property
  Name (Data Type)</p>
  </td>
  <td width=337 valign=top style='width:252.5pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>Description</p>
  </td>
 </tr>
 <tr>
  <td width=187 valign=top style='width:140.0pt;border:none;border-top:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'><span
  class=InlineCode>ControllerFor (VT_UNKNOWN|VT_ARRAY)</span></p>
  </td>
  <td width=337 valign=top style='width:252.5pt;border:none;border-top:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>An array of elements that are
  manipulated by the Automation Element that supports this Property.</p>
  <p class=TableText style='margin-right:2.9pt'><span class=InlineCode>ControllerFor</span>
  is used when an Automation Element affects one or more segments of the
  application UI or the desktop; otherwise, it is hard to associate the impact
  of the control operation with UI elements.</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>Other than the <span class=InlineCode><span
style='font-size:8.5pt'>ControllerFor</span></span> Property, our calendar grid
does not appear to exhibit any additional functionality. We will go ahead and
add these Properties to our table (Table 3-10).</p>

<p class=TableNum-Title>TABLE 3-10<span style='font-family:"Cambria Math",serif'>&#8194;</span>Completed
implementation table for calendar grid custom control</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width=529
 style='margin-left:43.0pt;border-collapse:collapse'>
 <tr>
  <td width=67 valign=top style='width:50.0pt;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>Control</p>
  </td>
  <td width=66 valign=top style='width:49.5pt;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>Control Type</p>
  </td>
  <td width=66 valign=top style='width:49.5pt;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>Control Patterns</p>
  </td>
  <td width=168 valign=top style='width:1.75in;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>Properties</p>
  </td>
  <td width=162 valign=top style='width:121.5pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=67 valign=top style='width:50.0pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead style='margin-right:2.9pt'></p>
  </td>
  <td width=66 valign=top style='width:49.5pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead style='margin-right:2.9pt'>&nbsp;</p>
  </td>
  <td width=66 valign=top style='width:49.5pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead style='margin-right:2.9pt'>&nbsp;</p>
  </td>
  <td width=168 valign=top style='width:1.75in;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead style='margin-right:2.9pt'>Automation Element
  Properties</p>
  </td>
  <td width=162 valign=top style='width:121.5pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableSubhead style='margin-right:2.9pt'>Control Pattern Properties</p>
  </td>
 </tr>
 <tr>
  <td width=67 valign=top style='width:50.0pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Grid:
  Calendar</p>
  </td>
  <td width=66 valign=top style='width:49.5pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>DataGrid</p>
  </td>
  <td width=66 valign=top style='width:49.5pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Grid</p>
  <p class=TableText style='margin-right:2.9pt'>Selection</p>
  <p class=TableText style='margin-right:2.9pt'>Table </p>
  </td>
  <td width=168 valign=top style='width:1.75in;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>AutomationID</span>: TableHeader</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>BoundingRectangle</span>: Coordinates of table onscreen</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>ControlType</span>: DataGrid</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsContentElement</span>: True</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsControlElement</span>: True</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsKeyboardFocusable</span>: False</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>LabeledBy</span>: Null</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>LocalizedControlType</span>: “data grid”</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>Name</span>: Calendar</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>ControllerFor</span>: Date Picker, Hours Edit Box, and Work
  Log Edit Box (This Property can have multiple things.)</p>
  </td>
  <td width=162 valign=top style='width:121.5pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Grid Pattern</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>ColumnCount</span>: 7</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>RowCount</span>: 1</p>
  <p class=TableText style='margin-right:2.9pt'>Selection Pattern</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>CanSelectMultiple</span>: False</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsSelectionRequired</span>: False</p>
  <p class=TableText style='margin-right:2.9pt'>Table Pattern</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>RowOrColumnMajor</span>: Column</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>We have now finished designing the implementation solution
for our first custom control element in UIA. Before moving to the next element,
it’s a good idea to check the UIA Specification’s list of Properties to make
sure that you have listed all the requirements for your control’s functionality.
As mentioned, all of our custom controls in the example can map to a UIA
Control Type, so we use the same process as the first control (Process A) for
each of the remaining elements and fill out the rest of our implementation
table (Table 3-11).</p>

<p class=TableNum-Title>TABLE 3-11<span style='font-family:"Cambria Math",serif'>&#8194;</span>Completed
implementation table for employee timecard custom controls</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width=529
 style='margin-left:43.0pt;border-collapse:collapse'>
 <thead>
  <tr style='height:26.0pt'>
   <td width=56 valign=top style='width:42.25pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt;height:26.0pt'>
   <p class=TableHead style='margin-right:2.9pt'>Control</p>
   </td>
   <td width=61 valign=top style='width:46.0pt;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt;
   height:26.0pt'>
   <p class=TableHead style='margin-right:2.9pt'>Control Type</p>
   </td>
   <td width=57 valign=top style='width:42.75pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt;height:26.0pt'>
   <p class=TableHead style='margin-right:2.9pt'>Control Patterns</p>
   </td>
   <td width=192 valign=top style='width:2.0in;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt;
   height:26.0pt'>
   <p class=TableHead style='margin-right:2.9pt'>Properties</p>
   </td>
   <td width=163 valign=top style='width:122.0pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt;height:26.0pt'>
   <p class=TableHead style='margin-right:2.9pt'>&nbsp;</p>
   </td>
  </tr>
  <tr>
   <td width=56 valign=top style='width:42.25pt;border-top:solid silver 1.0pt;
   border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
   padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableSubhead style='margin-right:2.9pt'></p>
   </td>
   <td width=61 valign=top style='width:46.0pt;border-top:solid silver 1.0pt;
   border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
   padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableSubhead style='margin-right:2.9pt'>&nbsp;</p>
   </td>
   <td width=57 valign=top style='width:42.75pt;border-top:solid silver 1.0pt;
   border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
   padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableSubhead style='margin-right:2.9pt'>&nbsp;</p>
   </td>
   <td width=192 valign=top style='width:2.0in;border-top:solid silver 1.0pt;
   border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
   padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableSubhead style='margin-right:2.9pt'>Automation Element
   Properties</p>
   </td>
   <td width=163 valign=top style='width:122.0pt;border-top:solid silver 1.0pt;
   border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
   padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableSubhead style='margin-right:2.9pt'>Control Pattern Properties</p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width=56 valign=top style='width:42.25pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Grid:
  Calendar</p>
  </td>
  <td width=61 valign=top style='width:46.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>DataGrid</p>
  </td>
  <td width=57 valign=top style='width:42.75pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Grid</p>
  <p class=TableText style='margin-right:2.9pt'>Selection</p>
  <p class=TableText style='margin-right:2.9pt'>Table</p>
  </td>
  <td width=192 valign=top style='width:2.0in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>AutomationID</span>: TableHeader</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>BoundingRectangle</span>: Coordinates of table onscreen</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>ControlType</span>: DataGrid</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsContentElement</span>: True</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsControlElement</span>: True</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsKeyboardFocusable</span>: False</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>LabeledBy</span>: Null</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>LocalizedControlType</span>: “data grid”</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>Name</span>: Calendar</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>ControllerFor</span>: Date Picker, Hours Edit Box, and Work
  Log Edit Box (This Property can have multiple things)</p>
  </td>
  <td width=163 valign=top style='width:122.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>Grid Pattern</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>ColumnCount</span>: 7</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>RowCount</span>: 1</p>
  <p class=ListEnd style='margin-right:6.0pt'>&nbsp;</p>
  <p class=TableText style='margin-right:6.0pt'>Selection Pattern</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>CanSelectMultiple</span>: False</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsSelectionRequired</span>: False</p>
  <p class=ListEnd style='margin-right:6.0pt'>&nbsp;</p>
  <p class=TableText style='margin-right:6.0pt'>Table Pattern</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>RowOrColumnMajor</span>: Column</p>
  <p class=ListEnd style='margin-right:6.0pt'>&nbsp;</p>
  </td>
 </tr>
 <tr style='page-break-inside:avoid'>
  <td width=56 valign=top style='width:42.25pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Grid
  Item: Days</p>
  </td>
  <td width=61 valign=top style='width:46.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Data Item</p>
  </td>
  <td width=57 valign=top style='width:42.75pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Grid Item</p>
  <p class=TableText style='margin-right:2.9pt'>Selection Item</p>
  <p class=TableText style='margin-right:2.9pt'>Table Item</p>
  </td>
  <td width=192 valign=top style='width:2.0in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>AutomationId</span>: “TC#” (# is replaced by the number of
  the column from 1 through 7, where “TC1” would be Sunday)</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>BoundingRectangle</span>: Coor­dinates of grid item onscreen</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>ClickablePoint</span>: any point on screen clicked to select
  or focus the grid item reliably.</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>ControlType</span>: GridItem</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsContentElement</span>: True</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsControlElement</span>: True</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsKeyboardFocusable</span>: True</p>
  <p class=TableBullList style='margin-left:10.5pt;text-indent:-9.0pt'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span class=InlineCode>HasKeyboardFocus</span>: True if the
  grid item is focused, false otherwise</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>ItemStatus</span>: “data entered” if the grid data is
  entered, “empty” otherwise</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>LabeledBy</span>: Null</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>LocalizedControlType</span>: “timecard”</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>Name</span>: date of the grid (e.g., “Mon, March 02, 2009”)</p>
  </td>
  <td width=163 valign=top style='width:122.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>Grid Item Pattern</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>Column</span>: 1 through 7</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>ColumnSpan</span>: 1</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>ContainingGrid</span>: Parent Control</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>Row</span>: 1</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>RowSpan</span>: 1</p>
  <p class=ListEnd style='margin-right:6.0pt'>&nbsp;</p>
  <p class=TableText style='margin-right:6.0pt'>Selection Item Pattern</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsSelected</span>: True if the grid item is selected, false
  otherwise</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>SelectionContainer</span>: Parent table/grid control</p>
  <p class=ListEnd style='margin-right:6.0pt'><br>
  <br>
  </p>
  <p class=TableText style='margin-right:6.0pt'>(No Properties for Table Item
  Pattern)</p>
  </td>
 </tr>
 <tr>
  <td width=56 valign=top style='width:42.25pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Header:
  Days</p>
  </td>
  <td width=61 valign=top style='width:46.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Header</p>
  </td>
  <td width=57 valign=top style='width:42.75pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>None</p>
  </td>
  <td width=192 valign=top style='width:2.0in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>AutomationId</span>: “Header”</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>BoundingRectangle</span>: Coor­dinates of grid item onscreen</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>ControlType</span>: Header</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsContentElement</span>: False</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsControlElement</span>: True</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsKeyboardFocusable</span>: False</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>Labeled By</span>: Null</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>LocalizedControlType</span>: “header”</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>Orientation</span>: Horizontal</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>Name</span>: “” (Nameless because there is no other header
  in this control)</p>
  <p class=ListEnd style='margin-right:2.9pt'>&nbsp;</p>
  </td>
  <td width=163 valign=top style='width:122.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=56 valign=top style='width:42.25pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Header
  Items: Days of Week</p>
  </td>
  <td width=61 valign=top style='width:46.0pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Header Item</p>
  </td>
  <td width=57 valign=top style='width:42.75pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>None</p>
  </td>
  <td width=192 valign=top style='width:2.0in;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>AutomationId</span>: “H#” (# is replaced by the numer from 1
  through 7 where H1 is for Sunday)</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>BoundingRectangle</span>: coor­dinate of header item on
  screen</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>ClickablePoint</span>: any point on screen clicked to select
  or focus the associated column</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>ControlType</span>: HeaderItem</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsContentElement</span>: False</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsControlElement</span>: True</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>IsKeyboardFocusable</span>: False</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>LabeledBy</span>: Null</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>LocalizedControlType</span>: “header item”</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:10.5pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
  class=InlineCode>Name</span>: label string of the element (e.g., “Su” for
  Sunday header item)</p>
  <p class=ListEnd style='margin-right:2.9pt'>&nbsp;</p>
  </td>
  <td width=163 valign=top style='width:122.0pt;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>&nbsp;</p>
  </td>
 </tr>
</table>

<p class=SeeAlso>Go further: For the UIA Community Promise and best practices
and guidance on maximizing usability with interoperable implementations, go to http://go.microsoft.com/fwlink/<br>
?LinkId=150842.</p>

<p class=SeeAlso>&nbsp;</p>

<p class=SeeAlso>&nbsp;</p>

<p class=SeeAlso>&nbsp;</p>

<p class=SeeAlso>&nbsp;</p>

<p class=SeeAlso>&nbsp;</p>

<p class=SeeAlso>&nbsp;</p>

<p class=SeeAlso></p>

<h1>Process B: Control Does Not Map to a UIA Control Type</h1>

<p class=MsoNormal>So far, we have walked through designing solutions for
custom controls if the controls can map directly to Control Types in UIA. What
if your custom control does <i>not</i> map to a UIA Control Type? If you find
yourself in this situation, then you need to take every step to be absolutely
sure that your control cannot be mapped to another Control Type. To avoid
unnecessary development, documentation, and help costs associated with custom
controls, complete the following steps:</p>

<p class=NumList>                 1.  Try to identify all Patterns and
Properties required to describe them.</p>

<p class=NumList>                 2.  Look at the UIA Control Type list again
to see if there is a Control Type sufficient to map to your control. If there
is a Control Type that can be used for your control, fill out the appropriate
columns in your implementation table with the control’s requirements.</p>

<p class=ListPara>Note that because UIA allows you to add extra Control
Patterns and Properties to an existing Control Type (unless prohibited by the
UIA Control Type Specification) without making it into a completely new custom
control, it is not necessary to match your custom control exactly to a UIA
Control Type. You can also offer a customized description of the element based
on the existing Control Type with an alternative <span class=InlineCode><span
style='font-size:8.5pt'>LocalizedControlType</span></span> Property value.</p>

<p class=NumList>                 3.  If there is absolutely no Control Type
that can be used for your control, the “Custom” Control Type can be applied.
Fill out the appropriate columns in your implementation table with the
control’s requirements, and fill out the <span class=InlineCode><span
style='font-size:8.5pt'>LocalizedControlType</span></span> Property with a
string that would make sense to AT users.</p>

<p class=NumList>                 4.  Document and publish your custom Control
Type specifications where it is publicly available, following the process
defined by a UIA working group of the AIA, so that the specification of the
custom control is clear to the users and AT makers. To facilitate the
publishing process, it may also be helpful to ask a member of the AIA to
publish your specification.</p>

<p class=NumList>&nbsp;</p>

<p class=NumList>&nbsp;</p>

<p class=NumList>&nbsp;</p>

<p class=NumList>&nbsp;</p>

<p class=NumList>&nbsp;</p>

<p class=NumList>&nbsp;</p>

<h1>Methods and Events</h1>

<p class=MsoNormal>After determining your Control Types, Patterns, and
Properties, you also need to know what UIA Methods and Events are required.
Methods, as you may recall from Chapter 1, provide a way to expose a control's
functionality per the UIA Specification. Events in UIA are raised to notify
clients, such as screen readers or screen magnifiers, that there is a change to
the Automation Element in the UI. Determining these Methods and Events is
straightforward and usually only requires checking the corresponding Method and
Event specifications for Control Patterns and Properties that your control
supports. Table 3-12 lists the Properties and Methods that are required to
expose the functionality of the three Control Patterns in the timecard data
grid.</p>

<p class=TableNum-Title>TABLE 3-12<span style='font-family:"Cambria Math",serif'>&#8194;</span>Control
Properties and Methods for the employee timecard’s Control Patterns</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <thead>
  <tr>
   <td width=201 valign=top style='width:150.45pt;background:#D9D9D9;
   padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Control Pattern</p>
   </td>
   <td width=202 valign=top style='width:2.1in;background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Control Properties</p>
   </td>
   <td width=185 valign=top style='width:138.65pt;background:#D9D9D9;
   padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead>Methods</p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width=201 valign=top style='width:150.45pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Grid</p>
  </td>
  <td width=202 valign=top style='width:2.1in;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>ColumnCount</span></p>
  <p class=TableText><span class=InlineCode>RowCount</span></p>
  </td>
  <td width=185 valign=top style='width:138.65pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>GetItem</span></p>
  </td>
 </tr>
 <tr>
  <td width=201 valign=top style='width:150.45pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Selection</p>
  </td>
  <td width=202 valign=top style='width:2.1in;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>CanSelectMultiple</span></p>
  <p class=TableText><span class=InlineCode>IsSelectionRequired</span></p>
  </td>
  <td width=185 valign=top style='width:138.65pt;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>GetSelection</span></p>
  </td>
 </tr>
 <tr>
  <td width=201 valign=top style='width:150.45pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Table</p>
  </td>
  <td width=202 valign=top style='width:2.1in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>RowOrColumnMajor</span></p>
  </td>
  <td width=185 valign=top style='width:138.65pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>GetColumnHeaders</span></p>
  <p class=TableText><span class=InlineCode>GetRowHeaders</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>As you learned in Chapter 1, there are many different UIA
Events. The UIA Specification directs you on what Events you must raise for
your custom control. Table 3-13 lists all the Events that are supported by the
data grid element and whether the Event is applicable to our timecard
application.</p>

<p class=TableNum-Title>TABLE 3-13<span style='font-family:"Cambria Math",serif'>&#8194;</span>Data
Grid UI Automation Events applicable to the timecard’s custom grid control</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width=523
 style='width:392.0pt;margin-left:43.0pt;border-collapse:collapse'>
 <thead>
  <tr>
   <td width=224 valign=top style='width:167.7pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead><span lang=FR>UI Automation Event</span></p>
   </td>
   <td width=299 valign=top style='width:224.3pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead><span lang=FR>Supported</span></p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width=224 valign=top style='width:167.7pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>AutomationFocusChangedEvent </span></p>
  </td>
  <td width=299 valign=top style='width:224.3pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Yes</p>
  </td>
 </tr>
 <tr>
  <td width=224 valign=top style='width:167.7pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>BoundingRectangleProperty Property-changed
  Event</span></p>
  </td>
  <td width=299 valign=top style='width:224.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Yes</p>
  </td>
 </tr>
 <tr>
  <td width=224 valign=top style='width:167.7pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>IsEnabledProperty Property-changed Event</span></p>
  </td>
  <td width=299 valign=top style='width:224.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Yes</p>
  </td>
 </tr>
 <tr>
  <td width=224 valign=top style='width:167.7pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>IsOffscreenProperty Property-changed
  Event</span></p>
  </td>
  <td width=299 valign=top style='width:224.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Yes</p>
  </td>
 </tr>
 <tr>
  <td width=224 valign=top style='width:167.7pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>LayoutInvalidatedEvent </span></p>
  </td>
  <td width=299 valign=top style='width:224.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Not applicable. Timecard does not invalidate the layout.</p>
  </td>
 </tr>
 <tr>
  <td width=224 valign=top style='width:167.7pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>StructureChangedEvent </span></p>
  </td>
  <td width=299 valign=top style='width:224.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Yes</p>
  </td>
 </tr>
 <tr>
  <td width=224 valign=top style='width:167.7pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>&nbsp;</span></p>
  <p class=TableText><span class=InlineCode>&nbsp;</span></p>
  <p class=TableText><span class=InlineCode>&nbsp;</span></p>
  <p class=TableText><span class=InlineCode><br>
  </span><span class=InlineCode>CurrentViewProperty Property-changed Event.</span></p>
  </td>
  <td width=299 valign=top style='width:224.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>&nbsp;</p>
  <p class=TableText>&nbsp;</p>
  <p class=TableText>&nbsp;</p>
  <p class=TableText>Not applicable. Timecard does not change its view mode.</p>
  </td>
 </tr>
 <tr>
  <td width=224 valign=top style='width:167.7pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>HorizontallyScrollableProperty Property-changed
  Event</span></p>
  </td>
  <td width=299 valign=top style='width:224.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Not applicable. Timecard does not support scrolling.</p>
  </td>
 </tr>
 <tr>
  <td width=224 valign=top style='width:167.7pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>HorizontalScrollPercentProperty Property-changed
  Event</span></p>
  </td>
  <td width=299 valign=top style='width:224.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Not applicable. Timecard does not support scrolling.</p>
  </td>
 </tr>
 <tr>
  <td width=224 valign=top style='width:167.7pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>HorizontalViewSizeProperty Property-changed
  Event</span></p>
  </td>
  <td width=299 valign=top style='width:224.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Not applicable. Timecard does not support scrolling.</p>
  </td>
 </tr>
 <tr>
  <td width=224 valign=top style='width:167.7pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>VerticalScrollPercentProperty Property-changed
  Event</span></p>
  </td>
  <td width=299 valign=top style='width:224.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Not applicable. Timecard does not support scrolling.</p>
  </td>
 </tr>
 <tr>
  <td width=224 valign=top style='width:167.7pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>VerticallyScrollableProperty Property-changed
  Event</span></p>
  </td>
  <td width=299 valign=top style='width:224.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Not applicable. Timecard does not support scrolling.</p>
  </td>
 </tr>
 <tr>
  <td width=224 valign=top style='width:167.7pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>VerticalViewSizeProperty Property-changed
  Event</span></p>
  </td>
  <td width=299 valign=top style='width:224.3pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Not applicable. Timecard does not support scrolling.</p>
  </td>
 </tr>
 <tr>
  <td width=224 valign=top style='width:167.7pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText><span class=InlineCode>InvalidatedEvent </span></p>
  </td>
  <td width=299 valign=top style='width:224.3pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText>Yes</p>
  </td>
 </tr>
</table>

<h1>Framework-Dependent Decisions</h1>

<p class=MsoNormal>This chapter focused on designing your custom controls to
meet the UIA Specification, but the design stage does not stop here. Three
areas that are framework-dependent that must be determined (if they have not
already been determined) are:</p>

<p class=NumList>                 1.  Your framework’s requirements for
providing programmatic access to the controls, whether provided by the
framework or custom. While standard controls of the UI framework may support
the basics for programmatic access, the flexibility for accessibility can be
limited to modifications.</p>

<p class=NumList>                 2.  Determine how UI elements will handle
keyboard focus. Controls that are actionable, such as buttons and links, should
receive keyboard focus. For Win32 common controls, use the control styles in
the resource file, and handle the system focus as needed.</p>

<p class=NumList>                 3.  Ensure that your UI adheres to other
accessibility requirements discussed in the introduction of this book, such as
high contrast, high dpi, and other system settings.</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>Once you have addressed these three areas, you are ready to
take your designs into the implementation stage.</p>

<p class=SeeAlso>Go further: For more information on adhering to accessibility
requirements other than programmatic access, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h1>Implementing Your Native UIA Solution</h1>

<p class=MsoNormal>Your next challenge is determining how to implement the
native solutions you have designed over the last two chapters. How does your
design actually map out to its implementation? How do you take the requirements
in your implementation table and actually use the UIA framework to implement
it? Because implementation is framework-dependent, this book does not provide
specific implementation details, but depending on the complexity of your
control, you do need to implement one or more of the UIA interfaces. These
interfaces allow you to implement the Control Patterns, Properties, Methods,
and Events that you specified in your implementation table.</p>

<p class=SeeAlso>Go further: For more information on how to implement your
solution, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h1>Rounding Up Native Solutions</h1>

<p class=MsoNormal>As you design a logical hierarchy, you can see which
controls are provided by the UI frame­work and which are not. For controls that
are not provided by the framework, you must create a native accessibility
solution to implement those controls. In this chapter, we walked through the
process of designing your implementation for those controls in UIA:</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>For custom controls that map to a UIA Control Type, refer to the
UI Automation Specifications and list all the Patterns and Properties
necessary. If your control exhibits additional functionality other than those
required by the UIA Specifications, then you must also include those Patterns
and Properties in your table.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>For custom controls that do not map to a UIA Control Type, you
must identify and map the functionality to Control Patterns or Properties that
best exhibits the functionality of your custom control and list those
requirements in your implementation table.</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>Methods and Events are required for completing your UIA
implementation. Although you still need to specify how you will implement
Methods and Events, the UIA Specifications detail which Methods and Events are
required for the specific Control Patterns and Properties.</p>

<p class=MsoNormal>Implementation for each custom control varies, so after
designing the native solutions for your custom controls, refer to the MSDN Web
site on how to take your custom controls from the design stage to actually
implementing them in your product. The next chapter provides a more in-depth
discussion about testing the programmatic access and keyboard access of your
implementation and delivery of your product.</p>

<p class=SeeAlso>Go further: For common frameworks and their accessibility
guidelines, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<p class=MsoNormal></p>

<p class=ChNumber>Chapter 4</p>

<p class=ChTitle>Testing and Delivery</p>

<p class=MsoNormal>In our final chapter, we end with a discussion on testing
the programmatic access of the UI and the keyboard access in your product.
Testing for these two things can be done through a combination of software test
tools, manual testing, and user scenario testing with assistive technology (AT)
devices. In addition, we discuss documenting your implementation for deliv­ery
and summarize our recommendation for incorporating accessibility into your
product in seven steps.</p>

<p class=MsoNormal>When it comes time to test your product, you want to focus
on the most critical requirements or scenarios for your product first. For
software that is complex, focus on the parts that are most critical to your
scenarios or are most commonly used (for example, the Start menu in Windows).
Once your core scenarios have been tested and verified, you can move onto any
secondary requirements or scenarios.</p>

<p class=MsoNormal>Programmatic access and keyboard access are two critical
requirements for accessibility. Without them, many different users of AT (such
as screen reader and on-screen keyboard users) would be affected and would not
be able to use your product at all.</p>

<p class=MsoNormal>To test programmatic access that is designed using UI
Automation (UIA) on a Windows platform, Microsoft offers two types of test
tools: (1) investigation tools and (2) a UIA testing framework called UIA
Verify. Investigation tools are manual, ad-hoc test tools that allow you to
quickly check the UI’s underlying structure and properties. Investigation tools
can also help you check the implementation of your logical hierarchy as well.
UIA Verify, on the other hand, provides automated testing, where the framework
has the ability to integrate into the test code and conduct regular, automated
testing or spot checks of UIA test scenarios. The goal of the test framework is
to promote consistent implementation across products and platforms (even those
other than the Windows operating system). Because the source code is available
for the framework, the code can be ported or enhanced for more advanced testing
scenarios.</p>

<p class=MsoNormal>In addition to verifying the programmatic access, some of
these tools can help you assess the implementation of your keyboard access,
but, as you will learn, the tools can only go so far. So, it is important to
manually verify that all of your scenarios can be accomplished with only the
keyboard.</p>

<p class=MsoNormal>Although test tools can aid in confirming that your
implementation meets the UIA Specifi­cation, ultimately, your end user’s
experience is what’s vital to your product’s success. Not only should the “nuts
and bolts” of your application work and meet your users’ needs as expected, but
it should also be easy and intuitive for them to use, as well. In addition to
obtaining feedback from a public beta release, observe users’ overall
experiences with your product through usability testing. You can also do heuristic
evaluations internally by having employees within your company try your product
and give you feedback. Because acces­sibility shares many requirements and best
practices with many usability and UI design guidelines, you can focus on
important user scenarios that impact many more users than you might have
thought.</p>

<h1>Accessibility Testing and Test Automation</h1>

<p class=MsoNormal>While programmatic access to the UI is crucial for making
software accessible today, the implementation for it is often reused by
automated test tools and ATs in many different ways. Screen readers, for
instance, announce desktop actions and keyboard input in speech recog­nition
programs. On the other hand, automated test tools would use the accessibility
API support for hit testing. Because of the diverse use of the accessibility
API support, conflicts of interest can occur.</p>

<p class=MsoNormal>Before UIA, test automation used Microsoft Active
Accessibility (MSAA), properties, such as <span class=InlineCode><span
style='font-size:8.5pt'>accName</span></span>, as unique and persistent
identifiers to keep track of UI elements on-screen. The <span class=InlineCode><span
style='font-size:8.5pt'>Name</span></span> property was never intended to be
used as a unique identifier among siblings, and using it as such can lead to
unwanted results, polluting the accessibility object model by rendering a
non-“human readable” string. The same rule applies to invisible or layout
elements in the accessibility objects. The <span class=InlineCode><span
style='font-size:8.5pt'>Name</span></span> property should never be given a
value of “MyAppHost,” for instance, even if it is a layout object that is
invisible to the users, or screen reader users may hear “MyAppHost” somewhere
in your application. With UIA, a few new properties such as <span
class=InlineCode><span style='font-size:8.5pt'>AutomationId</span></span>, <span
class=InlineCode><span style='font-size:8.5pt'>RuntimeId</span></span>, and <span
class=InlineCode><span style='font-size:8.5pt'>ClassName</span></span> are
introduced to help identify objects among siblings.</p>

<p class=SeeAlso>Go further: For UIA Properties and definitions go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h1>Tools</h1>

<p class=MsoNormal>For programmatic and keyboard requirements, there is no one
tool that can verify your full implementation. Investigation tools and the UIA
Verify framework are complementary. Investigation tools will allow you to
manually check your implementation, while UIA Verify is automated and apply
heuristics to help you verify that your implementation meets UIA Specification
requirements. For keyboard access, manual testing should also be used to ensure
access works for all navigation and user scenarios.</p>

<p class=MsoNormal>Depending on your control framework, there may be a variety
of tools you may need to use for testing. The tools that we introduce are
available on the Windows platform and can test UIA implementations. Regardless
of the tools you use, remember that tools are only indicators your
implementation may be wrong (or right). Try to use a variety of tools to verify
your implementation and, when possible, find users of ATs, such as screen
readers, to use your UI.</p>

<h2>Investigation Tools</h2>

<p class=MsoNormal>Investigation tools are manual test tools that allow you to
quickly assess the UI for incorrect programmatic access implementations.</p>

<p class=MsoNormal>Inspect Objects (Inspect) and UI Spy are two investigation
tools in the Microsoft Windows Software Development Kit (SDK) that provide a
view of the programmatic implementation for the UI that uses a Windows
Automation API, such as MSAA or UIA. They allow you to view the UI’s underlying
structure and properties, as well as interact with the elements, but they will
only show you what was implemented and not indicate where your implementation
is incor­rect. As a result, you must understand the UI and all aspects of the
accessibility framework that your product is built on, as well the output of
results coming from the tool. Table 4-1 lists the pros and cons of these tools.</p>

<p class=TableNum-Title>TABLE 4-1<span style='font-family:"Cambria Math",serif'>&#8194;</span>Pros
and cons of investigation tools</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <tr>
  <td width=294 valign=top style='width:220.15pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>Pros</p>
  </td>
  <td width=294 valign=top style='width:220.15pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:6.0pt'>Cons</p>
  </td>
 </tr>
 <tr>
  <td width=294 valign=top style='width:220.15pt;border:none;border-top:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:11.0pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span>Allows you to quickly investigate a UI.</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:11.0pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span>Provides
  a raw view of the programmatic access in your product.</p>
  <p class=ListEnd style='margin-right:2.9pt'>&nbsp;</p>
  </td>
  <td width=294 valign=top style='width:220.15pt;border:none;border-top:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:11.0pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span>You must
  understand the UI as well as output results from the tool.</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:11.0pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span>Does
  not point out if there are problems with your implementation; you must rely
  on your knowledge to resolve any issues.</p>
  <p class=ListEnd style='margin-right:2.9pt'>&nbsp;</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>UI Spy also offers logging for UIA Events by types, as well
as by scope. For instance, UI Spy can listen for <span class=InlineCode><span
style='font-size:8.5pt'>StructureChanged</span></span> UIA Events coming from a
specific dialog box.</p>

<p class=MsoNormal>Accessible Event Watcher (AccEvent) is another investigation
tool that will help you to assess your programmatic access. AccEvent is
included in the MSAA SDK and allows you to review the WinEvents raised by the
Windows Automation API.</p>

<p class=SeeAlso>Go further: For the Microsoft Windows SDK, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h2>UIA Verify Test Automation Framework</h2>

<p class=MsoNormal>Intended to verify the implementation of the Windows
Automation API, UIA Verify is a suite of test libraries that will help you test
your UIA Provider implementations.</p>

<p class=MsoNormal>Using UIA Verify, you can write an automated test driver
that runs a set of UIA test scenarios per the UIA Specification. You can also
use the visual, front-end UI to run spot tests on built-in test scenarios. The
tool will report the test results in XML or HTML format, and you can use that
as a source for investigation requirements. Not all errors are obvious, and
some errors suggest checking the validity of the problem. For example, because
we rarely see a button control that can be accessible without a name, the test
will report an error if your button control is left without a <span
class=InlineCode><span style='font-size:8.5pt'>Name</span></span> Property.</p>

<p class=MsoNormal>When UIA Verify alerts you to an error, use an investigation
tool to look at the issue. Does the error seem reproducible? Visual UIA Verify,
the front-end GUI of UIA Verify, can be handy to re-run the test with specific
UI elements on screen. For some types of issues, you may need to use other
investigation tools, such as Inspect or AccEvent, to keep track of object
information at run time in greater details.</p>

<p class=MsoNormal>UIA Verify provides bugs about your accessible
implementation, but their results are not conclusive. For instance, suppose you
had a button visually labeled “OK.” If you set its <span class=InlineCode><span
style='font-size:8.5pt'>Name</span></span> property to “Cancel,” UIA Verify
would only recognize that a button should have a programmatic name, but it
would not be able to verify that the name is correct. In this case, UIA Verify
would not raise an error. Final confirmation that the accessibility name
matched the exact UI text on-screen would have to be done visually (optical
character recognition technology may help to resolve such issues in the future,
but it is still difficult to get to 100 percent accuracy as of today). Table
4-2 lists the pros and cons of UIA Verify.</p>

<b><span style='font-size:9.5pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span></b>

<p class=TableNum-Title>TABLE 4-2<span style='font-family:"Cambria Math",serif'>&#8194;</span>Pros
and cons of the UIA Verify Test Automation Framework</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <tr>
  <td width=294 valign=top style='width:220.15pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:2.9pt'>Pros</p>
  </td>
  <td width=294 valign=top style='width:220.15pt;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableHead style='margin-right:6.0pt'>Cons</p>
  </td>
 </tr>
 <tr>
  <td width=294 valign=top style='width:220.15pt;border:none;border-top:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:11.0pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span>Can identify problems in your implementation.</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:11.0pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span>Provides
  recommendations on how to them.</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:11.0pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span>Can
  quickly give a rough idea on how well your implementation is working.</p>
  <p class=ListEnd style='margin-right:2.9pt'>&nbsp;</p>
  </td>
  <td width=294 valign=top style='width:220.15pt;border:none;border-top:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  2.0pt;margin-left:11.0pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span>Cannot
  fully review your implementation.</p>
  <p class=TableBullList style='margin-top:0in;margin-right:2.9pt;margin-bottom:
  0in;margin-left:11.0pt;text-indent:-9.0pt'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span>Errors
  indicated by UIA Verify are not conclusive.</p>
  <p class=TableBullList style='margin-left:11.0pt;text-indent:0in'>&nbsp;</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Table 4-3 provides a summary and resource links for the
investigation and verification <br>
test tools mentioned for testing the programmatic access and keyboard access of
Win32 applications.</p>

<p class=TableNum-Title>TABLE 4-3<span style='font-family:"Cambria Math",serif'>&#8194;</span>Tools
for Testing Programmatic and Keyboard Access</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width=523
 style='margin-left:43.0pt;border-collapse:collapse'>
 <thead>
  <tr>
   <td width=151 valign=top style='width:113.4pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead style='margin-right:2.9pt'>Tool</p>
   </td>
   <td width=371 valign=top style='width:278.6pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead style='margin-right:6.0pt'>Description</p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width=151 valign=top style='width:113.4pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Inspect
  Objects (Inspect)</p>
  </td>
  <td width=371 valign=top style='width:278.6pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>Investigation tool that allows
  you to examine the element’s patterns and properties as well as navigate the
  tree. Inspect allows you to interact with the elements through the
  accessibility APIs and navigate the elements by keyboard, mouse, or
  navigation methods provided by the framework.</p>
  </td>
 </tr>
 <tr>
  <td width=151 valign=top style='width:113.4pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Accessible
  Event Watcher (AccEvent)</p>
  </td>
  <td width=371 valign=top style='width:278.6pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>Investigation tool that allows
  you to review events raised by the Windows Automation API. You can scope the
  events you want to listen to, the properties that should be included with
  those events, and which window to listen to for the events.</p>
  </td>
 </tr>
 <tr>
  <td width=151 valign=top style='width:113.4pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>UI
  Spy</p>
  </td>
  <td width=371 valign=top style='width:278.6pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>Investigation tool that allows
  you to examine the UIA Tree, Elements, and Events. UI Spy enables developers
  and testers to view and interact with the user interface (UI) elements of an
  application. By viewing the application's UI hierarchical structure, Property
  values, and raised Events, developers and testers can verify that the UI they
  are creating is programmatically accessible to assistive technology devices
  such as screen readers.</p>
  </td>
 </tr>
 <tr>
  <td width=151 valign=top style='width:113.4pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>UI
  Automation Verify (UIA Verify) Test Automation Framework</p>
  </td>
  <td width=371 valign=top style='width:278.6pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>Verification tool that checks your implementation at run
  time to confirm whether the UIA Provider is implementing correct tree, Patterns,
  and Properties. The UIA Verify facilitates manual and automated testing of
  the UIA Providers.</p>
  </td>
 </tr>
</table>

<p class=SeeAlso>Go further: For more information and to download test tools,
go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h1>Keyboard</h1>

<p class=MsoNormal>Because all applications must be navigable using only a
keyboard, be sure to test your keyboard access. Try unplugging your mouse, and
use only a keyboard to access all the functionality of your software. Ensure
that the navigation via keyboard follows the order of controls that need
keyboard focus.</p>

<p class=SeeAlso>Go further: For more information on testing keyboard
accessibility and guidelines on designing keyboard access, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h1>Users and AT Devices</h1>

<p class=MsoNormal>Throughout the development cycle, it is important to keep
your users in mind. The earlier you can get feedback from actual users on your
product, the less costly it is to incorporate their changes into your product.
Although you may supplement your testing with third-party AT programs to test
your work, beware that ATs can be complex, and you can very easily mis­interpret
the information you receive from them. So, it’s a good idea to get users of AT
to interact with your application by using the AT devices to (1) alert you to
problems that your test tools might have missed and (2) to assess your users’
experience with your product. If an issue does arise when using AT programs,
try to isolate the scenario, and analyze the cause using the test tools mentioned
in this chapter.</p>

<h1>Delivery</h1>

<p class=MsoNormal>Once your product has gone through testing, and necessary
corrections have been made, it’s time to deliver your product. Make sure that
your implementation is properly documented and that the documentation is
available in accessible formats. In your documentation, be sure to address the
following questions:</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>How did you address your users’ needs? What did your programmatic
access provide?</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>How do you use your software with a keyboard? Do you expose a new
UI that may be difficult to learn without the ability to see the screen? Your
users may not use a mouse, so describing how to navigate a new UI by keyboard
is very valuable information.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>What is the structure and implementation of your design? While
end-users may not necessarily be interested in the technical details, AT
vendors would find your specification very useful for optimizing the user
experience.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>What did you not implement? Explain what was not implemented and
what is not supported in your accessibility documentation. Document any
workarounds if available.</p>

<p class=ListEnd>&nbsp;</p>

<p class=SeeAlso>Go further: For examples on declarations of conformance, go to
http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h1>Conclusion: 7 Steps to a Better Computing World</h1>

<p class=MsoNormal>We now leave you with seven steps that we recommend for
incorporating accessibility into your software development lifecycle:</p>

<p class=NumList>                 1.  Decide if accessibility is an important
aspect to your software. If it is, learn and appreciate how it enables real
users to live, work, and play, to help guide your design.</p>

<p class=NumList>                 2.  As you design solutions for your
requirements, use controls provided by your framework (standard controls) as
much as possible, and avoid any unnecessary effort and costs of custom
controls.</p>

<p class=NumList>                 3.  Design a logical hierarchy for your
product, noting where the standard controls, any custom controls, and keyboard
focus are in the UI.</p>

<p class=NumList>                 4.  Design basic accessibility system
settings (such as keyboard navigation, high contrast, and high dpi) into your
product, according to your framework’s accessibility requirements.</p>

<p class=NumList>                 5.  Implement your design, using the
Microsoft Accessibility Developer Center and your framework’s accessibility
specification as a reference point.</p>

<p class=NumList>                 6.  Test your product to ensure that end
users will be able to take advantage of the accessibility techniques
implemented in it.</p>

<p class=NumList>                 7.  Deliver your finished product and
document your accessible implementation.</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>It’s very easy to get lost in the details of providing
accessibility in your software, but with UIA, we believe that you can create
flexible and intuitive products that support accessibility. With the number of
accessible technology users expected to rise to 70 million by 2010, up from 57
million in 2003 (Forrester 2004), and with more than half of computer users
today that could benefit from accessible technology (Forrester 2003), creating
accessible products makes good business sense and is the right thing to do. Not
only are you addressing the needs of those who need it, you are working to make
the experience for all of your users better.</p>

<p class=SeeAlso>Go further: For more information on developing accessible
products and to share ideas with other accessibility developers, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<h1>References</h1>

<p class=MsoNormal style='margin-left:.75in;text-indent:-15.1pt'>Forrester
Research, Inc. 2004. “Accessible Technology in Computing: Examining Awareness, Use,
and Future Potential.” Cambridge, MA. 41.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-15.1pt'>——.
2003. “The Wide Range of Abilities and Its Impact on Technology.” Cambridge,
MA. 10.</p>

</div>

<span style='font-size:9.5pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span>

<div class=WordSection5>

<p class=MsoNormal style='margin-left:.75in;text-indent:-15.1pt'>&nbsp;</p>

<p class=ChNumber>Appendix A</p>

<p class=ChTitle><a name="msaa.windows_automation_API_overview"></a><a
name="microsoft_active_accessibility_and_ui_au"></a>Windows Automation API:
Overview</p>

<p class=MsoNormal>Source: “Windows Automation API SDK” from the Microsoft
Developer Network (MSDN) <br>
Web site. To view this content online, go to <i>http://msdn.microsoft.com/en-us/library/<br>
aa163327.aspx</i>.</p>

<p class=MsoNormal>Windows offers two application programming interface (API)
specifications for user interface accessibility and software test automation:
Microsoft Active Accessibility, and User Interface Automation (UI Automation).
Microsoft Active Accessibility is the legacy API that was intro­duced in
Windows 95 as a platform add-in. UI Automation is a Windows implementation of
the User Interface Automation specification.</p>

<p class=MsoNormal>This section provides a high-level overview of Microsoft
Windows Automation API 3.0, which includes the legacy Microsoft Active
Accessibility API and the new UI Automation API. The overview highlights the
similarities and differences between Microsoft Active Accessibility and UI
Automation, describes the components and features that enable the two
technologies to work together, and provides guidelines for choosing which
technology to implement.</p>

<p class=MsoNormal>This section includes the following topics:</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Microsoft Active Accessibility and UI Automation Compared</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Architecture and Interoperability</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Limitations of Microsoft Active Accessibility</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>UI Automation Specification</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>The IAccessibleEX Interface</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Choosing Microsoft Active Accessibility, UI Automation, or
IAccessibleEx</p>

<p class=BullList>&nbsp;</p>

<p class=BullList>&nbsp;</p>

<h1>Microsoft Active Accessibility and UI Automation Compared</h1>

<p class=MsoNormal>Although Microsoft Active Accessibility and Microsoft UI
Automation are two different technologies, the basic design principles are
similar. Both expose the UI object model as a hierarchical tree, rooted at the
desktop. Microsoft Active Accessibility represents individual <br>
UI elements as <i>accessible objects</i>, and UI Automation represents them as <i>automation
elements</i>. Both refer to the accessibility tool or software automation
program as the <i>client</i>. However, Microsoft Active Accessibility refers to
the application or control offering the UI for accessi­bility as the <i>server</i>,
while UI Automation refers to this as the <i>provider</i>.</p>

<p class=MsoNormal>Microsoft Active Accessibility offers a single COM interface
with a fixed, small set of properties. UI Automation offers a richer set of
properties, as well as a set of extended interfaces called Control Patterns to
manipulate accessible objects in ways Microsoft Active Accessibility cannot.</p>

<p class=MsoNormal>While UI Automation previously had both managed and
unmanaged APIs for providers, the original release had no unmanaged interfaces
for clients. Now, UI Automation clients can be written entirely in unmanaged
code.</p>

<p class=MsoNormal>The latest framework also provides support for transitioning
from Microsoft Active Accessibility servers to UI Automation providers. The
IAccessibleEx interface specification enables support for specific UI
Automation Patterns and Properties to be added to legacy Microsoft Active
Accessibility servers without needing to rewrite the entire implementation. The
specification also allows in-process Microsoft Active Accessibility clients to
access UI Automation provider interfaces directly, rather than through UI
Automation client interfaces.</p>

<p class=MsoNormal>The ecosystem of Windows automation technologies, called the
Windows Automation API, includes classic Microsoft Active Accessibility and
Windows implementations of the UI Auto­mation specification. The UI Automation
specification is implemented on many Microsoft products, including
Windows&nbsp;7, Windows&nbsp;Vista, Windows Server&nbsp;2008, Windows
Presentation Foundation (WPF), and Microsoft Silverlight.</p>

<h1><a name="msaa.architecture_and_interoperability"></a>Architecture and
Interoperability</h1>

<p class=MsoNormal>This section briefly describes the architecture of the
Windows Automation technologies Microsoft Active Accessibility and Microsoft UI
Automation, and the components that allow interoperability between applications
based on the two different technologies.</p>

<b><span style='font-size:14.0pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span></b>

<h2><a name="microsoft_active_accessibility_architect"></a>Microsoft Active
Accessibility Architecture</h2>

<p class=MsoNormal>Microsoft Active Accessibility exposes basic information
about custom controls such as control name, location on screen, and type of
control, as well as state information such as visibility and enabled/disabled
status. The UI is represented as a hierarchy of accessible objects; changes and
actions are represented as WinEvents.</p>

<p class=MsoNormal>Microsoft Active Accessibility consists of the following
components:</p>

<p class=Term-DefinitionBulleted><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>Accessible object</b><span style='font-family:"Cambria Math",serif'>&#8195;</span>A
logical UI element (such as a button) that is represented by an IAccessible COM
interface and an integer child identifier (ChildID).</p>

<p class=Term-DefinitionBulleted><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>WinEvents</b><span style='font-family:"Cambria Math",serif'>&#8195;</span>An
event system that enables servers to notify clients when an accessible object
changes.</p>

<p class=Term-DefinitionBulleted><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>OLEACC.dll</b><span style='font-family:"Cambria Math",serif'>&#8195;</span>The
run-time, dynamic-link library that provides the Microsoft Active Accessibility
API and the accessibility system framework. OLEACC implements proxy objects that
provide default accessibility information for standard UI elements, including
USER controls, USER menus, and common controls. </p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>For Microsoft Active Accessibility, the system component of
the accessibility framework (OLEACC) helps the communication between
accessibility tools and applications, as the following illustration shows.</p>

<p class=Fig-Graphic><img width=438 height=174 id="Picture 5"
src="Engineering%20for%20Accessibility_files/image019.gif"
alt="Diagram of the Microsoft Active Accessibility Architecture"></p>

<p class=MsoNormal>The applications (Microsoft Active Accessibility servers)
provide UI accessibility information to tools (Microsoft Active Accessibility
clients), which interact with the UI on behalf of users. The code boundary is
both a programmatic and a process boundary. </p>

<p class=MsoNormal>&nbsp;</p>

<h1><a name="ui_automation_architecture"></a>UI Automation Architecture</h1>

<p class=MsoNormal>With UI Automation, the UI Automation Core component
(UIAutomationCore.dll) is loaded into both the accessibility tools' and
applications' processes. The core component manages cross-process
communication, provides higher level services such as searching for elements by
Property values, and enables bulk fetching or caching of Properties, which
provides better performance than the Microsoft Active Accessibility
implementation.</p>

<p class=MsoNormal>UI Automation includes proxy objects that provide UI
information about standard UI elements such as USER controls, USER menus, and
common controls. It also includes proxies that enable UI Automation clients to
get UI information from Microsoft Active Accessibility servers.</p>

<p class=MsoNormal>The following illustration shows the relationships among the
various components in UI Automation providers (Accessibility Tools) and clients
(Applications).</p>

<p class=Fig-Graphic><img width=507 height=257 id="Picture 4"
src="Engineering%20for%20Accessibility_files/image020.gif"
alt="Diagram of the UI Automation Architecture"><span
style='font-size:0pt;border:none black 1.0pt;padding:0in;background:black;
layout-grid-mode:line'> </span></p>

<h2><a name="interoperability_between_microsoft_activ"></a>Interoperability
Between Microsoft Active Accessibility-Based Applications and UI
Automation-Based Applications</h2>

<p class=MsoNormal>The UI Automation to Microsoft Active Accessibility Bridge
enables Microsoft Active Accessibility clients to access UI Automation
providers by converting the UI Automation object model to a Microsoft Active
Accessibility object model. The following illustration <br>
shows the role of the UI Automation-to-Microsoft Active Accessibility Bridge.</p>

<p class=Fig-Graphic><img width=476 height=241 id="Picture 3"
src="Engineering%20for%20Accessibility_files/image021.gif"
alt="Diagram of the UI Automation-to-Microsoft Active Accessibility Bridge"></p>

<p class=MsoNormal>Similarly, the Microsoft Active Accessibility-to-UI
Automation Proxy translates Microsoft Active Accessibility-based server object
models for UI Automation clients. The following illustration shows the role of
the Microsoft Active Accessibility-to-UI Automation Proxy.</p>

<p class=Fig-Graphic><img width=507 height=257 id="Picture 2"
src="Engineering%20for%20Accessibility_files/image022.gif"
alt="Diagram of the Microsoft Active Accessibility-to-UI Automation Proxy"></p>

<p class=MsoNormal>By using the IAccessibleEx interface, you can improve
existing Microsoft Active Accessibility Server implementations by adding only
required UI Automation object model information. The Microsoft Active
Accessibility-to-UI Automation Proxy takes care of incorporating the added UI Automation
object model. For more information, see the section of this appendix titled “The
IAccessibleEx Interface.”</p>

<h1><a name="msaa.limitations_of_microsoft_active_acc"></a>Limitations of
Microsoft Active Accessibility</h1>

<p class=MsoNormal>Microsoft designed the Microsoft Active Accessibility object
model about the same time as Windows 95 released. The model is based on “roles”
defined a decade ago, and you cannot support new UI behaviors or merge two or
more roles together. There is no text object model, for example, to help
assistive technologies deal with complex Web content. UI Automation overcomes
these limitations by introducing Control Patterns that enable objects to
support more than one role, and the UI Automation Text Control Pattern offers a
full-fledged text object model.</p>

<p class=MsoNormal>Another limitation involves navigating the object model.
Microsoft Active Accessibility represents the UI as a hierarchy of accessible
objects. Clients navigate from one accessible object to another using
interfaces and methods available from the accessible object. Servers can expose
the children of an accessible object with properties of the IAccessible
interface, or with the standard IEnumVARIANT COM interface. Clients, however,
must be able to deal with both approaches for any server. This ambiguity means
extra work for client implementers, and broken accessible object models for
server implementers.</p>

<p class=MsoNormal>UI Automation represents the UI as a hierarchical tree of Automation
Elements, and provides a single interface for navigating the tree. Clients can
customize the view of elements in the tree by scoping and filtering.</p>

<p class=MsoNormal>Finally, Microsoft Active Accessibility properties and
functions cannot be extended without breaking or changing the IAccessible COM
interface specification. The result is that new control behavior cannot be
exposed through the object model; it tends to be static.</p>

<p class=MsoNormal>With UI Automation, as new UI elements are created,
application developers can introduce custom Properties, Control Patterns, and Events
to describe the new elements.</p>

<h1><a name="msaa.ui_automation_specification"></a>UI Automation Specification</h1>

<p class=MsoNormal>The UI Automation specification provides flexible
programmatic access to UI elements on the Windows desktop, enabling assistive
technology products such as screen readers to provide information about the UI
to end users and to manipulate the UI by means other than stan­dard input. The
specification can be supported across platforms other than Windows.</p>

<span style='font-size:9.5pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal>The implementation of UI Automation specification in Windows
is also called UI Automation (UI Automation). UI Automation is broader in scope
than just an interface definition. UI Automation provides:</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>An object model and functions that make it easy for client
applications to receive events, retrieve property values, and manipulate UI
elements.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>A core infrastructure for finding and fetching across process
boundaries.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>A set of interfaces for providers to express the tree structure,
general properties, and functionality of UI elements.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>A ”Control Type“ property that allows clients and providers to
clearly indicate the common properties, functionality, and structure of a UI
object.</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>UI Automation improves on Microsoft Active Accessibility by:</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Enabling efficient out-of-process clients, while continuing to
allow in-process access.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Exposing more information about the UI in a way that allows
clients to be out-of-process.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Coexisting with and leveraging Microsoft Active Accessibility
without inheriting its limitations. For more information, see the section of
this appendix titled “Limitations of Microsoft Active Accessibility.”</p>

<p class=ListEnd>&nbsp;</p>

<p class=MsoNormal>The implementation of the UI Automation specification in
Windows features COM-based interfaces and managed interfaces.</p>

<h2><a name="ui_automation_elements"></a>UI Automation Elements</h2>

<p class=MsoNormal>UI Automation exposes every piece of the UI to client
applications as an <i>automation element</i>. Providers supply Property values
for each element. Elements are exposed as a tree structure, with the desktop as
the root element.</p>

<p class=MsoNormal>Automation Elements expose common properties of the UI
elements they represent. One of these properties is the Control Type, which
describes its basic appearance and functionality (for example, a button or a
check box). </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<h2><a name="ui_automation_tree"></a>UI Automation Tree</h2>

<p class=MsoNormal>The UI Automation tree represents the entire UI: the root
element is the current desktop, and child elements are application windows.
Each of these child elements can contain elements representing menus, buttons,
toolbars, and so on. These elements in turn can contain elements like list
items, as the following illustration shows.</p>

<p class=Fig-Graphic><img width=348 height=397 id="Picture 1"
src="Engineering%20for%20Accessibility_files/image023.gif"
alt="Illustration of the Run dialog box in Windows and its UI Automation Tree structure"></p>

<p class=MsoNormal>Be aware that the order of the siblings in the UI Automation
tree is quite important. Objects that are next to each other visually should
also be next to each other in the UI Automation tree.</p>

<p class=MsoNormal>UI Automation providers for a particular control support
navigation among the child elements of that control. However, providers are not
concerned with navigation between these control sub-trees. This is managed by
the UI Automation core, using information from the default window providers.</p>

<p class=MsoNormal>To help clients process UI information more effectively, the
framework supports alternative views of the automation tree: raw view, control
view, and content view. As the following table shows, the type of filtering
determines the views, and the client defines the scope of a view.</p>

<br clear=all style='page-break-before:always'>

<p class=MsoNormal></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width="88%"
 style='width:88.1%;margin-left:43.0pt;border-collapse:collapse'>
 <tr style='height:16.35pt'>
  <td width="22%" valign=top style='width:22.42%;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt;height:16.35pt'>
  <p class=TableHead style='margin-right:2.9pt'>Automation
  Tree</p>
  </td>
  <td width="77%" valign=top style='width:77.58%;background:#D9D9D9;padding:
  2.0pt 3.0pt 2.0pt 3.0pt;height:16.35pt'>
  <p class=TableHead style='margin-right:2.9pt'>Description</p>
  </td>
 </tr>
 <tr style='height:15.8pt'>
  <td width="22%" valign=top style='width:22.42%;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt;height:15.8pt'>
  <p class=TableText style='margin-right:2.9pt'>Raw
  view</p>
  </td>
  <td width="77%" valign=top style='width:77.58%;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt;height:15.8pt'>
  <p class=TableText style='margin-right:6.0pt'>The full tree of Automation Element
  objects for which the desktop is the root.</p>
  </td>
 </tr>
 <tr style='height:15.8pt'>
  <td width="22%" valign=top style='width:22.42%;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt;height:15.8pt'>
  <p class=TableText style='margin-right:2.9pt'>Control
  view</p>
  </td>
  <td width="77%" valign=top style='width:77.58%;border:none;border-bottom:
  solid silver 1.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt;height:15.8pt'>
  <p class=TableText style='margin-right:6.0pt'>A subset of the raw view that
  closely maps to the UI structure as the user perceives it.</p>
  </td>
 </tr>
 <tr style='height:28.05pt'>
  <td width="22%" valign=top style='width:22.42%;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt;
  height:28.05pt'>
  <p class=TableText style='margin-right:2.9pt'>Content
  view</p>
  </td>
  <td width="77%" valign=top style='width:77.58%;border:none;padding:2.0pt 3.0pt 2.0pt 3.0pt;
  height:28.05pt'>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>A subset of the control view that contains content most
  relevant to the user, like the values in a drop-down combo box.</p>
  </td>
 </tr>
</table>

<h2><a name="ui_automation_properties"></a>UI Automation Properties</h2>

<p class=MsoNormal>The UI Automation specification defines two kinds of
properties: Automation Element Properties and Control Pattern Properties.
Automation Element Properties apply to most controls, providing fundamental
information about the element, such as its name. Control Pattern Properties
apply to Control Patterns, which are described next.</p>

<p class=MsoNormal>Unlike with Microsoft Active Accessibility, every UI
Automation Property is identified by a GUID and a programmatic name, which
makes new Properties easier to introduce.</p>

<h2><a name="ui_automation_control_patterns"></a>UI Automation Control Patterns</h2>

<p class=MsoNormal>A Control Pattern describes a particular aspect of the
functionality of an Automation Element. For example, a simple ”click-able“
control like a button or hyperlink should support the Invoke Control Pattern to
represent the ”click“ action.</p>

<p class=MsoNormal>Each Control Pattern is a canonical representation of
possible UI features and functions. The current implementation of UI Automation
defines 22 Control Patterns. The Windows Auto­mation API can also support
custom Control Patterns. Unlike Microsoft Active Accessibility role or state
properties, one Automation Element can support multiple UI Automation Control
Patterns.</p>

<h2><a name="ui_automation_control_types"></a>UI Automation Control Types</h2>

<p class=MsoNormal>A Control Type is an Automation Element Property that
specifies a well-known control that the element represents. Currently, UI
Automation defines 38 Control Types, including Button, CheckBox, ComboBox,
DataGrid, Document, Hyperlink, Image, ToolTip, Tree, and Window.</p>

<p class=MsoNormal>Before you can assign a Control Type to an element, the
element needs to meet certain con­ditions, including a particular automation
tree structure, Property values, Control Patterns, and Events. However, you are
not limited to these. You can extend a control with custom Patterns and Properties,
as well as with the pre-defined ones.</p>

<p class=MsoNormal>The total number of pre-defined Control Types is
significantly lower than Microsoft Active Accessibility accRole definitions,
because UI Automation Control Types can be combined to express a larger set of
features while Microsoft Active Accessibility roles cannot.</p>

<h2><a name="ui_automation_events"></a>UI Automation Events</h2>

<p class=MsoNormal>UI Automation Events notify applications of changes to, and
actions taken with Automation Elements. There are four different types of UI
Automation Events, and they do not necessarily mean that the visual state of
the UI has changed. The UI Automation Event model is indepen­dent of the
WinEvent framework in Windows, although the Windows Automation API makes UI
Automation Events interoperable with the Microsoft Active Accessibility
framework.</p>

<h1><a name="msaa.the_iaccessibleex_interface"></a>The IAccessibleEx Interface</h1>

<p class=MsoNormal>The IAccessibleEx interface enables existing applications or
UI libraries to extend their Microsoft Active Accessibility object model to
support UI Automation without rewriting the implementation from scratch. With
IAccessibleEx, you can implement only the additional <br>
UI Automation Properties and Control Patterns needed to fully describe the UI
and its functionality.</p>

<p class=MsoNormal>Because the Microsoft Active Accessibility-to-UI Automation
Proxy translates the object models of IAccessibleEx-enabled Microsoft Active
Accessibility servers as UI Automation object models, UI Automation clients do
not need to do any extra work. The IAccessibleEx interface can also enable
in-process Microsoft Active Accessibility clients to interact directly with UI
Automation providers.</p>

<h1><a name="msaa.choosing_microsoft_active_accessibi"></a>Choosing Microsoft
Active Accessibility, UI Automation, or IAccessibleEx</h1>

<p class=MsoNormal>If you are developing a new application or control,
Microsoft recommends using UI Auto­mation. Although Microsoft Active
Accessibility can be easier to implement in the short term, the limitations
inherent in this technology, such as its aging object model and inability to
support new UI behaviors or merge rolls, makes it more difficult and costly
over the long term. These limitations become especially apparent when
introducing new controls. For more information, see the section of this
appendix titled “Limitations of Microsoft Active Accessibility.”</p>

<p class=MsoNormal>The UI Automation object model is easier to use and is more
flexible than that of Microsoft Active Accessibility. The UI Automation Elements
reflect the evolution of modern user inter­faces, and developers can define
custom UI Automation Control Patterns, Properties, and Events.</p>

<span style='font-size:9.5pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal>Microsoft Active Accessibility tends to run slowly for
clients that run out of process. To improve performance, developers of
accessibility tool programs often choose to hook into and run their programs in
the target application process: an extremely difficult and risky approach. UI
Automation is much easier to implement for out-of-process clients, and offers
much better performance and reliability.</p>

<p class=MsoNormal>If you are updating an existing Microsoft Active
Accessibility-based application or control, consider adding support for UI
Automation by implementing the IAccessibleEx interface. First, ensure that your
application or control meets the following requirements:</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>The baseline Microsoft Active Accessibility server's hierarchy of
accessible objects must be well-organized and error-free. IAccessibleEx cannot
fix problems with existing accessible object hierarchies.</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Your IAccessibleEx implementation must comply with both the
Microsoft Active Acces­sibility specification, and the UI Automation
specification. Microsoft provides a set of tools for validating compliance with
both specifications.</p>

<p class=MsoNormal>If either of these requirements is not met, consider
implementing UI Automation natively. You can keep legacy Microsoft Active
Accessibility server implementations for backward compati­bility if it is
necessary. From a UI Automation client’s perspective, there is no difference
between UI Automation providers and Microsoft Active Accessibility servers that
implement IAccessibleEx correctly. </p>

</div>

<span style='font-size:9.5pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span>

<div class=WordSection6></div>

<span style='font-size:9.5pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:always'>
</span>

<div class=WordSection7>

<p class=ChNumber>Appendix B</p>

<p class=ChTitle>UI Automation Overview</p>

<p class=MsoNormal>Source: “Windows Automation API SDK” from the Microsoft
Developer Network (MSDN) <br>
Web site. To view this content online, go to <i>http://msdn.microsoft.com/en-us/library/<br>
aa163327.aspx</i>.</p>

<p class=MsoNormal>Microsoft UI Automation is an accessibility framework for
Windows. It provides programmatic access to most user interface (UI) elements
on the desktop. It enables assistive technology products, such as screen
readers, to provide information about the UI to end users and to manipulate the
UI by means other than standard input. UI Automation also allows automated test
scripts to interact with the UI.</p>

<p class=MsoNormal>UI Automation was first available in Windows XP as part of
the Microsoft .NET Framework. Although an unmanaged C++ API was also published
at that time, the usefulness of client functions was limited because of
interoperability issues. For Windows 7, the API has been rewritten in the
Component Object Model (COM).</p>

<p class=Readeraidonly><span
class=ReaderaidPrefix><span style='font-size:9.5pt'>Note</span></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>Although the library
functions introduced in the earlier version of UI Automation are still
documented, they should not be used in new applications.</p>

<p class=MsoNormal>UI Automation client applications can be written with the
assurance that they will work on multiple Windows control frameworks. The UI
Automation core masks any differences in the frameworks that underlie various
pieces of the UI. For example, the <span class=InlineCode><span
style='font-size:8.5pt'>Content</span></span> property of a Windows
Presentation Foundation (WPF) button, the <span class=InlineCode><span
style='font-size:8.5pt'>Caption</span></span> property of a Win32 button, and
the <span class=InlineCode><span style='font-size:8.5pt'>ALT</span></span>
property of an HTML image are all mapped to a single Property, <span
class=InlineCode><span style='font-size:8.5pt'>Name</span></span>, in the UI
Automation view.</p>

<p class=MsoNormal>UI Automation provides full functionality in Windows XP,
Windows Server 2003, and later operating systems.</p>

<p class=MsoNormal>UI Automation providers are components that implement UI
Automation support on controls and offer some support for Microsoft Active
Accessibility client applications, through a built-in bridging service.</p>

<p class=Readeraidonly><span
class=ReaderaidPrefix><span style='font-size:9.5pt'>Note</span></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>UI Automation does not
enable communication between processes that are started by different users
through the <b>Run as</b> command.</p>

<p class=MsoNormal>This appendix contains the following sections:</p>

<p class=BullList><span lang=FR style='font-family:Symbol;color:windowtext'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=FR>UI Automation Components</span></p>

<p class=BullList><span lang=FR style='font-family:Symbol;color:windowtext'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=FR>UI Automation Header Files</span></p>

<p class=BullList><span lang=FR style='font-family:Symbol;color:windowtext'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=FR>UI Automation Model</span></p>

<p class=BullList><span lang=FR style='font-family:Symbol;color:windowtext'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=FR>UI Automation Providers</span></p>

<p class=ListEnd><span lang=FR>&nbsp;</span></p>

<h1><a name=uiautocomponents></a><span lang=FR>UI Automation Components</span></h1>

<p class=MsoNormal>UI Automation has four main components, as shown in the
following table.</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <thead>
  <tr>
   <td valign=top style='background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead style='margin-right:2.9pt'>Component</p>
   </td>
   <td valign=top style='background:#D9D9D9;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead style='margin-right:6.0pt'>Description</p>
   </td>
  </tr>
 </thead>
 <tr>
  <td valign=top style='border-top:solid silver 1.0pt;border-left:none;
  border-bottom:solid silver 1.0pt;border-right:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Provider
  API</p>
  </td>
  <td valign=top style='border-top:solid silver 1.0pt;border-left:none;
  border-bottom:solid silver 1.0pt;border-right:none;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>A set of COM interfaces that
  are implemented by UI Automation providers. UI Automation providers are
  objects that provide information about UI elements and respond to
  programmatic input.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>Client
  API</p>
  </td>
  <td valign=top style='border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>A set of COM interfaces that
  enable client applications to obtain information about the UI and to send
  input to controls.</p>
  <p class=TableText><span class=ReaderaidPrefix><span style='font-size:9.5pt'>Note</span></span>&#8194;The
  functions described in Deprecated Control Pattern Functions and Deprecated
  Node Functions are obsolete and in the process of being removed. Instead,
  client applications should use the UI Automation COM interfaces described in
  UI Automation Element Interfaces for Clients.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>UiAutomationCore.dll</p>
  </td>
  <td valign=top style='border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>The run-time library, sometimes
  called the UI Automation core, that handles communication between providers
  and clients.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>OLEACC.dll</p>
  </td>
  <td valign=top style='padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>The run-time library for Microsoft Active Accessibility
  and the proxy objects. The library also provides proxy objects used by the
  MSAA-to-UIA Proxy to support Win32 controls.</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>There are two ways of using UI Automation: to create support
for custom controls by using the provider API, and to create client
applications that use the UI Automation core to com­municate with UI elements.
Depending on your focus, you should refer to different parts of the
documentation.</p>

<h1><a name=headers></a>UI Automation Header Files</h1>

<p class=MsoNormal>The UI Automation API is defined in several different C/C++
header files that are included with the Microsoft Windows Software Development
Kit (SDK). The UI Automation header files are described in the following table.
</p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='margin-left:43.0pt;border-collapse:collapse'>
 <thead>
  <tr>
   <td width=133 valign=top style='width:99.5pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead style='margin-right:2.9pt'>Header
   file</p>
   </td>
   <td width=391 valign=top style='width:293.0pt;background:#D9D9D9;padding:
   2.0pt 3.0pt 2.0pt 3.0pt'>
   <p class=TableHead style='margin-right:6.0pt'>Description</p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width=133 valign=top style='width:99.5pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>uiautomationclient.h</p>
  </td>
  <td width=391 valign=top style='width:293.0pt;border-top:solid silver 1.0pt;
  border-left:none;border-bottom:solid silver 1.0pt;border-right:none;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>Defines the interfaces and
  related programming elements used by UI Automation clients.</p>
  </td>
 </tr>
 <tr>
  <td width=133 valign=top style='width:99.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>uiautomationcore.h</p>
  </td>
  <td width=391 valign=top style='width:293.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>Defines the interfaces and
  related programming elements used by UI Automation providers.</p>
  </td>
 </tr>
 <tr>
  <td width=133 valign=top style='width:99.5pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>uiautomationcoreapi.h</p>
  </td>
  <td width=391 valign=top style='width:293.0pt;border:none;border-bottom:solid silver 1.0pt;
  padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:6.0pt'>Defines general constants,
  GUIDs, data types, and structures used by UI Automation clients and
  providers. It also contains definitions for the deprecated node and Control
  Pattern functions.</p>
  </td>
 </tr>
 <tr>
  <td width=133 valign=top style='width:99.5pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-right:2.9pt'>uiautomation.h</p>
  </td>
  <td width=391 valign=top style='width:293.0pt;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p class=TableText style='margin-top:0in;margin-right:6.0pt;margin-bottom:
  0in;margin-left:0in'>Includes all of the other UI Automation header files.
  Because most UI Automation applications require elements from all UI
  Automation header files, it is best to include uiautomation.h in your UI
  Automation application projects instead of including each file individually.</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>If you are developing an application that uses the UI
Automation API, you should include uiautomation.h in your project. If your
application supports Microsoft Active Accessibility, include the oleacc.h
header file. UI Automation applications that use GUIDs also require the
initguid.h header file. If needed, initguid.h should be included before
uiautomation.h.</p>

<h1><a name=uiautomodel></a>UI Automation Model</h1>

<p class=MsoNormal><a name="related_topics"></a>UI
Automation exposes every element of the UI to client applications as an object
represented by the IUIAutomationElement interface. Elements are contained in a
tree structure, with the desktop as the root element. Clients can filter the
raw view of the tree as a control view or a content view. These standard views
of the structure can easily be seen by using the UI Spy application that is
included with the Windows SDK. Applications can also create custom views.</p>

<p class=MsoNormal>A UI Automation Element exposes properties of the control or
UI element that it represents. One of these properties is the Control Type,
which defines the basic appearance and functionality of the control or UI
element as a single recognizable entity, for example, a button or check box.</p>

<p class=MsoNormal>In addition, a UI Automation Element exposes one or more Control
Patterns. A Control Pattern provides a set of Properties that are specific to a
particular Control Type. A Control Pattern also exposes methods that enable
client applications to get more information about the element and to provide
input to the element.</p>

<p class=Readeraidonly style='margin-left:0in'><span
class=ReaderaidPrefix><span style='font-size:9.5pt'>Note</span></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>There is no one-to-one
correspondence between Control Types and Control Patterns. A Control Pattern
may be supported by multiple Control Types, and a control may support multiple Control
Patterns, each of which exposes different aspects of its behavior. For example,
a combo box has at least two Control Patterns: one that represents its ability
to expand and collapse, and another that represents the selection mechanism.
However, a control can exhibit only a single Control Type.</p>

<p class=MsoNormal>UI Automation provides information to client applications
through events. Unlike WinEvents, UI Automation Events are not based on a
broadcast mechanism. UI Automation clients register for specific Event
notifications and can request that specific Properties and Control Pattern
information be passed to their event handlers. In addition, a UI Automation Event
contains a reference to the element that raised it. Providers can improve
performance by raising Events selectively, depending on whether any clients are
listening.</p>

<p class=SeeAlso>Go further: Go to http://go.microsoft.com/fwlink/?LinkId=150842
for more information on the following topics:</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Deprecated Control Pattern Functions</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Deprecated Node Functions</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>UI Automation Element Interfaces for Clients</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>UI Automation Control Types Overview</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>UI Automation Control Patterns Overview</p>

<p class=BullList><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>UI Automation Events Overview</p>

<p class=ListEnd><span style='background:yellow'>&nbsp;</span></p>

<h1>UI Automation Providers</h1>

<p class=MsoNormal>After designing your implementation, you must implement a
provider interface to support your implementation. For more details on how to
do so, go to <i>http://go.microsoft.com/<br>
fwlink/?LinkId=150842</i>.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-15.1pt'></p>

<p class=TOCChapter style='text-indent:0in'><br>
<br>
</p>

</div>

<span style='font-size:12.0pt;font-family:"Segoe Semibold",sans-serif;
color:black'><br clear=all style='page-break-before:auto'>
</span>

<div class=WordSection8>

<p class=BMTitle>Glossary</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Accessibility</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>The quality of a system
incorpor­ating hardware or software that makes it usable by people with one or
more physical disabilities, such as restricted mobility, blindness, or
deafness.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Accessibility
Interoperability Alliance (AIA)</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>A
group of information technology (IT) and assistive technology (AT) companies,
content providers, and other engineering organizations that collaborate
together to create standards and design solutions for interoperable accessible
technology.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Accessible Event
Watcher (AccEvent)</b></span><span style='font-family:"Cambria Math",serif'>&#8194;<br>
</span>An investigation tool that allows you to review events raised by the
Windows Automation API.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Alternative Text
(Alt Text)</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>A
short descrip­tive summary of the content shown in a figure. The text provides
an alternative means of understanding what the art depicts if a user cannot see
the art. It is particularly useful for users who are visually impaired (whether
or not they use screen readers to interpret the text in a document) and those
who prefer to turn off images, such as users who have slow Internet
connections, use a text-only browser, or prefer to work more rapidly than image
downloading allows.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Application
Programming Interface (API)</b></span><span style='font-family:"Cambria Math",serif'>&#8194;<br>
</span>A set of routines, data structures, object classes, or protocols
provided by libraries or operating system services in order to support the
building of applications.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Assistive
Technology (AT)</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>A
specialty product designed to provide additional accessibility to individuals
who have physical or cognitive difficulties, impairments, and disabilities.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Automation
Element</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>An
element in UI Automation that exposes common properties of the UI element it
represents.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Automation ID</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>An Automation Element
Property used to identify an element. This Property should be filled out for
most elements.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Beta</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>A new software or
hardware product, or one that is being updated, that is released to users for the
purpose of evaluation in the real world.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Bug</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>An error in coding or
logic that causes a program to malfunction or to produce incorrect results.
Minor bugs, such as a cursor that does not behave as expected, can be
inconvenient or frustrating, but do not damage information. More severe bugs
can require the user to restart the program or the computer, losing whatever
previous work had not been saved.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Child</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>In a tree structure, the
relationship of a node to its immediate predecessor. Also see parent/child. In
contrast to sibling.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Client</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>An accessibility or test
automation tool that uses an accessibility API to program­matically access
application user interfaces.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Common Controls</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>A set of windows that
are implemented by the common control library, which is a dynamic-link library
(DLL) included with the Windows operating system.</p>

<span class=Term-DefinitionChar><b><span style='font-size:9.5pt'><br clear=all
style='page-break-before:always'>
</span></b></span>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Control</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>A component in an
application with a visual representation in the UI that can be manipulated by
the user to perform an action.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Control Pattern</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>In UI Automation, a
control attribute or functionality that represents common UI behaviors (such as
invoking a button) and supports the UIA Properties, Methods, and Events.</p>

<p class=GlossaryDefinition><b>Control Type</b><span style='font-family:"Cambria Math",serif'>&#8194;</span>A
pre-defined set of patterns, properties, and conditions used to define a <span
class=TermChar>control</span>’s basic appearance and function­ality. A
well-known identifier that indicates the kind of control a particular UI
element represents, such as a combo box or a button.</p>

<p class=GlossaryDefinition><b>Custom Control</b><span style='font-family:"Cambria Math",serif'>&#8194;</span>A
<span class=TermChar>control</span> that is not provided by the <span
class=TermChar>UI</span> framework; or a modified control based on a standard
control.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Depth-First
Search</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>Generally
following a top-to-bottom, left-to-right scheme, a tree traversal pattern that
starts at the root of a tree (located at the top of the tree) and moves down
any branches of each top-level node before traversing the next top-level node.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Digital
Inclusion</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>The
idea of using technol­ogy to its fullest potential by looking for opportunities
to innovate and improve the user experience for all users, including improving
issues of accessibility.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Disability</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>A temporary or permanent
impair­ment that may involve visual, hearing, mobility, cognitive, or speech
abilities.</p>

<span class=Term-DefinitionChar><b><span style='font-size:9.5pt'><br clear=all>
</span></b></span>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Element</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>In a logical hierarchy,
a node representing a control in the UI.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Event</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>An action or occurrence,
often gen­erated by the user, to which a program might respond (for example,
key presses, button clicks, or mouse movements). In UI Automation, Events are
action notifications that correspond to an activity occurring in the <span
class=TermChar>UI</span>.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Framework</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>In object-oriented
programming, a reusable basic design structure, consisting of abstract and
concrete classes, which assists in building applications.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>High Contrast</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>A system setting that
height­ens the color contrast of some text and images on your computer screen,
making those items more distinct and easier to identify. Increasing the
contrast in colors reduces eyestrain and makes things easier to read for many
people.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>High Dots Per
Inch (High DPI)</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>Dots
per inch is a measure of screen and printer resolution that is expressed as the
number of dots that a device can print or display per linear inch. Resolutions
of 144 dpi or higher are consid­ered high dpi. Since the release of Windows
Vista, the Windows platform replaced large font settings with dpi
configurations.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>IAccessible</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>A COM-based interface in
MSAA that exposes information about UI elements. IAccessible is always paired
with ChildId to make up one UI element representation (called “Accessible
Object” in <span class=TermChar>MSAA</span>).</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Implementation
Table</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>A
table that lists the control types, patterns, and properties for implementing
accessible controls.</p>

<span class=Term-DefinitionChar><b><span style='font-size:9.5pt'><br clear=all
style='page-break-before:always'>
</span></b></span>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>In-Process</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>In the context of accessibility
APIs, in-process refers to a program that is running within the process of a
target application. For instance, some programs use in-process hooks and load a
part of their code to target applications.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Inspect Objects
(Inspect)</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>A
Windows Automation API investigation tool that allows you to examine the
element’s Patterns and Properties as well as navigate the tree. Inspect allows
you to interact with the elements through the accessibility APIs and navigate
the elements by keyboard, mouse, or navigation methods provided by the
framework.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Investigation
Tools</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>Investigation
tools are manual test tools that allow you to quickly assess the <span
class=TermChar>UI</span> for issues. Allows you to look at your UI’s underlying
structure and properties, as well as interact with the elements. Investigation
tools do not “problem-solve” for you.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Information
Technology Industry Council (ITIC)</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>A
lobbying organization based in Washington, D.C., that assists member high-tech
companies to achieve legislative policy objectives.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Library</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>In programming, a
collection of routines stored in a file. Each set of instructions in a library
has a name, and each performs a different task.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Logical
Hierarchy</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>A
systematic mapping of the controls in an application to program­matically
exposed elements in UIA. The logical hierarchy provides context for the
controls' location and relationships in the <br>
<span class=TermChar>UI</span> and helps to determine the controls' <br
clear=all>
implementation. It can also be used for planning keyboard navigation and other
system settings.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Microsoft
Accessibility Developer Center</b></span><span style='font-family:"Cambria Math",serif'>&#8194;<br>
</span>A portal for guidance, essential information, and tools and technologies
for developing accessible applications and writing acces­sible code for
Microsoft developers.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Microsoft
Developer Network (MSDN)</b></span><span style='font-family:"Cambria Math",serif'>&#8194;<br>
</span>A portal for developers using Microsoft products, which allows
developers to learn, share information, and download tools.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Microsoft UI
Automation Community Promise</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>A
specification that provides information about Microsoft's accessibility
frameworks, including Active Accessibility, UI Automation, and its shared imple­mentations.
Intended for interoperable implementations by other companies. Access the UI
Automation Specification from the Microsoft Accessibility Developer Center at <i>http://msdn.microsoft.com/en-us/accessibility/default.aspx</i>.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Microsoft Active
Accessibility (MSAA)</b></span><span style='font-family:"Cambria Math",serif'>&#8194;<br>
</span>A COM-based accessibility <span class=TermChar>API</span>, first
released in 1997 as an add-on for Windows 95.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Node</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>In tree structures, a
location on the tree that can have links to one or more nodes below it. Some
authors make a distinction between node and element, with an ele­ment being a
given data type and a node comprising one or more elements as well as any
supporting data structures.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Oleacc.dll</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>A Windows operating system
component that provides the platform support for MSAA.</p>

<span class=Term-DefinitionChar><b><span style='font-size:9.5pt'><br clear=all
style='page-break-before:always'>
</span></b></span>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>On-Screen
Keyboard</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>An
assistive technology that allows users to type and interact with their computer
using an alternative input device like a switch, rather than the physical
keyboard. An on-screen keyboard displays a visual keyboard with all of the
standard keys.</p>

<p class=GlossaryDefinition><b>Out</b><b><span style='color:windowtext'>-of-</span>Process</b><span
style='font-family:"Cambria Math",serif'>&#8194;</span><span style='color:windowtext'>In
the context of accessibility APIs, out-of-process refers</span> to a program or
script running outside of the target appli­cation processes.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Parent/child</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>Pertaining to or
constituting a relationship between nodes in a tree data structure in which the
parent is one step closer to the root (that is, one level higher) than the
child. In contrast to sibling.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Persona</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>A fictional person who
represents a major user group, based on real user data.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Platform</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>In everyday usage, the
type of computer or operating system being used. In this book, platform is only
used when referring to the Windows platform.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Product
Lifecycle</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>The
process by which a product is designed, developed, and released to market. The
product lifecycle consists of three phases: (1) product def­inition, (2)
product development, and (3) product servicing. Within these phases are the
iterative stages of establishing require­ments, design, implementation,
verification, and release.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Programmatic
Access</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>Achieved
when an application or library of UI functionality exposes the content,
interactions, context, and semantics of the UI via a discoverable and
publicly-documented application programming interface (API). The API can <br
clear=all>
be used by another program to provide an augmentative, automated, or alternate,
user interaction. Basic information conveyed through programmatic access
includes: navigation, interactive elements, asynch­ronous changes to the page,
keyboard focus, and other important information about the UI.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Property</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>A characteristic or
parameter expressed as a value used to describe a UI element. In UIA, Properties
enable client applications to retrieve information about controls.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Provider</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>In the context of UI
Automation, providers expose information about the UI. Providers can be a full
scale application or UI framework that supplies accessible UI parts to programs
for agile software development. Providers are referred to as
&quot;servers&quot; in MSAA because its role appears as a component object
model (COM) server of the IAccessible interface paired with the ChildId.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Rasterization</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>The conversion of vector
graphics (images described in terms of mathematical elements, such as points
and lines) to equivalent images composed of pixel patterns that can be stored
and manipulated as sets of bits.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Screen Magnifier</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>Also called a
&quot;screen enlarger,” an assistive technology that <br>
works like a magnifying glass for the computer by enlarging a portion of the
screen, which can increase legibility and make it easier to see items on the
computer. Some screen magnifiers allow a person to zoom in and out on a
particular area of the screen.</p>

<span class=Term-DefinitionChar><b><span style='font-size:9.5pt'><br clear=all
style='page-break-before:always'>
</span></b></span>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Screen Reader</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>A software program that
presents graphics and text as speech. A screen reader is used to verbalize, or
&quot;speak,&quot; everything on the screen include­<br>
ing names and descriptions of control buttons, menus, text, and punctuation.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Section 508 of
the Rehabilitation Act of 1996</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>An
act for U.S. federal agencies procuring electronic and information technology. For
further details, see <i>http://www.section508.gov/</i>.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Sibling</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>A process or node in a
data tree that <br>
is descended from the same immediate ancestor(s) as other processes or nodes. The
order of sibling relationships is important when designing navigation. In
contrast to <span class=TermChar>parent/child</span>.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Specification
(spec)</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>An
explicit set of requirements to be satisfied by a material, product, or
service.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>System-Wide
Settings</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>Settings,
such as font, screen resolution, or color settings, that allow users to
customize the UI to fit their needs and preferences. System-wide settings
should be respected and should work with your product.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Tab Order</b></span><span
style='font-family:"Cambria Math",serif'>&#8195;</span>The specified sequential
order by which users navigate through the <span class=TermChar>UI</span> using
the TAB key or SHIFT+TAB.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Tab Stop</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>The location, usually on
an element that receives keyboard focus, where the cursor stops when the TAB
key is pressed.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>UI Automation
(UIA)</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>The
new accessibility and automation framework for Windows. UIA provides
programmatic access to user interface (UI) elements on the desktop, <br
clear=all>
enabling assistive technology (AT) products such as screen readers to provide
infor­mation about the UI to end users.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>UI Automation
(UIA) Tree</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>A
UIA-specific solution that helps assistive technologies gather information
about the UI and its elements. The root element of the UIA Tree is the desktop,
whose child elements are programs running on it, such as an appli­cation or the
operating system’s UI. The UIA Tree is not a fixed structure and is seldom seen
in its totality, because it might contain thousands of elements. Parts of it
are built as they are needed, and it can undergo changes as elements are added,
moved, or removed. The UIA Tree should not be con­fused with the logical
hierarchy, another treelike structure used for design purposes.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>UI Spy</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>An investigation tool
that allows you <br>
to examine the UIA Tree, Elements, and Events. UI Spy enables developers and
testers to view and interact with the user interface (UI) elements of an
application. By viewing the application's UI hierarchical structure, Property
values, and raised Events, developers and testers can verify that the UI they
are creating is programmatically accessible to assistive technology devices
such as screen readers.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>UI Automation
Verify (UIA Verify) Test Automation Framework</b></span><span style='font-family:
"Cambria Math",serif'>&#8194;</span>A verification tool that checks your
implementation at run time to confirm that you are implementing the correct
tree, Patterns, and Properties. The framework facilitates manual and automated
testing of the Microsoft UIA Provider implementation of a control or
application.</p>

<span class=Term-DefinitionChar><b><span style='font-size:9.5pt'><br clear=all
style='page-break-before:always'>
</span></b></span>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Usability</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>The extent to which a
product can be used by specified users to achieve specified goals with
effectiveness, efficiency and satisfaction in a specified context of use (ISO
9241-11). In general, how well users can learn and use a product to achieve
their goals and how satisfied they are with that process.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>User Experience
(UX)</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>The
end-user’s overall experience and satisfaction interacting with a product or
service. In UI design, UX can touch on many fields of study, such as <span
class=TermChar>usability</span>, human-computer interaction, and behavioral
psychology.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>User Interface
(UI)</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>The
means by which humans can interact with a computer, technical device, or some
other complex tool to accomplish a task.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>User Scenario</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>A test scenario in which
a feature of the program is highly visible or necessary to successfully use
your program. The feature tested is used by a majority of the application's
users.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Voluntary
Product Accessibility Template (VPAT)</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>A
standardized form developed by the Information Technology Industry Council
(ITI) used to show how a software <br clear=all>
product meets key regulations of Section 508 of the Rehabilitation Act. VPATs
were created as a collaborative effort between industry and ITI, and the U.S.
government's General Services Administration (GSA) to evaluate and describe the
accessibility of a product.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Windows
Automation API</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>The
ecosystem of Windows automation technologies, which includes classic Microsoft
Active Accessibility (MSAA) and Windows implementations of the UI Automation
(UIA) specification.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Windows
Presentation Foundation (WPF)</b></span><span style='font-family:"Cambria Math",serif'>&#8194;</span>
A framework for programming that keeps the business code and the design layers
separate. It uses Microsoft's newest accessibility API, UI Automation (UIA), to
programmatically expose information to users of assistive technology (AT).
Devel­opers use the WPF code as well as its declarative markup language XAML to
create products with amazing capabilities.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>WinEvents</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>A cross-process event
system in the Windows platform that allows programs to notify others with a defined
set of IDs and the information.</p>

<p class=GlossaryDefinition><span class=Term-DefinitionChar><b>Workaround</b></span><span
style='font-family:"Cambria Math",serif'>&#8194;</span>A way of bypassing a
problem or functionality issue in a program.</p>

</div>

<span style='font-size:9.5pt;font-family:"Segoe",sans-serif;color:black'><br
clear=all style='page-break-before:auto'>
</span>

<div class=WordSection9>

<p class=MsoNormal>&nbsp;</p>

<p class=SeeAlso>Go further: The terms used in this book are based on
definitions from the UI Automation (UIA) Specification, Windows Accessibility
Software Developer Kit (SDK), the Microsoft Developer Network (MSDN), and the Microsoft
Press Computer Dictionary. To access or learn more about these sources, go to http://go.microsoft.com/fwlink/?LinkId=150842.</p>

<p class=TOCChapter style='text-indent:0in'>&nbsp;</p>

</div>

</body>

</html>
