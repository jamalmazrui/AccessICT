<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="" xml:lang="">
<head>
  <meta charset="utf-8" />
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <meta name="author" content="Digital Education Strategies" />
  <meta name="dcterms.date" content="2019-11-04" />
  <meta name="description" content="Digital accessibility skills are in high demand, as the world becomes more aware of barriers in digital content that prevent some people from participating in a digital society. These are essential skills for web developers, and essential knowledge for organizations that want to ensure their web content is reaching the broadest audience possible." />
  <title>Professional Web Accessibility Auditing Made Easy</title>
  <style>
    html {
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      overflow-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 12px;
      }
      h1 {
        font-size: 1.8em;
      }
    }
    @media print {
      html {
        background-color: white;
      }
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    svg {
      height: auto;
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li > ol, li > ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, Consolas, 'Lucida Console', monospace;
      font-size: 85%;
      margin: 0;
      hyphens: manual;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
      overflow-wrap: normal;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC ul {
      padding-left: 1.3em;
    }
    #TOC > ul {
      padding-left: 0;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    div.columns{display: flex; gap: min(4vw, 1.5em);}
    div.column{flex: auto; overflow-x: auto;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    /* The extra [class] is a hack that increases specificity enough to
       override a similar rule in reveal.js */
    ul.task-list[class]{list-style: none;}
    ul.task-list li input[type="checkbox"] {
      font-size: inherit;
      width: 0.8em;
      margin: 0 0.8em 0.2em -1.6em;
      vertical-align: middle;
    }
    .display.math{display: block; text-align: center; margin: 0.5rem auto;}
  </style>
</head>
<body>
<header id="title-block-header">
<h1 class="title">Professional Web Accessibility Auditing Made Easy</h1>
<p class="author">Digital Education Strategies</p>
<p class="date">2019-11-04</p>
</header>
<p><img src="OEBPS/assets/pwaa_cover.png" /></p>
<p><span id="front-cover.xhtml"></span></p>
<article>
<div id="front-cover.xhtml_cover-image">
<img src="OEBPS/assets/pwaa_cover.png"
alt="Professional Web Accessibility Auditing Made Easy" />
</div>
</article>
<p><span id="title-page.xhtml"></span></p>
<article>
<div>
<!-- pb_fixme -->
<h1 class="title" id="title-page.xhtml_title-page">Professional Web
Accessibility Auditing Made Easy</h1>
<h2 class="subtitle">Essential Skills for Web Developers, Content
Creators, and Designers</h2>
<h3 class="author">Digital Education Strategies, The Chang School</h3>
<h3 class="author">Greg Gay</h3>
<h4 class="publisher"></h4>
<h5 class="publisher-city"></h5>
<!-- pb_fixme -->
</div>
</article>
<p><span id="copyright.xhtml"></span></p>
<article>
<div id="copyright.xhtml_copyright-page">
<div class="ugc">
<div>
<!-- pb_fixme -->
<div class="license-attribution">
<p><img src="OEBPS/assets/cc-by-sa.png"
alt="Icon for the Creative Commons Attribution-ShareAlike 4.0 International License" /></p>
<p>Professional Web Accessibility Auditing Made Easy by Digital
Education Strategies, The Chang School is licensed under a <a
href="https://creativecommons.org/licenses/by-sa/4.0/"
rel="license">Creative Commons Attribution-ShareAlike 4.0 International
License</a>, except where otherwise noted.</p>
</div>
<!-- pb_fixme -->
</div>
<p>This book was produced with <a
href="http://pressbooks.com/">Pressbooks</a>.</p>
</div>
</div>
</article>
<p><span id="table-of-contents.xhtml"></span></p>
<article>
<h1 id="table-of-contents.xhtml_toc">Contents</h1>
<ul>
<li><a href="#front-matter-001-preface.xhtml"><span
class="toc-chapter-title">Preface</span></a></li>
<li><a href="#part-001-introduction.xhtml"><span
class="toc-chapter-title">Introduction</span></a></li>
<li><a href="#chapter-001-learning-outcomes.xhtml"><span
class="toc-chapter-title">Introduction</span></a></li>
<li><a href="#chapter-002-objectives-and-activities.xhtml"><span
class="toc-chapter-title">Objectives and Activities</span></a></li>
<li><a href="#chapter-003-this-book-will-be-helpful-to.xhtml"><span
class="toc-chapter-title">The Information Here Will Be Helpful
To...</span></a></li>
<li><a href="#chapter-004-getting-the-most-out-of-the-book.xhtml"><span
class="toc-chapter-title">Choosing Your Learning Path</span></a></li>
<li><a href="#chapter-005-lulus-story-begins.xhtml"><span
class="toc-chapter-title">Why Learn About Web Accessibility
Auditing?</span></a></li>
<li><a href="#chapter-006-activity.xhtml"><span
class="toc-chapter-title">Activity: Start Your Web Accessibility
Auditing Toolkit</span></a></li>
<li><a
href="#part-002-aspects-of-web-accessibility-auditing.xhtml"><span
class="toc-chapter-title">1. Aspects of Web Accessibility
Auditing</span></a></li>
<li><a href="#chapter-007-introduction.xhtml"><span
class="toc-chapter-title">Aspects of Web Accessibility
Auditing</span></a></li>
<li><a
href="#chapter-008-types-of-disabilities-and-barriers.xhtml"><span
class="toc-chapter-title">Types of Disabilities and
Barriers</span></a></li>
<li><a href="#chapter-009-common-sense.xhtml"><span
class="toc-chapter-title">Common Sense</span></a></li>
<li><a href="#chapter-010-things-to-watch-for.xhtml"><span
class="toc-chapter-title">Things to Watch For</span></a></li>
<li><a
href="#chapter-011-automated-web-accessibility-testing.xhtml"><span
class="toc-chapter-title">Automated Web Accessibility
Testing</span></a></li>
<li><a href="#chapter-012-manual-web-accessibility-testing.xhtml"><span
class="toc-chapter-title">Manual Web Accessibility
Testing</span></a></li>
<li><a href="#chapter-013-user-testing.xhtml"><span
class="toc-chapter-title">Introduction to User Testing</span></a></li>
<li><a
href="#chapter-014-introduction-to-code-examination-and-repair.xhtml"><span
class="toc-chapter-title">Introduction to Code Examination and
Repair</span></a></li>
<li><a href="#chapter-015-chromevox-screen-reader.xhtml"><span
class="toc-chapter-title">ChromeVox Screen Reader</span></a></li>
<li><a
href="#chapter-016-activity-experience-web-content-from-a-different-perspective.xhtml"><span
class="toc-chapter-title">Activity: Experience Web Content From a
Different Perspective</span></a></li>
<li><a href="#chapter-017-self-test-1.xhtml"><span
class="toc-chapter-title">Self-Test 1</span></a></li>
<li><a href="#part-003-introduction-to-wcag-2-0.xhtml"><span
class="toc-chapter-title">2. Introduction to WCAG</span></a></li>
<li><a href="#chapter-018-introduction-to-wcag-2-0.xhtml"><span
class="toc-chapter-title">Introduction to WCAG</span></a></li>
<li><a href="#chapter-019-objectives-and-activities-3.xhtml"><span
class="toc-chapter-title">Objectives and Activities</span></a></li>
<li><a
href="#chapter-020-the-evolution-of-web-accessibility.xhtml"><span
class="toc-chapter-title">The Evolution of Web
Accessibility</span></a></li>
<li><a href="#chapter-021-wcag-2-0-principles.xhtml"><span
class="toc-chapter-title">WCAG Principles</span></a></li>
<li><a href="#chapter-022-wcag-accessibility-conformance.xhtml"><span
class="toc-chapter-title">WCAG Accessibility Conformance</span></a></li>
<li><a href="#chapter-023-slug-10-key-guidelines.xhtml"><span
class="toc-chapter-title">10 Key Guidelines</span></a></li>
<li><a
href="#chapter-024-wcag-2-0-web-auditing-review-template.xhtml"><span
class="toc-chapter-title">WCAG Web Auditing Review
Template</span></a></li>
<li><a href="#chapter-025-activity-wcag-scavenger-hunt.xhtml"><span
class="toc-chapter-title">Activity: WCAG Scavenger Hunt</span></a></li>
<li><a href="#chapter-026-self-test-2.xhtml"><span
class="toc-chapter-title">Self-Test 2</span></a></li>
<li><a href="#part-004-automated-testing-tools.xhtml"><span
class="toc-chapter-title">3. Automated Testing Tools</span></a></li>
<li><a href="#chapter-027-introduction-3.xhtml"><span
class="toc-chapter-title">Automated Testing Tools</span></a></li>
<li><a href="#chapter-028-objectives-and-activities-4.xhtml"><span
class="toc-chapter-title">Objectives and Activities</span></a></li>
<li><a
href="#chapter-029-limitations-of-automated-web-accessibility-checkers.xhtml"><span
class="toc-chapter-title">Limitations of Automated Web Accessibility
Checkers</span></a></li>
<li><a
href="#chapter-030-achecker-web-accessibility-checker.xhtml"><span
class="toc-chapter-title">AChecker Web Accessibility
Checker</span></a></li>
<li><a
href="#chapter-031-wave-accessibility-evaluation-tool.xhtml"><span
class="toc-chapter-title">WAVE Accessibility Evaluation
Tool</span></a></li>
<li><a
href="#chapter-032-other-notable-accessibility-review-tools.xhtml"><span
class="toc-chapter-title">Other Notable Accessibility Review
Tools</span></a></li>
<li><a href="#chapter-033-colour-contrast-evaluation.xhtml"><span
class="toc-chapter-title">Colour Contrast Evaluation</span></a></li>
<li><a href="#chapter-034-readability-testing.xhtml"><span
class="toc-chapter-title">Readability Testing</span></a></li>
<li><a href="#chapter-035-markup-validation.xhtml"><span
class="toc-chapter-title">Markup Validation</span></a></li>
<li><a
href="#chapter-036-activity-compare-achecker-and-wave.xhtml"><span
class="toc-chapter-title">Activity: Compare AChecker and
WAVE</span></a></li>
<li><a href="#chapter-037-self-test-3.xhtml"><span
class="toc-chapter-title">Self-Test 3</span></a></li>
<li><a href="#part-005-manual-testing-strategies.xhtml"><span
class="toc-chapter-title">4. Manual Testing Strategies</span></a></li>
<li><a href="#chapter-038-manual-testing-strategies.xhtml"><span
class="toc-chapter-title">Introduction to Manual Testing
Strategies</span></a></li>
<li><a href="#chapter-039-objectives-and-activities-5.xhtml"><span
class="toc-chapter-title">Objectives and Activities</span></a></li>
<li><a href="#chapter-040-tab-key-navigation-test.xhtml"><span
class="toc-chapter-title">Tab Key Navigation Test</span></a></li>
<li><a href="#chapter-041-select-all-test.xhtml"><span
class="toc-chapter-title">“Select All” Test</span></a></li>
<li><a href="#chapter-042-code-examination-and-repair.xhtml"><span
class="toc-chapter-title">Code Examination and Repair</span></a></li>
<li><a href="#chapter-043-media-review.xhtml"><span
class="toc-chapter-title">Media Review</span></a></li>
<li><a href="#chapter-044-other-tools-for-manual-testing.xhtml"><span
class="toc-chapter-title">Other Tools for Manual Testing</span></a></li>
<li><a href="#chapter-045-activity-chrome-tools.xhtml"><span
class="toc-chapter-title">Activity: Chrome Tools</span></a></li>
<li><a href="#chapter-046-self-test-4.xhtml"><span
class="toc-chapter-title">Self-Test 4</span></a></li>
<li><a href="#part-006-assistive-technology-testing.xhtml"><span
class="toc-chapter-title">5. Assistive Technology
Testing</span></a></li>
<li><a href="#chapter-047-assistive-technology-testing.xhtml"><span
class="toc-chapter-title">Assistive Technology Testing</span></a></li>
<li><a href="#chapter-048-objectives-and-activities-6.xhtml"><span
class="toc-chapter-title">Objectives and Activities</span></a></li>
<li><a href="#chapter-049-screen-reader-testing-2.xhtml"><span
class="toc-chapter-title">Screen Reader Testing</span></a></li>
<li><a
href="#chapter-050-summary-of-available-screen-readers.xhtml"><span
class="toc-chapter-title">Summary of Available Screen
Readers</span></a></li>
<li><a href="#chapter-051-other-assistive-technologies.xhtml"><span
class="toc-chapter-title">Other Assistive Technologies</span></a></li>
<li><a href="#chapter-052-activity-chromevox.xhtml"><span
class="toc-chapter-title">Activity: Using ChromeVox to Find
Accessibility Features</span></a></li>
<li><a href="#chapter-053-self-test-5.xhtml"><span
class="toc-chapter-title">Self-Test 5</span></a></li>
<li><a href="#part-007-user-testing.xhtml"><span
class="toc-chapter-title">6. User Testing</span></a></li>
<li><a href="#chapter-054-user-testing-2.xhtml"><span
class="toc-chapter-title">User Testing</span></a></li>
<li><a href="#chapter-055-objectives-and-activities-7.xhtml"><span
class="toc-chapter-title">Objectives and Activities</span></a></li>
<li><a href="#chapter-056-involving-user-testers.xhtml"><span
class="toc-chapter-title">Involving User Testers</span></a></li>
<li><a href="#chapter-057-recruiting-user-testers.xhtml"><span
class="toc-chapter-title">Recruiting User Testers</span></a></li>
<li><a href="#chapter-058-developing-a-test-protocol.xhtml"><span
class="toc-chapter-title">Developing a Test Protocol</span></a></li>
<li><a href="#chapter-059-recording-observations.xhtml"><span
class="toc-chapter-title">Recording Observations</span></a></li>
<li><a href="#chapter-060-activity-finding-user-testers.xhtml"><span
class="toc-chapter-title">Activity: Finding User Testers</span></a></li>
<li><a href="#chapter-061-self-test-6.xhtml"><span
class="toc-chapter-title">Self-Test 6</span></a></li>
<li><a href="#part-008-web-accessibility-reporting.xhtml"><span
class="toc-chapter-title">7. Web Accessibility Reporting</span></a></li>
<li><a href="#chapter-062-web-accessibility-audit-reporting.xhtml"><span
class="toc-chapter-title">Web Accessibility Reporting</span></a></li>
<li><a href="#chapter-063-objectives-and-activities-8.xhtml"><span
class="toc-chapter-title">Objectives and Activities</span></a></li>
<li><a href="#chapter-064-choosing-an-audit.xhtml"><span
class="toc-chapter-title">Choosing an Audit</span></a></li>
<li><a href="#chapter-065-informal-reviews.xhtml"><span
class="toc-chapter-title">Informal Reviews</span></a></li>
<li><a
href="#chapter-066-template-audit-and-audit-walk-through.xhtml"><span
class="toc-chapter-title">Template Audit and Audit
Walk-Through</span></a></li>
<li><a href="#chapter-067-general-audits.xhtml"><span
class="toc-chapter-title">General Audits</span></a></li>
<li><a href="#chapter-068-detailed-audits.xhtml"><span
class="toc-chapter-title">Detailed Audits</span></a></li>
<li><a href="#chapter-069-follow-up-audits.xhtml"><span
class="toc-chapter-title">Follow-Up Audits</span></a></li>
<li><a href="#chapter-070-tour-of-an-audit-report.xhtml"><span
class="toc-chapter-title">Tour of an Audit Report</span></a></li>
<li><a
href="#chapter-071-activity-lulus-lollipops-informal-review.xhtml"><span
class="toc-chapter-title">Activity: Lulu's Lollipops Informal
Review</span></a></li>
<li><a href="#chapter-072-self-test-7.xhtml"><span
class="toc-chapter-title">Self-Test 7</span></a></li>
<li><a href="#part-009-other-accessibility-standards.xhtml"><span
class="toc-chapter-title">8. Other Accessibility
Standards</span></a></li>
<li><a href="#chapter-073-other-accessibility-standards.xhtml"><span
class="toc-chapter-title">Other Accessibility Standards</span></a></li>
<li><a href="#chapter-074-objectives-and-activities-9.xhtml"><span
class="toc-chapter-title">Objectives and Activities</span></a></li>
<li><a
href="#chapter-075-wcag-2-0-relation-to-international-web-accessibility-guidelines.xhtml"><span
class="toc-chapter-title">WCAG Relation to International Web
Accessibility Guidelines</span></a></li>
<li><a
href="#chapter-076-atag-2-0-authoring-tool-accessibility-guidelines.xhtml"><span
class="toc-chapter-title">ATAG: Authoring Tool Accessibility
Guidelines</span></a></li>
<li><a
href="#chapter-077-uaag-2-0-user-agent-accessibility-guidelines.xhtml"><span
class="toc-chapter-title">UAAG: User Agent Accessibility
Guidelines</span></a></li>
<li><a href="#chapter-078-iso-iec-24751-accessforall.xhtml"><span
class="toc-chapter-title">ISO/IEC-24751 (AccessForAll)</span></a></li>
<li><a
href="#chapter-079-wai-aria-web-accessibility-initiative-accessible-rich-internet-applications.xhtml"><span
class="toc-chapter-title">WAI-ARIA: Web Accessibility Initiative -
Accessible Rich Internet Applications</span></a></li>
<li><a
href="#chapter-080-activity-web-accessibility-in-your-part-of-the-world.xhtml"><span
class="toc-chapter-title">Activity: Web Accessibility in Your Part of
the World</span></a></li>
<li><a href="#chapter-081-self-test-8.xhtml"><span
class="toc-chapter-title">Self-Test 8</span></a></li>
<li><a href="#back-matter-001-book-recap.xhtml"><span
class="toc-chapter-title">Content Recap</span></a></li>
<li><a href="#back-matter-002-acknowledgements.xhtml"><span
class="toc-chapter-title">Acknowledgements</span></a></li>
<li><a href="#back-matter-003-answers.xhtml"><span
class="toc-chapter-title">Answer Key</span></a></li>
<li><a
href="#back-matter-004-web-accessibility-auditing-toolkit.xhtml"><span
class="toc-chapter-title">Web Accessibility Auditing
Toolkit</span></a></li>
<li><a
href="#back-matter-005-iframe-embedding-content-from-this-resource.xhtml"><span
class="toc-chapter-title">Iframe Embedding Content from this
Resource</span></a></li>
</ul>
</article>
<p><span id="front-matter-001-preface.xhtml"></span></p>
<article>
<div id="front-matter-001-preface.xhtml_preface"
class="front-matter preface">
<div class="front-matter-title-wrap">
<h3 class="front-matter-number">1</h3>
<h1 class="front-matter-title">Preface</h1>
</div>
<div class="ugc front-matter-ugc">
<div>
<!-- pb_fixme -->
<p>This resource was created by the Digital Education Strategies (DES)
team at the G. Raymond Chang School for Continuing Education at Ryerson
University to address a need for professional development training for
web developers on web accessibility. The topic is of critical importance
for technical programs offered by post-secondary institutions, though
rarely covered in formal education.</p>
<p>This resource is an adaptation of the massive open online course
(MOOC) of the same name, developed by The Chang School, and offered
through the Canvas Network in 2016/2017.</p>
<p>The Digital Education Strategies team was responsible for all aspects
of this resource’s production, including instructional design, web
development, video production, and editing.</p>
<p>Special thanks go to DES team member Greg Gay for authoring the
content. Greg has been in the web accessibility field since the
mid-1990s as an auditor and as the lead on many research and development
projects that push the boundaries of accessibility in information
technology. He has been involved in e-learning just as long with more
than 20 online courses to his name.</p>
<p>Funding for this project was provided by the Government of Ontario’s
Enabling Change Program. An advisory committee made up of experts from
the disability and accessibility community in the Toronto area provided
feedback and support in conceptualizing the offering.</p>
<p>Although the context for this resource is Ontario, Canada, and it
includes some discussion of the <em>Accessibility for Ontarians with
Disabilities Act</em> (AODA),  it will be relevant to a global audience.
Accessibility as it applies to the AODA applies in other jurisdictions
through the Web Content Accessibility Guidelines (WCAG 2.0), which the
AODA web accessibility requirements are based upon.</p>
<p>Though aimed at educating web developers about accessibility, the
learning materials here will be of interest to anyone who wants to
understand how barriers on the Web affect access for people with
disabilities. What you’ll learn here goes well beyond accommodating
people with disabilities. Like many other so-called adaptations (e.g.,
curb cuts discussed in Unit 1), efforts that go into making the Web more
accessible to people with disabilities make it more usable for
everyone.</p>
<p>Likewise, the business arguments for accessibility are about more
than complying with the law or accommodating people with disabilities.
They are about reaching the broadest audience possible. People with
disabilities have family and friends who together will go elsewhere if
they are unable to effectively access a website. When you consider that
people with disabilities make up nearly 15% of the population (WHO),
including family, relatives, and acquaintances, that number can reach
50% of the population. Most businesses can’t afford to serve only 50% of
their potential customer base.</p>
<p>Web accessibility, and digital accessibility in general, just makes
good sense, no matter how you look at it.</p>
<p>What are people saying?</p>
<ul>
<li><em>Hearing people from Australia, the U.K., Europe speak about
accessibility and provide their insights was interesting; it wasn’t just
about people from Canada and particularly Ontario because this is where
we happen to be.</em></li>
<li><em>This course was much more than I expected. It was very
comprehensive, provided a lot of relevant examples, and also helped
build some tools to continue to reinforce what I learned.</em></li>
<li><em>The course is extremely thorough and covers a lot of
information. It’s well organized and it shows dedication and
professionalism from the team that put it together. It’s a real jewel. I
could not have found a better place to get up to date on these topics.
Moreover I’ve been collecting throughout the lessons a lot of
documentation and tools that will be very useful in the future. It’s an
eye-opener</em>.</li>
</ul>
<p> </p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="part-001-introduction.xhtml"></span></p>
<article>
<div id="part-001-introduction.xhtml_introduction" class="part">
<div class="part-title-wrap">
<h3 class="part-number"></h3>
<h1 class="part-title">Introduction</h1>
</div>
</div>
</article>
<p><span id="chapter-001-learning-outcomes.xhtml"></span></p>
<article>
<div id="chapter-001-learning-outcomes.xhtml_learning-outcomes"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Introduction</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2>Learning Outcomes</h2>
<p>Welcome to Professional Web Accessibility Auditing Made Easy! By the
time you finish reviewing the materials here, and trying the activities,
you should be able to:</p>
<ul>
<li>Create an accessibility auditing toolkit</li>
<li>Identify and apply key accessibility guidelines in WCAG 2.0/2.1</li>
<li>Retrieve WCAG supporting documents when needed</li>
<li>Employ web-based automated accessibility checkers</li>
<li>Measure and/or assess web design elements such as colour contrast,
readability, and more, using a range of publicly available test
tools</li>
<li>Test for accessibility using assistive technologies such as the JAWS
and ChromeVox screen readers</li>
<li>Use a screen reader to navigate the Web</li>
<li>Apply easy manual tests to quickly assess accessibility</li>
<li>Select an appropriate type of web accessibility audit and
corresponding reporting strategy aimed at the audience being served</li>
<li>Recognize relevant accessibility guidelines, standards, and
specifications and integrate these into accessibility review strategies
based on international requirements</li>
</ul>
<h2>Required Technology</h2>
<p>In order to practice what you’re learning as you follow along here,
you will need to use the following software:</p>
<ul>
<li>Chrome web browser (and the ChromeVox screen reader, for which links
and installation instructions will be provided in unit 2)</li>
<li>A word processing application (e.g., Microsoft Word, OpenOffice, or
Google Docs)</li>
<li>A PDF reader (e.g., Adobe Reader)</li>
</ul>
<h2>Beyond What You’ll Learn Here</h2>
<p>For those who would like to go beyond what they’ve learned in the
materials here, The Chang School has created a series of resources on
web accessibility for different audiences:</p>
<ul>
<li><a href="https://de.ryerson.ca/wa/introduction">Introduction to Web
Accessibility</a> (<a
href="https://pressbooks.library.ryerson.ca/iwacc">web ebook
verison</a>)</li>
<li><a href="https://de.ryerson.ca/wa/business" target="_blank"
rel="noopener noreferrer">Digital Accessibility as a Business
Practice</a> (<a href="https://pressbooks.library.ryerson.ca/dabp"
target="_blank" rel="noopener noreferrer">web ebook version</a>)</li>
<li><a href="https://de.ryerson.ca/wa/advanced" target="_blank"
rel="noopener noreferrer">Web Accessibility for Developers</a> (<a
href="https://pressbooks.library.ryerson.ca/wafd" target="_blank"
rel="noopener noreferrer">web ebook version</a>)</li>
<li><a href="https://de.ryerson.ca/wa/documents" target="_blank"
rel="noopener noreferrer">Understanding Document Accessibility</a> (<a
href="https://pressbooks.library.ryerson.ca/docs">web ebook
version</a>)</li>
</ul>
<h2>Disclaimer</h2>
<p>The information presented here and any related materials referred to
in the content are for instructional purposes only and should not be
construed as legal advice on any particular issue, including compliance
with relevant laws. We specifically disclaim any liability for any loss
or damage any reader may suffer as a result of the information
contained.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-002-objectives-and-activities.xhtml"></span></p>
<article>
<div
id="chapter-002-objectives-and-activities.xhtml_objectives-and-activities"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Objectives and Activities</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2>Objectives <span class="nosee"><img
src="OEBPS/assets/checklist-e1516288820283-1.png"
class="size-full wp-image-74 alignright" width="100"
height="101" /></span></h2>
<p>By the end of this unit, you should be able to:</p>
<ul>
<li>Identify the key strategies for using this learning resource.</li>
</ul>
<h2>Activities</h2>
<ul>
<li>Begin to set up your Web Accessibility Auditing Toolkit</li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-003-this-book-will-be-helpful-to.xhtml"></span></p>
<article>
<div
id="chapter-003-this-book-will-be-helpful-to.xhtml_this-book-will-be-helpful-to"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">The Information Here Will Be Helpful
To...</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>This is aimed at those who are responsible for implementing
accessibility on an organization’s website. These people tend to be
<strong>web developers</strong> (sometimes referred to as webmasters)
but may also include <strong>web content editors</strong> and
<strong>web designers</strong> who are comfortable using HTML, CSS, and
to some degree, JavaScript.</p>
<h2>Web Developers</h2>
<p>Web developers should <strong>focus on understanding the
technical</strong> content, but also <strong>be familiar with the
general</strong> content. That is, all of the information here will be
relevant to you.</p>
<h2>Everyone Else</h2>
<p>If you are not a web developer, depending on your background and
level of comfort with web technologies, you may choose to <strong>skip
over the technical parts</strong>, presented within the content in blue
boxes and marked as Technical. Review the Table of Contents for a full
list of topics. You can focus your study on the general content,
completing the activities and setting up a Web Accessibility Auditing
Toolkit, and, having made your way through all the reading and
activities, come away with a good understanding of the requirements for
developing accessible web content.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-004-getting-the-most-out-of-the-book.xhtml"></span></p>
<article>
<div
id="chapter-004-getting-the-most-out-of-the-book.xhtml_getting-the-most-out-of-the-book"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Choosing Your Learning Path</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>As we mentioned earlier, depending on your role in your company or
organization, different parts of the material may be more relevant to
you than others. We’ve tried to identify the technical content in
particular so you can pass over these parts if they are less relevant to
you or you are trying to budget your time. To help you navigate to the
information most relevant to your needs, we have colour-coded and
labelled the technical content as follows. Content that does not appear
in coloured boxes is aimed at everyone.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0be">
<strong>Technical:</strong> Aimed more at web development staff,
typically containing HTML code samples.
</div>
<h2>Lulu’s Lollipops Storyline</h2>
<div
style="margin: 1em 0;padding: 1em;background-color: #fff5cc;border: 1px solid #ddd">
<span class="nosee"><img
src="OEBPS/assets/striped_lollipop_morgaine1976-300px-150x150-1-e1521733755321.png"
class="size-full wp-image-75 alignleft" width="50"
height="50" /></span>To support your understanding of the materials, the
fictional story of an Ontario-based company, Lulu’s Lollipops, has been
weaved throughout the content to add a sense of realism. The story
unfolds as Lulu investigates the steps involved in improving the
accessibility of the Lulu’s Lollipops website. In the story you will
hear about Lulu’s team members – people just like you who want to learn
more about web accessibility. Imagine that Lulu’s team have all
downloaded this resource as a book. Lulu has a webmaster, who will
closely follow the <strong>Technical</strong> information that is
shared. Lulu also has a number of Customer Service Representatives, who,
as part of their role in supporting clients, have a
<strong>general</strong> interest in ensuring that the company and its
website serve the needs of everyone. Visit the current <strong><a
href="https://de.ryerson.ca/wa/lulu" target="_blank"
rel="noopener noreferrer">Lulu’s Lollipops Website</a></strong> to
familiarize yourself with it. You will be conducting an accessibility
audit of the site in a later unit.
</div>
<h2>Your Web Accessibility Auditing Toolkit</h2>
<p>Throughout the content, we’ve also identified elements that should be
added to the Web Accessibility Auditing Toolkit you will be assembling.
These elements will include links to resource documents and online tools
used during auditing activities, as well as software or browser plugins
that you may need to install. These will be identified in a green
Toolkit box like the following:</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<strong>Toolkit:</strong> Provides useful tools and resources for your
future reference.
</div>
<h3>Key Points</h3>
<p>Throughout you will see important or notable information highlighted
and labelled in Key Point boxes like the one that follows. These will
include “must know” information, as well as less obvious considerations
and interesting points.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Must-know information and interesting
points.
</div>
<h3>Try This</h3>
<p><span style="font-weight: 400">Try This boxes contain activities
designed to get you thinking or give you firsthand experience with
something you’ve just read about.</span></p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #b9f">
<strong>Try This:</strong> Something to experience.
</div>
<h3>Readings and References</h3>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<strong>Readings and References:</strong> Links to various web resources
for <strong>additional reading</strong> on the topics being discussed.
</div>
<p> </p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #b9f">
<strong>Try This:</strong> Skip ahead to the end of the materials here
and <a href="#back-matter-001-book-recap.xhtml" target=""
rel="noopener noreferrer" title="Content Recap"><span
style="text-decoration: underline"><strong>read through the Content
Recap</strong></span></a> for a high-level summary of the topics
covered.
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-005-lulus-story-begins.xhtml"></span></p>
<article>
<div id="chapter-005-lulus-story-begins.xhtml_lulus-story-begins"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Why Learn About Web Accessibility
Auditing?</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2>Lulu’s Story Begins</h2>
<div
style="margin: 1em 0;padding: 1em;background-color: #fff5cc;border: 1px solid #ddd">
<p><span class="nosee"><img
src="OEBPS/assets/striped_lollipop_morgaine1976-300px-150x150-1-e1521733755321.png"
class="size-full wp-image-75 alignleft" width="50"
height="50" /></span>Lulu’s Lollipops is a thriving business, with 52
employees, based out of Hamilton, Ontario, Canada. Lulu’s business is
primarily web-based and has been operating for ten years selling
lollipops of various shapes, sizes, colours, and flavours. A
representative of a charitable organization has approached Lulu about
placing a large order for lollipops that would be part of an upcoming
fundraising campaign. As part of the charity’s mandate, the
representative has asked about the accessibility of Lulu’s website to
ensure that staff from different chapters of the charity can easily
place orders. Lulu realizes that she has never really considered the
accessibility of her website and, based on a recommendation from a
friend, Lulu decides to enrol herself and a number of her team members
in Web Accessibility Auditing Made Easy.</p>
<p>As a business owner, Lulu understands that there are some provincial
guidelines she should consider as she works to accommodate the needs of
her potential client (the charitable organization), but she still
wonders why it makes sense to modify the website that has already served
her company so well for over 10 years. Lulu and her team need to think
about three important things: “curb cuts,” the business case, and the
AODA. Read on to learn more about these compelling factors related to
investment in web accessibility. View the <a
href="https://de.ryerson.ca/wa/lulu" target="_blank"
rel="noopener noreferrer">Lulu’s Lollipops website</a>.</p>
</div>
<h2><span
id="chapter-005-lulus-story-begins.xhtml_curb-cuts"></span>Curb
Cuts</h2>
<p>Think about “curb cuts,” a great example of what is often thought of
as universal design. Curb cuts were originally added to streets to
accommodate those in wheelchairs so they could get from the road up onto
a sidewalk and vice versa. But curb cuts are helpful for many people —
not just those in wheelchairs. A person pushing a baby stroller can now
easily get to the sidewalk. A person riding a bike can get more easily
onto the sidewalk where the bike lockups are located. An elderly person
who may have difficulty stepping up on a curb or who may be using a
walker now has a smooth gradient and can walk onto the sidewalk rather
than climb onto it. Curb cuts were designed to help those in wheelchairs
but have come to benefit many.</p>
<p>From a web accessibility perspective, most of the accessibility
features you might add to a website will have that so-called “curb cut
effect.” For example, the text description one might include with an
image to make the image’s meaning accessible to a person who is blind
also makes it possible for search engines to index the image and make it
searchable. It allows a person on a slow Internet connection to turn
images off and still get the same information. Or, it allows a person
using a text-based browser, on a cell phone for instance, to access the
same information as those using a typical visual browser. Virtually
every such feature that might be put in place in web content to
accommodate people with disabilities will improve access and usability
for everyone else.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Think of accommodations provided to improve
web accessibility for people with disabilities as “curb cuts.” They will
very likely improve usability for everyone.
</div>
<h2>The Business Case for Web Accessibility</h2>
<p>Karl Groves wrote an interesting series of articles in 2011 and 2012
that looked at the reality of business arguments for web accessibility.
He points out that any argument needs to answer affirmatively at least
one of the following questions:</p>
<ol>
<li>Will it make us money?</li>
<li>Will it save us money?</li>
<li>Will it reduce risk?</li>
</ol>
<p>He outlines a range of potential arguments for accessibility:</p>
<ul>
<li><strong>Improved search engine optimization:</strong> Customers will
be able to find your site more easily because search engines can index
it more effectively.</li>
<li><strong>Improved usability:</strong> Customers will have a more
satisfying experience and thus spend more on or return more often to
your site.</li>
<li><strong>Reduced website costs:</strong> Developing to standard
reduces bugs and interoperability issues, reducing development costs and
problems integrating with other systems.</li>
<li><strong>People with disabilities have buying power:</strong> They
won’t spend if they have difficulty accessing your site; they will go to
the competition that <em>does</em> place importance on
accessibility.</li>
<li><strong>Reduced resource utilization:</strong> Building to standard
reduces the use of resources.</li>
<li><strong>Support for low bandwidth:</strong> If your site takes too
long to load, people will go elsewhere.</li>
<li><strong>Social responsibility:</strong> Customers will come if they
see you doing good for the world and you think of people with
disabilities as full citizens.</li>
<li><strong>Support for aging populations:</strong> Aging populations
also have money to spend and will come to your site over the less
accessible, less usable competition.</li>
<li><strong>Reduced legal risk:</strong> You may be sued if you prevent
equal access for citizens/customers or discriminate against people with
disabilities.</li>
</ul>
<p>What accessibility really boils down to is “quality of work,” as
Groves states. So, in approaching web accessibility, one may be better
off not thinking so much in terms of reducing the risk of being sued or
losing customers because your site takes too long to load, but rather
that the work you do is quality work and the website you present to your
potential customers is a quality website.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=jZySw1HSR0Y"
target="_blank" rel="noopener noreferrer">The Business Case for
Accessibility</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault.jpg"
title="The Business Case for Accessibility"
alt="Thumbnail for the embedded element &quot;The Business Case for Accessibility&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1152#pb-interactive-content"
title="The Business Case for Accessibility">https://pressbooks.library.ryerson.ca/pwaa/?p=1152</a></p>
</div>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<p><strong>Readings and References:</strong><br />
If you’d like to learn more about business cases, here are a few
references:</p>
<ul>
<li><a href="http://www.w3.org/WAI/bcase" target="_blank"
rel="noopener noreferrer">Developing a Web Accessibility Business Case
for Your Organization (W3C)</a></li>
<li><a
href="http://www.karlgroves.com/2011/04/13/chasing-the-accessibility-business-case-part-1"
target="_blank" rel="noopener noreferrer">Chasing the Web Accessibility
Business Case (Karl Groves, 2012) part 1</a></li>
<li><a
href="http://www.karlgroves.com/2011/09/22/chasing-the-accessibility-business-case-part-2"
target="_blank" rel="noopener noreferrer">Chasing the Web Accessibility
Business Case (Karl Groves, 2012) part 2</a></li>
<li><a
href="http://www.karlgroves.com/2012/01/27/chasing-the-accessibility-business-case-conclusion"
target="_blank" rel="noopener noreferrer">Chasing the Web Accessibility
Business Case (Karl Groves, 2012) conclusion</a></li>
<li><a
href="https://www.akamai.com/us/en/about/news/press/2009-press/akamai-reveals-2-seconds-as-the-new-threshold-of-acceptability-for-ecommerce-web-page-response-times.jsp"
target="_blank" rel="noopener noreferrer">2 Seconds as the New Threshold
of Acceptability for eCommerce Web Page Response Times (Akamai,
2009)</a></li>
<li><a
href="http://martinprosperity.org/releasing-constraints-the-impacts-of-increased-accessibility-on-ontarios-economy"
target="_blank" rel="noopener noreferrer">Releasing Constraints: The
Impacts of Increased Accessibility on Ontario’s Economy
(Summary)</a></li>
<li><a
href="http://martinprosperity.org/media/ReleasingConstraints_June22.pdf"
target="_blank" rel="noopener noreferrer">Releasing Constraints:
Projecting the Economic Impacts of Increased Accessibility in Ontario
(Full Report) [PDF]</a></li>
</ul>
</div>
<h2> AODA Background</h2>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=KWLO80DDW3s"
target="_blank" rel="noopener noreferrer">AODA
Background</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-1.jpg" title="AODA Background"
alt="Thumbnail for the embedded element &quot;AODA Background&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1152#pb-interactive-content"
title="AODA Background">https://pressbooks.library.ryerson.ca/pwaa/?p=1152</a></p>
</div>
<p>For those in Ontario, Canada, we’ll provide occasional references to
the <em>Accessibility for Ontarians with Disabilities Act</em> (AODA).
If you’re from outside Ontario, you might compare the AODA’s web
accessibility requirements with those in your local area. They will be
similar in many cases, likely based on the W3C WCAG 2.0 Guidelines. The
goal in Ontario is for all obligated organizations to meet the Level AA
accessibility requirements of WCAG 2.0 by 2021, which, ultimately, is
the goal of most international jurisdictions.</p>
<p>The AODA provided the motivation to create this resource, based on
the MOOC course of the same name. All businesses and organizations in
Ontario with more than 50 employees (and all public sector
organizations) are now required by law to make their websites accessible
to people with disabilities (currently at WCAG 2.0 Level A). Many
businesses still don’t know what needs to be done in order to comply
with the new rules. This resource hopes to fill some of that need.</p>
<p>The AODA has its roots in the <em>Ontario Human Rights Code</em>,
introduced in 1990. It essentially made it illegal to discriminate based
on disability (among other forms of discrimination). The development of
the AODA began in earnest in 1994 with the emergence of the
<em>Ontarians with Disabilities Act</em> (ODA). Its aim was to legislate
the removal and prevention of barriers that inhibit people with
disabilities from participating as full members of society, improving
access to employment, goods and services, and facilities. The act was
secured as law in 2001.</p>
<p>With the election of a new government in 2003, the movement that
brought us the ODA sought to strengthen the legislation. The
Accessibility Standards Advisory Council was established, and the AODA
was passed as law in 2005, and in July of 2011 the Integrated
Accessibility Standards Regulation (IASR) brought together the five
standards of the AODA, covering Information and Communication,
Employment, Transportation, and Design of Public Spaces, in addition to
the original Customer Service standard.</p>
<p>The AODA sets out to make Ontario fully accessible by
<strong>2025</strong>, with an incremental roll-out of accessibility
requirements over a period of 20 years. These requirements span a whole
range of accessibility considerations — from physical spaces to customer
service, the Web, and much more.</p>
<p>Our focus here is on access to the Web. The timeline set out in the
AODA requires government and large organizations to remove all barriers
in web content between 2012 and 2021. The timeline for these
requirements is outlined in the table below. Any new or significantly
updated information posted to the Web must comply with the given level
of accessibility by the given date. This includes both Internet and
intranet sites. Any content developed prior to January 1, 2012 is
exempt.</p>
<table class="addborder"
style="margin-left: auto;margin-right: auto;width: 100%">
<thead>
<tr class="header border">
<th style="text-align: center;"></th>
<th style="text-align: left;">Level A</th>
<th style="text-align: left;">Level AA</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left; vertical-align: top;">Government</td>
<td style="text-align: left; vertical-align: top;">January 1, 2012
(except live captions and audio description)</td>
<td style="text-align: left; vertical-align: top;">January 1, 2016
(except live captions and audio description), January 1, 2020 (including
live captions and audio description)</td>
</tr>
<tr class="even">
<td style="text-align: left; vertical-align: top;">Designated
Organizations*</td>
<td style="text-align: left; vertical-align: top;">Beginning January 1,
2014, <span
style="text-decoration: underline"><strong>new</strong></span> websites
and significantly refreshed websites must meet Level A (except live
captions and audio description)</td>
<td style="text-align: left; vertical-align: top;">January 1, 2021
(except live captions and audio description)</td>
</tr>
<tr class="odd">
<td colspan="3" style="text-align: left;">*Designated organizations
means every municipality and every person or organization as outlined in
the <em>Public Service of Ontario Act 2006</em> Reg. 146/10, or private
companies or organizations with 50 or more employees, in Ontario.</td>
</tr>
</tbody>
</table>
<p>For more about the AODA you can review the following references:</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<p><strong>Readings and References:</strong></p>
<ul>
<li><a
href="http://accessibilitynews.ca/acnews/coaac/history/oda_history.php"
target="_blank" rel="noopener noreferrer">History of the <em>Ontarians
with Disabilities Act</em>. (ODA) (David Lepofsky)</a></li>
<li><a href="http://www.ontario.ca/laws/regulation/r11191#BK15"
target="_blank" rel="noopener noreferrer">Integrated Accessibility
Standards Regulation</a></li>
<li><a href="http://www.ontario.ca/laws/regulation/100146"
target="_blank" rel="noopener noreferrer">Reg. 146/10: PUBLIC BODIES AND
COMMISSION PUBLIC BODIES – DEFINITIONS</a></li>
</ul>
</div>
<p> </p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-006-activity.xhtml"></span></p>
<article>
<div id="chapter-006-activity.xhtml_activity" class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Activity: Start Your Web Accessibility
Auditing Toolkit</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p><span class="nosee"> <img src="OEBPS/assets/activity-2.png"
class="size-full wp-image-161 alignright" width="125" height="131" />
</span></p>
<p>The Toolkit you will assemble will be made up of various tools and
resources you can use when assessing web content. It will include links
to documents, tools, and examples you can refer to as needed while
auditing.</p>
<p>For the first activity, <strong>create a folder in your browser’s
bookmarks/favourites area</strong> called “Accessibility Toolkit.” You
will add the tools and resources introduced here to this folder.</p>
<p>Remember that suggestions for your Toolkit throughout the content
will be highlighted in green and labelled “Toolkit.”</p>
<p><br />
</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="part-002-aspects-of-web-accessibility-auditing.xhtml"></span></p>
<article>
<div
id="part-002-aspects-of-web-accessibility-auditing.xhtml_aspects-of-web-accessibility-auditing"
class="part">
<div class="part-title-wrap">
<h3 class="part-number"></h3>
<h1 class="part-title">1. Aspects of Web Accessibility Auditing</h1>
</div>
</div>
</article>
<p><span id="chapter-007-introduction.xhtml"></span></p>
<article>
<div id="chapter-007-introduction.xhtml_introduction"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Aspects of Web Accessibility Auditing</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>In this unit, in order to provide a foundation for your studies and
activities, we identify and explain the key considerations and aspects
of web accessibility review work. This overview will include topics such
as:</p>
<ul>
<li>Types of disabilities and common barriers encountered in web
content</li>
<li>The tools and testing strategies used in detailed web accessibility
auditing</li>
<li>Thinking beyond accessibility testing</li>
<li>The W3C Web Content Accessibility Guidelines (WCAG 2.0)</li>
</ul>
<p>We will look at numerous non-technical and technical aspects of web
accessibility auditing. The following sections will provide a foundation
of understanding for the units that follow.</p>
<p>Watch the following video from the Government of Australia that
summarizes web accessibility. Although the video is from Australia, its
ideas are applicable globally. Visit the <a
href="https://www.youtube.com/watch?v=bEM9Fn9aOG8" target="_blank"
rel="noopener noreferrer">YouTube site for the video</a> to find the
described transcript in full.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=bEM9Fn9aOG8"
target="_blank" rel="noopener noreferrer">Web
Accessibility</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-2.jpg" title="Web Accessibility"
alt="Thumbnail for the embedded element &quot;Web Accessibility&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1166#pb-interactive-content"
title="Web Accessibility">https://pressbooks.library.ryerson.ca/pwaa/?p=1166</a></p>
</div>
<p><span class="small">© Department of Social Services, Australian
Government.<br />
Released under the terms of a Standard YouTube License. All rights
reserved.</span></p>
<p>There are many ways to assess accessibility that are not technical in
nature. Some of these will be introduced here and expanded on in the
units that follow. These strategies simply require some thought,
reflection, and ultimately, common sense.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-008-types-of-disabilities-and-barriers.xhtml"></span></p>
<article>
<div
id="chapter-008-types-of-disabilities-and-barriers.xhtml_types-of-disabilities-and-barriers"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Types of Disabilities and Barriers</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div
style="margin: 1em 0;padding: 1em;background-color: #fff5cc;border: 1px solid #ddd">
<p><span class="nosee"><img
src="OEBPS/assets/striped_lollipop_morgaine1976-300px-150x150-1-e1521733755321.png"
class="size-full wp-image-75 alignleft" width="50"
height="50" /></span>Lulu is feeling very positive about the idea that
her business, and the website of which she is so proud, could soon be
more accessible and easier for all of her customers to use. This brings
her to the predictable question of “Where do we begin?” Lulu should
start by getting a firm grasp on “the big picture” in terms of what
barriers people might encounter on her website and why. From there she
can begin to build practical knowledge that will support her next steps.
Take a look at the content that follows to better understand the
foundation of information that Lulu and her team will require. In order
to understand what web accessibility auditing tests for and why, it is
helpful to have a basic understanding of a range of disabilities and
their related barriers with respect to the consumption of web
content.</p>
</div>
<p>Not all people with disabilities encounter barriers on the Web, and
<strong>those with different types of disabilities encounter different
types of barriers</strong>. For instance, if a person is in a wheelchair
they may encounter no barriers at all in web content. A person who is
blind will experience different barriers than a person with limited
vision. Different types of disabilities and some of their commonly
associated barriers are described here.</p>
<p>Watch the following video to see how students with disabilities
experience the Internet.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=BEFgnYktC7U"
target="_blank" rel="noopener noreferrer">Experiences of a Student with
Disabilities</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-3.jpg"
title="Experiences of Students with Disabilities"
alt="Thumbnail for the embedded element &quot;Experiences of Students with Disabilities&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1172#pb-interactive-content"
title="Experiences of Students with Disabilities">https://pressbooks.library.ryerson.ca/pwaa/?p=1172</a></p>
</div>
<p><span class="small">© Jared Smith. Released under the terms of a
Standard YouTube License. All rights reserved.</span></p>
<p>In this video, David Berman talks about types of disabilities and
their associated barriers.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=Wl9PGvTDVQ8"
target="_blank" rel="noopener noreferrer">Web Accessibility Matters:
Difficulties and Technologies: Avoiding Tradeoffs</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-4.jpg"
title="Web Accessibility Matters: Difficulties and Technologies: Avoiding Tradeoffs"
alt="Thumbnail for the embedded element &quot;Web Accessibility Matters: Difficulties and Technologies: Avoiding Tradeoffs&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1172#pb-interactive-content"
title="Web Accessibility Matters: Difficulties and Technologies: Avoiding Tradeoffs">https://pressbooks.library.ryerson.ca/pwaa/?p=1172</a></p>
</div>
<p><span class="small">© davidbermancom. Released under the terms of a
Standard YouTube License. All rights reserved.</span></p>
<h2>People Who Are Blind</h2>
<p>People who are blind tend to face many barriers in web content, given
the visual nature of the Web. They will often use a screen reader to
access their computer or device and may use a refreshable Braille
display to convert text to Braille.</p>
<p>Common barriers for this group include:</p>
<ul>
<li>Visual content that has no text alternative</li>
<li>Functional elements that cannot be controlled with a keyboard</li>
<li>Overly complex or excessive amounts of content</li>
<li>Inability to navigate within a page of content</li>
<li>Content that is not structured</li>
<li>Inconsistent navigation</li>
<li>Time limits (insufficient time to complete tasks)</li>
<li>Unexpected actions (e.g., redirect when an element receives
focus)</li>
<li>Multimedia without audio description</li>
</ul>
<p>For a quick look at how a person who is blind might use a screen
reader like JAWS to navigate the Web, watch the following video.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=-GPNTctdezg"
target="_blank" rel="noopener noreferrer">Accessing the Web Using Screen
Reading Software</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-5.jpg"
title="Accessing the web using screen reading software"
alt="Thumbnail for the embedded element &quot;Accessing the web using screen reading software&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1172#pb-interactive-content"
title="Accessing the web using screen reading software">https://pressbooks.library.ryerson.ca/pwaa/?p=1172</a></p>
</div>
<p><span class="small">© rscnescotland. Released under the terms of a
Standard YouTube License. All rights reserved.</span></p>
<h2>People with Low Vision</h2>
<p>People with low vision are often able to see web content if it is
magnified. They may use a screen magnification program to increase the
size and contrast of the content to make it more visible. They are less
likely to use a screen reader than a person who is blind, though in some
cases they will. People with low vision may rely on the magnification or
text customization features in their web browser, or they may install
other magnification or text reading software.</p>
<p>Common barriers for this group include:</p>
<ul>
<li>Content sized with absolute measures that is not resizable</li>
<li>Inconsistent navigation</li>
<li>Images of text that degrade or pixelate when magnified</li>
<li>Low contrast (inability to distinguish text from background)</li>
<li>Time limits (insufficient time to complete tasks)</li>
<li>Unexpected actions (e.g., redirect when an element receives
focus)</li>
</ul>
<p>See the following video for a description of some of the common
barriers for people with low vision.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=wUwap8vuMkU"
target="_blank" rel="noopener noreferrer">Creating an Accessible
Web</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-6.jpg"
title="Creating an accessible web (AD)"
alt="Thumbnail for the embedded element &quot;Creating an accessible web (AD)&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1172#pb-interactive-content"
title="Creating an accessible web (AD)">https://pressbooks.library.ryerson.ca/pwaa/?p=1172</a></p>
</div>
<p><span class="small">© Media Access Australia. Released under the
terms of a Standard YouTube License. All rights reserved.</span></p>
<h2>People Who Are Deaf or Hard of Hearing</h2>
<p>Most people who are Deaf tend to face barriers where audio content is
presented without text-based alternatives and encounter relatively few
barriers on the Web otherwise. Those who are Deaf and blind will face
many more barriers, including those described for people who are blind.
For those who communicate with American Sign Language (ASL) or other
sign languages, such as L<span lang="fr">angue des signes
québécoise</span> (LSQ), the written language of a website may produce
barriers similar to those faced when reading in a second language.</p>
<p>Common barriers for this group include:</p>
<ul>
<li>Audio without a transcript</li>
<li>Multimedia without captions or transcript</li>
<li>Lack of ASL interpretation (for ASL/Deaf community)</li>
</ul>
<h2>People with Mobility-Related Disabilities</h2>
<p>Mobility-related disabilities are quite varied. As mentioned earlier,
one could be limited to a wheelchair for getting around and face no
significant barriers in web content. Those who have limited use of their
hands or who have fine motor impairments that limit their ability to
target elements in web content with a mouse pointer may not use a mouse
at all. Instead, they might rely on a keyboard or perhaps their voice,
along with switches to control mouse clicks, to control movement through
web content.</p>
<p>Common barriers for this group include:</p>
<ul>
<li>Clickable areas that are too small</li>
<li>Functional elements that cannot be controlled with a keyboard</li>
<li>Time limits (insufficient time to complete tasks)</li>
</ul>
<h2>People with Learning or Cognitive Disabilities</h2>
<p>Learning and cognitive-related disabilities can be as varied as
mobility-related disabilities, perhaps more so. These disabilities can
range from a mild reading-related disability to very severe cognitive
impairments that may result in limited use of language and difficulty
processing complex information. For most of the disabilities in this
range, there are some common barrier and others that only affect those
with more severe cognitive disabilities.</p>
<p>Common barriers for this group include:</p>
<ul>
<li>Use of overly-complex/advanced language</li>
<li>Inconsistent navigation</li>
<li>Overly complex or excessive amounts of content</li>
<li>Time limits (insufficient time to complete tasks)</li>
<li>Unstructured content (no visible headings, sections, topics,
etc.)</li>
<li>Unexpected actions (e.g., redirect when an element receives
focus)</li>
</ul>
<p>More specific disability-related issues include:</p>
<ul>
<li>Reading: text justification (inconsistent spacing between
words)</li>
<li>Reading: images of text (not readable with a text reader)</li>
<li>Visual: visual content with no text description</li>
<li>Math: images of math equations (not readable with a math
reader)</li>
</ul>
<h2>Everyone</h2>
<p>While we generally think of barriers in terms of access for people
with disabilities, there are some barriers that impact all types of
users, though these are often thought of in terms of usability.
Usability and accessibility go hand-in-hand. Adding accessibility
features improves usability for others. Many people, including those who
do not consider themselves to have a specific disability (such as those
over the age of 50) may find themselves experiencing typical age-related
loss of sight, hearing, or cognitive ability. Those with varying levels
of colour blindness may also fall into this group.</p>
<p>Some of these usability issues include:</p>
<ul>
<li>Link text that does not describe the destination or function of the
link</li>
<li>Overly complex content</li>
<li>Inconsistent navigation</li>
<li>Low contrast</li>
<li>Unstructured content</li>
</ul>
<p>To learn more about disabilities and associated barriers, read the
following:</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<strong>Readings and References:</strong> <a
href="http://www.w3.org/WAI/intro/people-use-web" target="_blank"
rel="noopener noreferrer">How People with Disabilities Use the Web</a>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-009-common-sense.xhtml"></span></p>
<article>
<div id="chapter-009-common-sense.xhtml_common-sense"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Common Sense</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>Gaining awareness of the potential for barriers in web content takes
many forms. Perhaps you read a book to educate yourself. Maybe your
workplace has sponsored training in this area. Or, you may know someone
who experiences these barriers firsthand and who has shared their
frustrations or insights with you. In Lulu’s case, a prospective client
drew her attention to the issue. No matter how you gain your awareness,
it is important that breaking down the barriers becomes both common
sense and common practice.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Common sense may require personal experience
before it becomes common sense. Seek out ways to interact with assistive
technology and those who use it.
</div>
<p>If you’ve never used assistive technology yourself, or interacted
with someone who does, take a moment for the video below and visit his
YouTube channel <a
href="https://www.youtube.com/channel/UCld5SlwHrXgAYRE83WJOPCw"
target="_blank" rel="noopener noreferrer">The Blind Film Critic</a> for
a humorous look at being blind.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=UzffnbBex6c"
target="_blank" rel="noopener noreferrer">How a Blind Person Uses a
Computer</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-7.jpg"
title="How A Blind Person Uses A Computer"
alt="Thumbnail for the embedded element &quot;How A Blind Person Uses A Computer&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1194#pb-interactive-content"
title="How A Blind Person Uses A Computer">https://pressbooks.library.ryerson.ca/pwaa/?p=1194</a></p>
</div>
<p><span class="small">© The Tommy Edison Experience. Released under the
terms of a Standard YouTube License. All rights reserved.</span></p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-010-things-to-watch-for.xhtml"></span></p>
<article>
<div id="chapter-010-things-to-watch-for.xhtml_things-to-watch-for"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Things to Watch For</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div
style="margin: 1em 0;padding: 1em;background-color: #fff5cc;border: 1px solid #ddd">
<p><span class="nosee"><img
src="OEBPS/assets/striped_lollipop_morgaine1976-300px-150x150-1-e1521733755321.png"
class="size-full wp-image-75 alignleft" width="50"
height="50" /></span>It is important for Lulu and her team to realize
that the barriers that exist in their web content are not necessarily
unique and that one thing that simplifies the job of a web accessibility
auditor is that there are a relatively small number of <strong>issues
that occur over and over again</strong>. Being aware of these common
barriers means it is often possible to quickly scan through content and
identify most accessibility issues. Lulu and her webmaster should become
familiar with the following list of the top ten potential barriers to
watch for, and you should too! It is by no means a complete list, but
represents the most common accessibility problems.</p>
</div>
<h2>1. Images without a Text Description</h2>
<p>Images without a text description will be inaccessible to those who
are blind. Text descriptions are typically added using the
<strong><code>"alt"</code> attribute</strong> with the HTML img element.
Note that the length of alt text should be no longer than 125
characters. Screen readers will typically stop reading the text at that
point. If <strong>a longer description</strong> is needed, there are a
variety of ways to describe the image further, either in the surrounding
text, in a figure caption, or using the ARIA attribute aria-describedby.
ARIA will be discussed further in <strong>Unit 8</strong>. In each case
alt would still be used to provide a brief description and refer to the
longer description elsewhere.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0be">
<p><strong>Technical:</strong> Using the alt attribute to refer to a
longer description
<code>&lt;img src="abelincoln.jpg" alt="Abraham Lincoln at his desk, see description below" / &gt;</code></p>
<p><img src="OEBPS/assets/Emancipation_proclamation.jpg" width="500"
height="305"
alt="Abraham Lincoln at his desk, see description below" /></p>
<p><a
href="https://commons.wikimedia.org/wiki/Category:Emancipation_Proclamation#/media/File:Emancipation_proclamation.jpg"
target="_blank" rel="noopener noreferrer">Source: Wikimedia
Commons</a></p>
<p>In the image above, Abraham Lincoln is preparing the text for the
Emancipation Proclamation. Several others are seated around the desk,
consulting with Lincoln on the document.</p>
</div>
<p><strong>Images of text</strong> will also be inaccessible to blind
users, and also potentially inaccessible to people with low vision, who
may attempt to magnify the image resulting in the text often degrading
to the point that it becomes unreadable. People with reading
disabilities who use reading software may also have trouble with images
of text as they cannot be read by the software.</p>
<p>There are occasions where images are strictly
<strong>decorative</strong> or contain no useful information. In such
cases the alt attribute should still be used, but its value left empty
(i.e., <code>alt=""</code>). This forces a screen reader to ignore the
image. If an empty alt attribute is not included, screen readers will
read the file name of the image, which can interfere with comprehension
of the surrounding information, or leave a screen reader user wondering
if they are missing something in the image.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Be sure all images are adequately described
using text.
</div>
<h2>2. Functional Elements That Only Work with a Mouse</h2>
<p>People who are blind are not likely to use a mouse when operating a
computer (though there are some that do). Most rely exclusively on a
keyboard to navigate through page features. Any element that only
operates with a mouse will not be accessible to blind users. People with
limited mobility may rely on a keyboard. People with low vision may also
rely on <strong>keyboard access</strong>. “Power users” also tend to use
a keyboard to navigate more than average users. Usability will be
affected for all of these people when keyboard access is missing.</p>
<p><img src="OEBPS/assets/dragndrop-1.png" width="475" height="141"
alt="Drag and drop example" /></p>
<p><strong>Figure: Drag and Drop elements should be controlled by
keyboard, or an equivalent alternate provided</strong></p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Be sure all functional elements operate with
both a mouse and a keyboard.
</div>
<h2>3. Text That Looks Like a Heading, But Is Not</h2>
<p>People who are blind and using a screen reader to navigate through
web content will have a feature in the screen reader to list the
headings on a page, so they can potentially jump to any one of those
headings and begin reading. The list of headings also provides a good
overview of the content on the page, making it easier to find specific
information. When “heading-like” presentation of text is used (e.g.,
making the text bold and large), the structure provided by proper
headings will be missing, requiring these users to navigate through the
entire page to discover its content. This greatly increases the effort
needed to move through web content. Always <strong>be sure proper HTML
headings are used</strong> to represent page sections instead of styled
text.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0be">
<p><strong>Technical:</strong> Using proper headings:</p>
<p><strong>Accessible:</strong></p>
<p><code>&lt;h1&gt;The Last Chapter&lt;/h1&gt;</code></p>
<p><strong>Inaccessible:</strong></p>
<p><code>&lt;p style="font-size:22pt; font-weight:bold;"&gt;The Last Chapter&lt;/p&gt;</code></p>
</div>
<p>Likewise, headings should not be used to style large bold text, where
the text is not a heading or section title. This creates confusion when
listening to a heading list with a screen reader.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Be sure all heading or section titles within
web content are created using proper HTML heading markup (h1, h2, etc.).
</div>
<h2>4. Links That Do Not Describe the Destination or Function</h2>
<p>Like headings, screen readers can list all of the links on a page to
gather a summary of the resources that lead from it. If the link list is
made up of meaningless phrases like “<strong>click here</strong>” or
“<strong>this link</strong>” or “<strong>more</strong>”, little or no
useful information is provided to the screen reader user. For most
users, meaningless links like this make content more difficult to use.
If you are able to see, imagine yourself coming across these links and
having to read through the surrounding text to figure out where the link
leads, or having to click the link to discover its destination.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Be sure all links describe the destination
of the link, or its function if it is used to open a window or pop up a
dialog box, for instance.
</div>
<h2>5. Lists That Look Like Lists, But Are Not</h2>
<p>Screen readers will recognize a properly-formatted list using HTML
ordered or unordered list markup (OL or UL), announcing the list and the
number of list items, and indicating one’s position in the list while
navigating through it. This information helps with memory and
comprehension. Without the proper list markup, more effort is often
required to comprehend a list of items.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> If a collection of items looks like a list,
be sure HTML list markup is used to format it as a list. If the order of
the items is important, an ordered list should be used; otherwise, use
an unordered list.
</div>
<h2>6. Missing “Within-Page” Navigation</h2>
<p>You have already been introduced to two potential ways to navigate
within pages, using <strong>headings and links</strong>. There are a
variety of other ways to move around within pages, such as providing
“<strong>bypass links</strong>,” often created to allow assistive
technology users to skip over repetitive elements like navigation menus,
and jump to an anchor further down the page. <strong>ARIA
landmarks</strong> can also be used for this purpose, assigning specific
roles to elements (e.g., banner, navigation, main) that can be listed by
screen readers and directly jumped to (e.g.,
<code>&lt;div role="main"&gt;...&lt;/div&gt;</code>). Without ways to
navigate within a page, screen reader users may be required to move
through the content in sequence from beginning to end to find the
information they are looking for, which requires a lot of unnecessary
effort.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Be sure there are ways to navigate around
within web content, using headings, bypass links or landmarks, etc.
</div>
<h2>7. Poor Visibility, Contrast, or Use of Colour On Its Own</h2>
<p>Providing good contrast between text and the background on which it
appears is important for a variety of reasons. For those with low
vision, or for older readers, text may become unreadable if it does not
contrast well with the background. Using an image as a background can
also be problematic, particularly when content resizes and text moves
over various shades of dark and light, making parts of the text
difficult to read.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Be sure there is good contrast between text
and background colour.
</div>
<p>The visibility of the cursor’s focus indicator is also important when
navigating using a keyboard. Someone with low vision who may have the
screen magnified several times may find it easier to navigate with a
keyboard than a mouse. If they are unable to see where the keyboard
focus is located, keyboard navigation becomes difficult or unusable.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Be sure the cursor’s focus location is
easily visible when navigating by keyboard.
</div>
<p>As an example, you may come across a feature that uses a green start
button and a red stop button. Some colour blind users or those with low
vision may not be able to tell the buttons apart. Adding the words
“Start” to the green button, and “Stop” to the red button provides the
extra indicator in addition to colour.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> When colour is used to represent meaning, be
sure there is some other indicator provided to express that meaning.
</div>
<h2>8. Video with No Captions (Or Automatic Captions)</h2>
<p>It is quite common nowadays for organizations to host their video
collections with services like YouTube or Vimeo. It is important that
any meaningful spoken dialogue in the videos be captioned so the content
of the audio track is available to those who cannot hear it. Obviously
this will include people who are Deaf, but it might also include people
watching the video in a noisy environment, or watching with the sound
turned down where quiet is necessary.</p>
<p>YouTube now provides automated captioning. It takes the audio track
from the video and uses voice-recognition technology to convert the
sound to text. This can be a handy feature to quickly caption a video,
but video producers must not rely on automated caption to provide
captions for their videos. The accuracy rate in many cases will be quite
low, to the point where the captions make no sense.</p>
<p>The automated captions can be used as a starting point for
manually-generated captions, but are not considered to be an acceptable
alternative to the audio track in a video for accessibility purposes.
There are a variety of free tools now available, such as YouTube’s
caption editor or the Amara caption editor, that make it relatively easy
for anyone to create captions.</p>
<p>Here’s an example of what can happen with automated captions.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=SrApzuyirvs"
target="_blank" rel="noopener noreferrer">When YouTube Automatic Closed
Captioning Goes Wrong</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-8.jpg"
title="When YouTube Automatic Closed Captioning Goes Wrong"
alt="Thumbnail for the embedded element &quot;When YouTube Automatic Closed Captioning Goes Wrong&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1196#pb-interactive-content"
title="When YouTube Automatic Closed Captioning Goes Wrong">https://pressbooks.library.ryerson.ca/pwaa/?p=1196</a></p>
</div>
<p><span class="small">© McMaster Libraries. Released under the terms of
a Standard YouTube License. All rights reserved.</span></p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Ensure that all video with meaningful spoken
dialogue has human-generated captions. Do not rely on automated
captions.
</div>
<h2>9. Information That Updates without Reloading the Page</h2>
<p>It is very common nowadays for parts of web pages to update
automatically with new information, such as news feeds or Twitter feeds,
for example. Screen readers typically take a static snapshot of a web
page before they start reading, so any new information that might be
added to a page after loading will generally go unnoticed. When updated
content is presented on a site, it must be formatted in such a way that
screen reader users are informed of the changes.</p>
<p>Fortunately, with the emergence of ARIA, providing the updates to
screen readers is relatively simple. Developers must add a “live region”
where updating information is present, using the “aria-live” attribute
within the element containing the updating information.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0be">
<strong>Technical:</strong> Presenting updating information:<br />
A live region added to a div.
<code>&lt;div aria-live="polite"&gt;updating information goes here&lt;/div&gt;</code>
</div>
<p>Note that the value for aria-live specifies when the content of the
region gets announced. The “polite” value in the example means the
updates are announced when the screen reader is not reading something
else. You may also use the value “assertive” which interrupts the screen
reader to read the updating information. Developers can also add the
aria-relevant and aria-atomic attributes to define what gets read when a
live region updates: aria-relevant set to “additions” for new content,
“removals” for items removed, and “all” to announce both, and
aria-atomic set to “false” to announce only the changes, or “true” to
announce the live region as a whole.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Ensure that any updating information on a
webpage is formatted to be discoverable by screen readers using
aria-live.
</div>
<h2>10. Tables Presenting Data That Have No Row or Column Headers</h2>
<p>When navigating through tables containing data using a screen reader,
it is often necessary for screen reader users to know the column or row
headers to determine the meaning of data in a table data cell,
particularly for larger tables where it is difficult to track one’s
location auditorily in the table. For table header cells to be readable
from within a data cell (TD) they must be marked as a proper table
header cell (TH).</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Be sure tables that are used to lay out data
are formatted with proper headings using the HTML TH element.
</div>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #b9f">
<strong>Try This:</strong> Take a look at the demonstrations of <a
href="https://de.ryerson.ca/wa/showcase" target="_blank"
rel="noopener noreferrer"><span
style="text-decoration: underline">accessible and inaccessible
techniques</span></a> used to create web content. You will revisit these
demos in a later unit when we talk about screen reader testing.
</div>
<p>For more detailed information and further reading, you may wish to
review:</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<p><strong>Readings and References:</strong></p>
<ul>
<li><a
href="http://desarrolloweb.dlsi.ua.es/web-accessibility/comparison-common-web-accessibility-problems"
target="_blank" rel="noopener noreferrer">Web Accessibility</a></li>
<li><a
href="http://ec.europa.eu/ipg/standards/accessibility/10_rules/index_en.htm"
target="_blank" rel="noopener noreferrer">Golden Rules of Accessible Web
Design</a></li>
</ul>
</div>
<p><a href="#chapter-010-things-to-watch-for.xhtml_x016">⇧ Back to
Top</a></p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-011-automated-web-accessibility-testing.xhtml"></span></p>
<article>
<div
id="chapter-011-automated-web-accessibility-testing.xhtml_automated-web-accessibility-testing"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Automated Web Accessibility Testing</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div
style="margin: 1em 0;padding: 1em;background-color: #fff5cc;border: 1px solid #ddd">
<p><span class="nosee"><img
src="OEBPS/assets/striped_lollipop_morgaine1976-300px-150x150-1-e1521733755321.png"
class="size-full wp-image-75 alignleft" width="50"
height="50" /></span>“What types of testing might a web accessibility
auditor do on my site, and what should my webmaster and I learn about
them?” Lulu wonders. It is recommended practice to use both automated
and manual testing when reviewing the accessibility of web content.
Let’s begin with automated testing.</p>
</div>
<p>There are many automated web accessibility testing tools available
with <strong>varying degrees of accuracy and coverage</strong>. They
will be introduced here in general terms, and covered in more detail in
the unit <a href="#chapter-027-introduction-3.xhtml">Automated Testing
Tools</a>.</p>
<p>Using automated tools to assess web accessibility does not take much
technical knowledge, but one often <strong>must have some understanding
of web accessibility</strong> to be able to interpret the reports these
tools generate.</p>
<p>Most automated testing tools will take a URL from a website, extract
the HTML from the page at that URL, then run a collection of test
algorithms to detect the presence or absence of particular features in
the HTML. For example, if a checker detects an img element, it will run
several tests on that element to determine if the “alt” attribute is
present, whether it is empty or not, how long the value is, and so on.
What they cannot do is tell whether the alt text accurately describes
the image, or whether the image is an image of text. In most cases, when
HTML is involved, automated checkers are good at detecting missing
accessibility features and detecting the presence of features that may
create barriers. When meaning is involved, automated checkers do not do
well. A human will generally need to make those decisions.</p>
<p>Different automated accessibility checkers can do different things.
Here are some examples:</p>
<ul>
<li>Some allow you to customize the checks or provide a list of the
checks being done</li>
<li>Some run scripts to ensure that any hidden HTML is also
evaluated</li>
<li>Some generate large reports covering entire websites; others report
only on single pages</li>
<li>Some monitor the accessibility of a site and send out reports when
issues are identified</li>
<li>Some are free, open-source applications that you can download,
install and modify to suit your needs; others are proprietary and charge
licensing fees</li>
</ul>
<p>Regardless of the features automated checkers have, you cannot rely
on them to find all potential barriers in web content. A human being
must also be a part of the checking process and make decisions on
potential issues, particularly when meaning is involved.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> No automated web accessibility checker can
identify all potential barriers.
</div>
<h2>Other Types of Accessibility Testing Tools</h2>
<p>In addition to the typical web accessibility checkers, there are a
variety of other tools you can use to test specific aspects of
accessibility.</p>
<p><strong>Colour Contrast Checkers:</strong> Colour contrast checkers
can be used to determine whether colour being used in web content
provides enough contrast to be readable for those with low vision or
colour blindness. These tools take two colour codes (e.g., #ffffff for
white, #000000 for black) and use a contrast algorithm to produce a
colour contrast ratio. Many colour testing tools can be found on the
Web, others can be installed as a plugin for a browser, and still others
are built into web accessibility checkers.</p>
<p><strong>Readability Testing Tools:</strong> There are also a variety
of readability testing tools that can be used to determine the level of
education one might require to effectively understand the text in web
content. These tools run a series of algorithms that take
characteristics of text like the length of words, the density of longer
words, the length of sentences, the number of clauses in sentences,
etc., and generate a score. For public web content the recommended
reading level is about grade 9, or lower-level high school.</p>
<p><strong>Markup Validation Tools:</strong> Markup validation tools are
also available on the Web, and they are often found in HTML authoring
tools used to create content for the Web. These tools will determine
whether the HTML is valid, or well-formed and compliant with a formal
grammar set out in HTML specifications. These tools essentially identify
broken or incorrect usage of HTML that could potentially affect
assistive technologies’ ability to read web content effectively.</p>
<p>These tools and others will be looked at in more detail in the units
following.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-012-manual-web-accessibility-testing.xhtml"></span></p>
<article>
<div
id="chapter-012-manual-web-accessibility-testing.xhtml_manual-web-accessibility-testing"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Manual Web Accessibility Testing</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>In addition to the many automated tools you might use when auditing
web accessibility, there are also a variety of manual tests or
strategies you can employ to identify potential barriers in web content.
Some of these are very simple, quick, and easily done by anyone.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #b9f">
<strong>Try This:</strong> Place the cursor in the location/URL area of
a web browser, then press the Tab key repeatedly and follow the cursor
as it moves through elements on the page. Any functional elements like
links, buttons, form fields, etc. that don’t receive focus when
“tabbing” through the page are likely going to be inaccessible to those
that require keyboard access (e.g., people who are blind, some
low-vision users, others with mobility impairments).
</div>
<p>Tab key testing and other manual tests will be covered in the unit <a
href="#chapter-038-manual-testing-strategies.xhtml">Manual Testing
Strategies</a>.</p>
<h2>Screen Reader Testing</h2>
<p>Another manual test strategy that should be used during web auditing
is to navigate through web content with a screen reader. Screen readers
are useful for identifying accessibility and usability issues. You can
easily determine that an image is missing alt text, for instance, if the
screen reader reads a file name, or reads nothing at all when it comes
across the image. Usability issues can also be identified that automated
and manual tests may not identify. For example, if a dynamic error
message is injected into a page after some interaction fails, like the
messages shown below each field in the login form below, you may see the
message but not hear it with the screen reader. In such a case the
feedback may need ARIA (discussed in <a
href="#chapter-079-wai-aria-web-accessibility-initiative-accessible-rich-internet-applications.xhtml">Web
Accessibility Initiative – Accessible Rich Internet Applications
(WAI-ARIA)</a> ) added to make the message readable, which might only be
confirmed by listening to a screen reader’s output.</p>
<p><img src="OEBPS/assets/Capture.png"
class="size-full wp-image-111 alignnone" width="625" height="330"
alt="Login Form" /></p>
<p><strong>Figure:</strong> <strong>Login form with dynamically injected
error messages below form fields where required information is
missing</strong></p>
<p>We will look at using screen readers and other assistive technologies
during accessibility testing in more detail in the unit <a
href="#chapter-047-assistive-technology-testing.xhtml">Assistive
Technology Testing</a>.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-013-user-testing.xhtml"></span></p>
<article>
<div id="chapter-013-user-testing.xhtml_user-testing"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Introduction to User Testing</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>Though in many cases using automated and manual testing strategies is
sufficient to identify and address potential accessibility issues, it
can be helpful to have users with disabilities, or others such as older
users, use a site in addition to the other auditing strategies. Actual
users can turn up a variety of potential usability issues.</p>
<p>Depending on the audience a site serves, user testers might include a
few different people with different accessibility needs, such as a
person who is blind using a screen reader, a person with low vision
using a magnifier, or perhaps a person with motor impairments using
speech recognition and switches to navigate through web content.</p>
<p>User testing will be covered in depth in the unit <a
href="#chapter-054-user-testing-2.xhtml">User Testing</a>.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-014-introduction-to-code-examination-and-repair.xhtml"></span></p>
<article>
<div
id="chapter-014-introduction-to-code-examination-and-repair.xhtml_introduction-to-code-examination-and-repair"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Introduction to Code Examination and
Repair</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0be">
<strong>Technical:</strong> The content on this page is aimed primarily
at web developers and is technical in nature.
</div>
<h2>Code Examination</h2>
<p>While you are testing with automated tools or other manual
strategies, it is often helpful and sometimes necessary to look at the
HTML markup to confirm, or investigate further, potential barriers tools
or strategies have turned up. All browsers have a <strong>View
Source</strong> feature (or something equivalent) to view the HTML
underlying a web page. Though using View Source is one potential way to
view the HTML markup, it can be time-consuming to find specific bits of
HTML associated with potential barriers that have been identified.</p>
<p>A better strategy for examining code is to use the <strong>Inspect
Element</strong> feature most browsers today provide. You can typically
right click on the element you want to view (such as an image), then
choose “Inspect Element” to look at the HTML and CSS used to display the
image. Look at the markup of the image element to see whether the alt
attribute is present and what its value is, as well as what other
attributes it might contain (e.g., ARIA attributes that may be present
to address a potential barrier a checker has identified).</p>
<p>A browser’s developer tools (e.g., Chrome’s DevTools or tools in
Firefox Developer Edition) provide a whole variety of information about
the markup of a page in addition to being able to examine specific
elements in the HTML.</p>
<p>Examining the code with the built-in inspector or with a plugin is a
good way to find colour codes in the style sheets associated with a web
page when doing colour contrast evaluation.</p>
<p>We will look at code examination in more detail in the section <a
href="#chapter-042-code-examination-and-repair.xhtml"
class="toc__chapter-title">Code Examination and Repair</a><a
href="#chapter-047-assistive-technology-testing.xhtml"></a>.</p>
<h2>Code Repair</h2>
<p>It is often necessary to adjust code manually while auditing, and to
retest to come up with solutions to correct accessibility issues. Using
the browser’s developer tools, it’s possible to dynamically adjust the
HTML markup and CSS to test possible solutions, perhaps running
potential fixes through a screen reader, before making recommendations.
Firefox Quantum (Developer Edition), Chrome, Internet Explorer, Edge,
and Safari all have tools that allow you to dynamically adjust code.</p>
<p>When writing web accessibility reports it can be helpful to provide
small code snippets to demonstrate to developers what needs to be done
to correct an issue, or at least describe the code changes in written
words. Having good knowledge of HTML, CSS, and JavaScript is a
prerequisite to providing solutions in your accessibility reports.</p>
<p>We will talk more about code repair in the section <a
href="#chapter-042-code-examination-and-repair.xhtml"
class="toc__chapter-title">Code Examination and Repair</a>. The video
below provides an introduction to code examination and repair using a
browser’s Inspect view.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=-LxJs-nJ8fw"
target="_blank" rel="noopener noreferrer">Code Examination and
Repair</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-9.jpg"
title="Code Examination and Repair"
alt="Thumbnail for the embedded element &quot;Code Examination and Repair&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1240#pb-interactive-content"
title="Code Examination and Repair">https://pressbooks.library.ryerson.ca/pwaa/?p=1240</a></p>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-015-chromevox-screen-reader.xhtml"></span></p>
<article>
<div
id="chapter-015-chromevox-screen-reader.xhtml_chromevox-screen-reader"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">ChromeVox Screen Reader</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>We will introduce you to ChromeVox, the screen reader we will be
using, early on, so you have plenty of opportunity to practice using it.
It will be a key tool used in auditing the accessibility of web content,
and will be used in the activity for this unit.</p>
<p>For day-to-day screen reader testing, ChromeVox (particularly the
ChromeVox plugin for the Chrome web browser) is our screen reader of
choice because of its simple installation and configuration, ability to
work across computer platforms, and the fact that it’s free and open
source.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0be">
<p><strong>Technical:</strong> One reason ChromeVox works well for
accessibility testing is its good support for ARIA. We will cover ARIA
in greater detail in the unit <a
href="#chapter-073-other-accessibility-standards.xhtml">Other
Accessibility Standards</a>. ARIA is still a relatively new technology,
and as of late 2019, it is still being supported inconsistently across
available screen readers. When developing for the Web, do use ARIA as it
is intended to be used as documented in the ARIA Specification, and test
it with ChromeVox.</p>
<p>You will still want to test with JAWS or perhaps NVDA, as these are
most likely to be used by blind users. You may, however, find that what
works in ChromeVox does not work with the other screen readers. So, for
the time being, it may be necessary to provide workarounds when
developing custom web elements, so they will work across technologies,
with the assumption that these other technologies will catch up
eventually.</p>
</div>
<p>While a relatively small number of screen reader users currently use
ChromeVox, it is a highly effective tool for developers when testing web
content. Also, ChromeVox is tailored to work with elements of <strong><a
href="https://www.google.com/drive" target="_blank"
rel="noopener noreferrer">Google Drive</a></strong>, so even for users
of other screen readers, ChromeVox may be preferable when compiling
Google Docs, Sheets, and Slides.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<p><strong>Toolkit:</strong> Visit the Chrome store while using the
Chrome web browser to install the <a
href="https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn"
target="_blank" rel="noopener noreferrer">ChromeVox screen reader</a>.
It will be a key element of your Toolkit.</p>
</div>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Though we recommend using ChromeVox for
activities that follow, and as a tool that works well for screen reader
testing while accessibility auditing, you are free to use other screen
readers if you prefer.
</div>
<p>The videos below will help show you how to install and begin using
ChromeVox.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=MC8reXDktM8"
target="_blank" rel="noopener noreferrer">Installing
ChromeVox</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-10.jpg" title="Installing ChromeVox"
alt="Thumbnail for the embedded element &quot;Installing ChromeVox&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1242#pb-interactive-content"
title="Installing ChromeVox">https://pressbooks.library.ryerson.ca/pwaa/?p=1242</a></p>
</div>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=qnM75U8LSxY"
target="_blank" rel="noopener noreferrer">ChromeVox
Demo</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-11.jpg" title="ChromeVox demo"
alt="Thumbnail for the embedded element &quot;ChromeVox demo&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1242#pb-interactive-content"
title="ChromeVox demo">https://pressbooks.library.ryerson.ca/pwaa/?p=1242</a></p>
</div>
<p><span class="small">© Google Open Online Education. Released under
the terms of a Standard YouTube License. All rights reserved.</span></p>
<h2>ChromeVox Testing and Associated Key Commands</h2>
<div
style="margin: 1em 0px;padding: 1em;border-width: 1px 1px 1px 10px;border-style: solid;border-color: #dddddd #dddddd #dddddd #ff6666">
<strong>Key Point:</strong> Download the <a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/ChromeVoxKey.docx">ChromeVox
Keyboard Commands [docx]</a>, outlined in the table below, print it, and
have it beside you when completing the activity in this unit. Also be
sure you have set the ChromeVox modifier key*, described in the
following line, or you are going to have difficulty with the activity.
</div>
<p>* The ChromeVox modifier key (i.e., Cvox) is set in Chrome’s Settings
&gt; Extensions &gt; ChromeVox Options, typically set to Alt or
Ctrl.</p>
<table style="border-spacing: 0px">
<colgroup>
<col style="width: 33%" />
<col style="width: 33%" />
<col style="width: 33%" />
</colgroup>
<thead>
<tr class="header">
<th style="width: 20%">Task</th>
<th style="width: 55%">Task Description</th>
<th style="width: 25%">Keyboard Command</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Default Reading</td>
<td>When a webpage loads, ChromeVox will read the element that takes
focus on the page. Use the Cvox + arrow keys to read through content.
Listen to the spoken output and note any inconsistencies from what one
might expect to hear based on what is visible on the screen.</td>
<td>Cvox + up and down arrows</td>
</tr>
<tr class="even">
<td>Tab Navigation</td>
<td>When a page has loaded, press the Tab key to navigate through
operable element of the page like links and forms. Listen to the output
when these elements are in focus, and note any elements that are
clickable, but not focusable with the keyboard.<br />
Also listen for hidden elements such as bypass links or other elements
that are not visible but are read aloud by ChromeVox.</td>
<td>Tab, Shift Tab</td>
</tr>
<tr class="odd">
<td>Navigate Through Headings</td>
<td>Step through all the headings on a page. Note whether all headings
are announced as expected. Note the heading level announced. Are they
sequenced to create semantic structure (i.e., nested in the proper
order)?</td>
<td>Cvox + L + H then up/down arrows</td>
</tr>
<tr class="even">
<td>Navigate Through Landmarks</td>
<td>Step through the landmarks, key navigation points on a page. Are all
areas of the page contained in a landmarked region? Note any missing
Landmarks.</td>
<td>Cvox + L + ; (semi-colon) then up/down arrows</td>
</tr>
<tr class="odd">
<td>List Links</td>
<td>List the links and navigate through them using the arrow keys,
listen for meaningfulness, or listen for context when links are
otherwise meaningless.</td>
<td>Cvox + L + L then up/down arrows</td>
</tr>
<tr class="even">
<td>Navigate Through Forms</td>
<td>Navigate to forms on a page, then press the Tab or F keys to listen
to each of the fields. Are fields announced effectively, including
required fields?</td>
<td>Cvox + L + F then up/down arrows</td>
</tr>
<tr class="odd">
<td>Navigate Through Tables</td>
<td>Navigate to Tables on a page, press Enter to go to a table, press
up/down arrow keys to move through cells in sequence (left to right, top
to bottom), press Ctrl + Alt + arrow to move to adjacent cells, press
Ctrl-Alt and 5 on the number pad to list column and row headers where
applicable. Note whether header cells are read or not. Are fieldset
labels announced, where applicable?</td>
<td>Cvox + L + T then up/down arrows<br />
then Enter to select Table<br />
Cvox + arrow to move within table<br />
Cvox +TH to announce headers</td>
</tr>
</tbody>
</table>
<p> </p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-016-activity-experience-web-content-from-a-different-perspective.xhtml"></span></p>
<article>
<div
id="chapter-016-activity-experience-web-content-from-a-different-perspective.xhtml_activity-experience-web-content-from-a-different-perspective"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Activity: Experience Web Content From a
Different Perspective</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2><span class="nosee"> <img src="OEBPS/assets/activity-2.png"
class="size-full wp-image-161 alignright" width="125" height="131" />
</span></h2>
<p><strong>NOTE:</strong> If you are a regular day-to-day screen reader
user (i.e., you are blind or have significant vision loss and must use a
screen reader) do the alternate activity below instead of this one. This
first activity is for first-time, or novice, screen reader users, and
those who do not use a screen reader on a regular basis.</p>
<p>This exercise will help you understand accessibility firsthand, by
experiencing the Web as someone who is blind might experience it. If you
have not already, go back to the <a
href="#chapter-015-chromevox-screen-reader.xhtml">ChromeVox
section</a> earlier in this unit, and setup ChromeVox yourself.</p>
<p><strong>Be sure to review the <a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/ChromeVoxKey.docx">ChromeVox
Keyboard Commands [docx]</a> before completing this activity, or have it
printed off beside you for easy reference.</strong></p>
<p>If you do not regularly use a screen reader, <strong>turn off your
computer monitor</strong> while navigating through a familiar website
with ChromeVox to experience what it’s like to access web content by
screen reader only. Note some of your thoughts and feelings on this
experience as self-reflection.</p>
<h2>Screen Reader User Alternate Activity</h2>
<p><strong>NOTE:</strong> This alternate activity is for people who use
a screen reader on a regular basis. You are likely blind or have
significant vision loss that requires you to use a screen reader to
access your computer, and the Web. If you are not a regular screen
reader user, do the activity above instead of this one.</p>
<p>The goal of the activity above is to help people who do not use a
screen reader better understand the challenges of navigating the Web
without being able to see what one is navigating through. If you are a
regular screen reader user, you already know these challenges. Here are
a few questions to consider as self-reflection about your
experience:</p>
<ul>
<li>What screen reader(s) do you use, and for how long?</li>
<li>Which web browser do you typically use, and why?</li>
<li>What are some of the most common barriers you encounter on the
Web?</li>
<li>How would you recommend non-screen reader users use screen readers
in their accessibility auditing activities?</li>
</ul>
<p> </p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-017-self-test-1.xhtml"></span></p>
<article>
<div id="chapter-017-self-test-1.xhtml_self-test-1"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Self-Test 1</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div class="print">
<section class="bcc-box bcc-info">
<h4><strong>Question 1</strong></h4>
<p><strong>Which of the following are automated accessibility checkers
not good at identifying? Please select all that apply.</strong></p>
<ol type="a">
<li>missing text descriptions</li>
<li>if link text effectively describes the function or destination of
the link</li>
<li>whether alt text describes an image effectively</li>
<li>whether alternatives are provided for inaccessible elements</li>
<li>if a Web page has a title or not</li>
<li>whether the title effectively describes a Web page</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 2</strong></h4>
<p><strong>Which of the following groups of people with disabilities are
least likely to face barriers in Web content? People who:</strong></p>
<ol type="a">
<li>are Deaf</li>
<li>are blind</li>
<li>use a wheelchair</li>
<li>have limited hand mobility</li>
<li>are learning disabled</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 3</strong></h4>
<p><strong>Which of the following were mentioned as key things to watch
for when auditing the accessibility of Web content? Please select all
that apply.</strong></p>
<ol type="a">
<li>images without a text alternative</li>
<li>elements that work with a mouse but not with a keyboard</li>
<li>text too complex for some to understand</li>
<li>using bold large text to create headings</li>
<li>using text and background colours that do not contrast well</li>
<li>elements that flash or flicker</li>
</ol>
</section>
<p><a href="#back-matter-003-answers.xhtml#answers-self-1">Answers to
Self-Test 1</a></p>
</div>
<p> </p>
<div class="textbox interactive-content">
<span class="interactive-content__icon"></span>
<p>An interactive or media element has been excluded from this version
of the text. You can view it online here:<br />
<a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1247#pb-interactive-content"
title="Self-Test: Unit 1">https://pressbooks.library.ryerson.ca/pwaa/?p=1247</a></p>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="part-003-introduction-to-wcag-2-0.xhtml"></span></p>
<article>
<div
id="part-003-introduction-to-wcag-2-0.xhtml_introduction-to-wcag-2-0"
class="part">
<div class="part-title-wrap">
<h3 class="part-number"></h3>
<h1 class="part-title">2. Introduction to WCAG</h1>
</div>
</div>
</article>
<p><span id="chapter-018-introduction-to-wcag-2-0.xhtml"></span></p>
<article>
<div
id="chapter-018-introduction-to-wcag-2-0.xhtml_introduction-to-wcag-2-0"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Introduction to WCAG</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div
style="margin: 1em 0;padding: 1em;background-color: #fff5cc;border: 1px solid #ddd">
<span class="nosee"><img
src="OEBPS/assets/striped_lollipop_morgaine1976-300px-150x150-1-e1521733755321.png"
class="size-full wp-image-75 alignleft" width="50"
height="50" /></span>Now that Lulu has a better understanding of what a
web accessibility audit entails and has decided with certainty to move
forward with one, she is seeking a recommended resource that might allow
her webmaster to familiarize herself more thoroughly with the features
of accessible web content. Without a doubt, WCAG 2.0 is the resource
that she is looking for. Review the content below to understand the
significance and purpose of this critical element of Lulu’s, and your,
toolkit.
</div>
<p>Though it is possible to conduct informal accessibility reviews with
basic understanding of the types of barriers faced by people with
disabilities, and knowledge of the common elements in web content that
often produce barriers, a thorough, professional review requires a solid
understanding of the W3C Web Content Accessibility Guidelines (WCAG 2.0
or WCAG 2.1, aka <a
href="http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=58625"
target="_blank" rel="noopener noreferrer">ISO/IEC 40500:2012</a>).</p>
<p>This unit will introduce you to WCAG (pronounced “wuh-kag”), which
provides the basis for most international accessibility rules and
legislation, along with its supporting documents. WCAG should be a key
element of your Web Accessibility Auditing Toolkit. You should develop a
basic understanding of WCAG to start, then use it and its supporting
documents as references while conducting your audits and build upon the
basics as you go about auditing web content.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<strong>Toolkit:</strong> Add the W3C <strong><a
href="https://www.w3.org/TR/WCAG21" target="_blank"
rel="noopener noreferrer">Web Content Accessibility
Guidelines</a></strong> (WCAG 2.1) to your Web Accessibility Auditing
Toolkit. <strong>REQUIRED READING.</strong>
</div>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> As of June 5, 2018, <strong><a
href="https://www.w3.org/TR/WCAG21">WCAG 2.1</a></strong> was released,
extending WCAG 2.0 with one additional guideline, and 17 new success
criteria, that address accessibility across devices and for people with
cognitive disabilities. Readers should refer to the newer version of the
WCAG guidelines moving forward, though in many cases WCAG 2.0 remains
the standard on which international legislation around web accessibility
is based. WCAG 2.1 was designed so that complying with it, includes
compliance with WCAG 2.0.
</div>
<p>Watch the following video for a brief overview of WCAG 2.0.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=2ma44vyMOs8"
target="_blank" rel="noopener noreferrer">WCAG-WAI
Basics</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-12.jpg" title="WCAG-WAI Basics"
alt="Thumbnail for the embedded element &quot;WCAG-WAI Basics&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1253#pb-interactive-content"
title="WCAG-WAI Basics">https://pressbooks.library.ryerson.ca/pwaa/?p=1253</a></p>
</div>
<p><span class="small">© Richard Fouchaux. Released under the terms of a
Creative Commons Attribution license.</span></p>
<h2>Documents Accompanying WCAG</h2>
<p>Accompanying the WCAG specification itself are a variety of documents
that expand on the guidelines. The two types of documents we would like
to draw your attention to are:</p>
<ul>
<li>Understanding Guidelines</li>
<li>How to Meet WCAG (referred to as Success Criteria)</li>
</ul>
<p>These documents are conveniently linked next to their corresponding
guideline, as shown in the figure below.</p>
<p><img src="OEBPS/assets/wcag_other_docs.jpg"
class="size-full wp-image-135 alignnone" width="970" height="144"
alt="Document links to the right of the guideline" /></p>
<p><strong>Figure: Links to supporting documents appear next to each
guideline in WCAG 2.0</strong></p>
<h2>10 Key Guidelines</h2>
<div style="padding: 1em;margin: 1em 0;border: 1px solid #bbb">
<p><strong>Required Reading: <span style="font-weight: 400">The 10 Key
Guidelines of WCAG 2.0/2.1 have been summarized in a downloadable PDF
document.</span></strong> <span style="font-weight: 400">Download the <a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/10KeyGuidelines.pdf"
target="_blank" rel="noopener noreferrer"><strong>10 Key Guidelines
[PDF]</strong></a> <span style="text-decoration: underline"></span>
document, and read through it to familiarize yourself with the manner in
which WCAG 2.0/2.1 addresses the most common accessibility
issues.</span> <span style="font-weight: 400"><br />
</span></p>
</div>
<h2>More About WCAG</h2>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<strong>Toolkit:</strong> If you would like to explore WCAG 2.1 in
greater detail than this Unit provides, bookmark the <strong><a
href="https://pressbooks.library.ryerson.ca/iwacc" target="_blank"
rel="noopener noreferrer">Introduction to Web Accessibility</a></strong>
course.
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-019-objectives-and-activities-3.xhtml"></span></p>
<article>
<div
id="chapter-019-objectives-and-activities-3.xhtml_objectives-and-activities-3"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Objectives and Activities</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2><span style="font-weight: 400">Objectives<span class="nosee"><img
src="OEBPS/assets/checklist-e1516288820283-1.png"
class="size-full wp-image-74 alignright" width="100"
height="101" /></span></span></h2>
<p><span style="font-weight: 400">By the end of this unit, you will be
able to:</span></p>
<ul>
<li><span style="font-weight: 400">List and interpret the meaning of the
four principles of web accessibility.</span></li>
<li><span style="font-weight: 400">List the three levels of WCAG
conformance and recognize current targets that are implemented
internationally.</span></li>
<li><span style="font-weight: 400">Examine in depth ten key WCAG 
Guidelines.</span></li>
<li><span style="font-weight: 400">Add relevant WCAG  materials to your
Web Accessibility Auditing Toolkit.</span></li>
</ul>
<h2><span style="font-weight: 400">Activities</span></h2>
<ul>
<li><span style="font-weight: 400">Download and study WCAG 2.1 Audit
Template</span></li>
<li><span style="font-weight: 400">Read a Completed Sample WCAG 2.0
Audit</span></li>
<li><span style="font-weight: 400">Update your Web Accessibility
Auditing Toolkit<br />
</span></li>
<li><span style="font-weight: 400">Self-Test 2</span></li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-020-the-evolution-of-web-accessibility.xhtml"></span></p>
<article>
<div
id="chapter-020-the-evolution-of-web-accessibility.xhtml_the-evolution-of-web-accessibility"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">The Evolution of Web Accessibility</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>If you are interested in knowing about the history behind WCAG, take
a look at the timeline of milestones described below.</p>
<div class="textbox interactive-content">
<span class="interactive-content__icon"></span>
<p>An interactive or media element has been excluded from this version
of the text. You can view it online here:<br />
<a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1257#pb-interactive-content"
title="Web Accessibility Timeline">https://pressbooks.library.ryerson.ca/pwaa/?p=1257</a></p>
</div>
<h2>1995: Web Accessibility Begins</h2>
<p>It was during the mid-1990s that web accessibility awareness began to
take hold, first mentioned by Tim Berners-Lee in his keynote speech at
the 1994 Second International World Wide Web conference in Chicago. The
<em>Unified Web Site Accessibility Guidelines</em> were compiled shortly
after that at the TRACE Centre at the University of Wisconsin-Madison in
1995. Version 8 of the <em>Unified Web Site Accessibility
Guidelines</em> became the seed document for WCAG 1.0.</p>
<h2>1999: WCAG 1.0 Released</h2>
<p>It was not until 1999 that the first version of the Web Content
Accessibility Guidelines (WCAG 1.0) was released by the W3C’s Web
Accessibility Initiative (WAI). This was a significant advancement in
the promotion of an accessible web. With WCAG 1.0 it was possible to
assess accessibility based on a standard, without the need to use
applications like JAWS. That standard was also used by assistive
technology (AT) developers (of screen readers, for instance) to better
understand how AT should interact with content on the Web. One could
then judge accessibility based on what the WCAG specification suggested
should be done. But, there were problems with WCAG 1.0 that slowed its
adoption. These problems would be addressed with the release of WCAG
2.0.</p>
<h2>2008: WCAG 2.0 Released</h2>
<p>In 2008 WCAG 2.0 was released to address the shortcomings of its
predecessor. One of the significant changes included technology
independence. This meant that what might previously have been associated
with a barrier in HTML content was now a barrier regardless of the
technology used.</p>
<p>For example, “include alt text with images,” <code>"alt"</code> being
an HTML attribute, became “include text alternatives for visual
content,” with no reference to the technology presenting the content.
WCAG 2.0 addressed accessibility across a whole range of web
technologies, including things like Flash, Java, JavaScript, and other
such technologies.</p>
<p>A second major change was the acceptance of JavaScript in WCAG 2.0 as
a legitimate web technology. With WCAG 1.0, developers had to create
alternatives to JavaScript elements they may have added to create
interactivity in their web content. In other words, a website needed to
operate with the same functionality if JavaScript was turned off in a
user’s browser. This severely limited what developers could do while
complying with WCAG 1.0 and became another contributing factor to the
slow uptake of WCAG 1.0.</p>
<p>With the release of WCAG 2.0 this restriction was lifted. It is no
longer a requirement to create alternatives to scripted features, though
it is still a requirement to make those features accessible – certainly
doable for most JavaScript interactivity we see in today’s websites.</p>
<h2>2015: HTML5 &amp; WAI ARIA</h2>
<p>Today we have a number of new additions to the collection of
accessibility standards with the introduction of specifications such as
WAI-ARIA (Accessible Rich Internet Applications). WAI-ARIA is an
extension of HTML5, that allows developers to add information about
roles, states, and properties to custom features they might create using
JavaScript, that would have previously been inaccessible to AT
users.</p>
<p>For example, a developer might wish to use a collection of
&lt;div&gt; elements to create a form. This is certainly possible with
some script added, but a &lt;div&gt; was never intended to be used as a
form element or to be interactive for that matter. They have no role or
states or properties that would indicate to an AT user they were in a
form, unlike a &lt;form&gt; element in HTML, which has all those
semantic characteristics built in by default.</p>
<p>ARIA now allows developers to assign a <code>role="form"</code> to a
<code>&lt;div&gt;</code> to identify it as a form. A
<code>&lt;div&gt;</code> used to create a checkbox could now have a
<code>role="checkbox"</code> added, and <code>aria-checked="true"</code>
set to have its role and state (checked or not checked) announced to AT
the same way the standard HTML form elements get announced. We’ll talk a
bit more about WAI-ARIA in unit 8, but for now know that it is perhaps
the most significant accessibility technology to emerge in recent
years.</p>
<h2>2018: WCAG 2.1 and Project Silver</h2>
<p>When WCAG 2.0 was introduced in 2008, the iPhone had only just been
released the year before, and it would not be until 2009 that it would
be usable by blind individuals. WCAG 2.0 provided little guidance on
developing accessible content to be accessed through mobile devices.</p>
<p>WCAG 2.1 is intended to fill that gap, producing guidelines to help
developers comply with accessibility guidelines when developing mobile
web and responsive designs for web content, among other things. WCAG 2.1
was released in June of 2018, adding one new guideline, and 17 new
success criteria.</p>
<p>Recent Article by Scott Hollier, on changes in WCAG 2.1: <span
style="text-decoration: underline"><a
href="http://hollier.info/wcag21draft" target="_blank"
rel="noopener noreferrer">WCAG 2.1: Reflections on the New Guidelines
and Success Criteria</a></span>.</p>
<p>In parallel with WCAG 2.1, project Silver has also been launched.
Silver is the code name for WCAG 3.0. The focus of Silver is on
integrating accessibility standards into the emerging Internet of Things
(IoT). With everything from refrigerators, to home climate control
systems, to security monitoring now connecting to the Internet, Silver
is being developed to ensure these emerging technologies are accessible
to everyone.</p>
<p>Why Silver? Silver’s element symbol is Ag, which represents
Accessibility Guidelines.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-021-wcag-2-0-principles.xhtml"></span></p>
<article>
<div id="chapter-021-wcag-2-0-principles.xhtml_wcag-2-0-principles"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">WCAG Principles</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>The four guiding principles of WCAG say that web content must be
Perceivable, Operable, Understandable, and Robust (POUR) in order to be
accessible to people with disabilities.</p>
<div style="border: thin solid black;padding: .5em">
<ol>
<li><strong>Perceivable</strong> – Information and user interface
components must be presentable to users in ways they can perceive.
<ul>
<li>This means that users must be able to perceive the information being
presented (it can’t be invisible to all of their senses)</li>
</ul></li>
<li><strong>Operable</strong> – User interface components and navigation
must be operable.
<ul>
<li>This means that users must be able to operate the interface (the
interface cannot require interaction that a user cannot perform)</li>
</ul></li>
<li><strong>Understandable</strong> – Information and the operation of
user interface must be understandable.
<ul>
<li>This means that users must be able to understand the information as
well as the operation of the user interface (the content or operation
cannot be beyond their understanding)</li>
</ul></li>
<li><strong>Robust</strong> – Content must be robust enough that it can
be interpreted reliably by a wide variety of user agents, including
assistive technologies.
<ul>
<li>This means that users must be able to access the content as
technologies advance (as technologies and user agents evolve, the
content should remain accessible)</li>
</ul></li>
</ol>
</div>
<p><a
href="http://www.w3.org/TR/UNDERSTANDING-WCAG20/intro.html#introduction-fourprincs-head"
target="_blank" rel="noopener noreferrer">Source: Introduction to
Understanding WCAG 2.0</a></p>
<h2>Perceivable</h2>
<p>For content to be perceivable it must be possible to perceive it
through multiple senses. While there are a variety of ways to provide
alternatives perceivable through alternate senses (e.g., audio
descriptions for visual content for those who are blind, or sign
language interpretation of audio content for those who are Deaf), text
alternatives are generally the best choice.</p>
<p>Text can be converted into a variety of forms. It can be read aloud
by screen reading software or converted to braille for those who are
blind. It can be translated into other languages for those reading in a
second language or it can be magnified without losing its sharp
appearance for those with low vision. Its colour can be changed easily
to make it more readable for those who are colour blind, or need high
contrast.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Plain text is the most adaptable alternate
format because it can be easily converted into a variety of forms to
make content perceivable across a wide range of accessibility needs.
</div>
<h2>Operable</h2>
<p>In the context of web accessibility, operability generally means that
something is functional using a keyboard. If functional items are not
keyboard operable, they will be inaccessible to many users.</p>
<p>Developers often create features that operate with a mouse, sometimes
overlooking keyboard functionality. Most people accessing the Internet
do use a mouse, but many do not. A person who is blind is unlikely to
use a mouse, but will instead rely almost exclusively on keyboard
access. Power users, often developers or programmers, also tend to be
keyboard users, so usability is lost for this group as well when
keyboard access is not programmed in.</p>
<p>Operable can also mean functional using one’s voice. Some people with
severe motor impairments use voice recognition software along with
switches (see figure below) to operate their computers and navigate the
Web. This means there must be text associated with functional elements
like graphical buttons, so one can speak the text to bring focus to an
element, and those elements must be keyboard operable so a switch can be
used to activate the element. Pressing a switch is much like pressing
the Enter key or Spacebar on a keyboard, or clicking a mouse.</p>
<p><img src="OEBPS/assets/Single_switch.jpg"
class="size-full wp-image-136 alignnone" width="220" height="293"
alt="Large button switch" /></p>
<p><strong>Figure: A button switch used to replicate a mouse
click</strong><br />
<a href="https://en.wikipedia.org/wiki/Computer_accessibility"
target="_blank" rel="noopener noreferrer">Source: Wikipedia</a></p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> All functional elements in web content that
operate with a mouse must also operate with a keyboard.
</div>
<h2>Understandable</h2>
<p>Understandable refers to comprehending both the content and features
of a website. Content that uses more complex or advanced language than
is necessary may be difficult to understand for some people with
disabilities, as well as those reading in a second language, or perhaps
older users with diminishing cognitive abilities. Particularly for
public access sites, the reading level of the language used should be
minimized, using simpler language wherever possible.</p>
<p>A second aspect of understanding relates to the consistency and ease
of use of the navigation elements on a site, reducing the number of
navigation elements, and presenting these elements consistently
throughout a website. This can improve usability for many users,
including those who are blind, those with cognitive or learning
disabilities, and older users.</p>
<p>A person who is blind and using a screen reader to navigate a site
will often dedicate some effort to mapping to memory the navigation
structure of a site, much like one might visualize traveling from point
A to point B through a building or through city streets. If the
navigation structure changes, it can often lead to confusion, and to
having to map the navigation structure over again. If the navigation
stays consistent, it only needs to be learned once, after which
cognitive effort can focus on understanding the important content of a
webpage or website.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Use simple, consistent, predictable
navigation elements throughout a website.
</div>
<h2>Robust</h2>
<p>Robust, as described by W3C, means that content works well across a
wide range of Web and assistive technologies. This generally means using
technology to standard. Web browsers and assistive technologies base
their development around standards such as HTML, and are able to
interpret content that is created in a standard way. When content varies
from the standard, assistive technologies often have trouble
interpreting it. Not all content must comply with the standards, but
when custom content is created that does not comply, a secondary
standardized version should be provided so the content “degrades
gracefully.” Web content that degrades gracefully is intended to
function best in the most current browsers and assistive technologies,
and then as older, less feature-rich technologies view it, it should
degrade in a way that is still functional, but with fewer features.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0be">
<p><strong>Technical:</strong> With the advent of WAI ARIA, it is now
possible to veer from the standard, perhaps using HTML in new ways that
were not initially intended. ARIA attributes can be used to describe the
role, states, and properties of custom elements. For example, an HTML
<code>&lt;div&gt;</code> element was never intended to be clickable, but
with some JavaScript it is possible to add click functionality, though
from an assistive technology’s perspective the <code>&lt;div&gt;</code>
is just a container with no functionality.</p>
<p>A <code>&lt;div&gt;</code> has been used in a non-standard way in
this case. ARIA can now be added to that customized
<code>&lt;div&gt;</code> to give it a <code>role="button"</code> for
instance, and made focusable adding a <code>tabindex</code> attribute,
and made clickable by adding <code>aria-pressed</code> attribute to
describe its state as pressed or not pressed, and so on.</p>
</div>
<p>There are other occasions where non-standard technologies such as
embedded Flash objects or Java applets might be used. Though it is
possible to make these objects somewhat accessible, they are often
challenging to access and operate effectively with assistive
technologies. In such cases alternatives are generally needed. Some
Flash development tools, for instance, provide an option to generate an
HTML version, though these tend to be static representations of what was
interactive in the Flash. Where possible, HTML5, with CSS, scripting,
and ARIA should be used to develop interactive content for the Web.</p>
<p>HTML5 and ARIA will be discussed in greater detail in unit 8<a
href="https://learn.canvas.net/courses/2198/pages/wai-aria-web-accessibility-initiative-accessible-rich-internet-applications"
target="" rel="noopener noreferrer"
title="WAI-ARIA (Web Accessibility Initiative - Accessible Rich Internet Applications)"></a>.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Where non-standard technologies are used, or
where standard technologies are used in non-standard ways, provide
standardized alternatives to allow content to degrade gracefully.
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-022-wcag-accessibility-conformance.xhtml"></span></p>
<article>
<div
id="chapter-022-wcag-accessibility-conformance.xhtml_wcag-accessibility-conformance"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">WCAG Accessibility Conformance</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div
style="margin: 1em 0;padding: 1em;background-color: #fff5cc;border: 1px solid #ddd">
<p><span class="nosee"><img
src="OEBPS/assets/striped_lollipop_morgaine1976-300px-150x150-1-e1521733755321.png"
class="size-full wp-image-75 alignleft" width="50"
height="50" /></span>Lulu’s webmaster has been reading through WCAG 2.0
and at times finds it overwhelming. However, if she understands the POUR
principles, the 3 levels of conformance, and the success criteria
associated with each guideline, she will have a solid basis upon which
to build her skills in the realm of web accessibility.</p>
<p>To help the webmaster further frame her understanding of conformance,
she should be reminded that, as an Ontario-based company, to achieve
AODA compliance, Lulu’s Lollipops’ two main target years are 2014 (WCAG
2.0 Level A – except live captions and audio description), and 2021
(WCAG 2.0 Level AA – except live captions and audio description).</p>
<p>For further information regarding the specifics of AODA compliance, a
link that may be of use to the Lulu’s webmaster and others in similar
roles is the <a href="http://www.ontario.ca/laws/regulation/110191"
target="_blank" rel="noopener noreferrer">Integrated Accessibility
Standards</a>. For further information on WCAG compliance levels, read
on.</p>
</div>
<h2>Conformance Levels</h2>
<p>In addition to being grouped by principles, WCAG is also grouped by
level of conformance. These levels are described by W3C as follows:</p>
<div style="padding: 1em;margin: 1em 0;border: 1px solid #bbb">
<p><strong>1. Conformance Level:</strong> One of the following levels of
conformance is met in full.</p>
<ul>
<li><strong>Level A:</strong> For Level A conformance (the minimum level
of conformance), the web page satisfies [<a
href="http://www.w3.org/TR/UNDERSTANDING-WCAG20/conformance.html#satisfiesdef"
target="_blank" rel="noopener noreferrer">definition</a>] all the Level
A Success Criteria, or a <a
href="http://www.w3.org/TR/UNDERSTANDING-WCAG20/conformance.html#conforming-alternate-versiondef"
target="_blank" rel="noopener noreferrer">conforming alternate
version</a> is provided.</li>
<li><strong>Level AA:</strong> For Level AA conformance, the web page
satisfies all the Level A and Level AA Success Criteria, or a Level AA
conforming alternate version is provided.</li>
<li><strong>Level AAA:</strong> For Level AAA conformance, the web page
satisfies all the Level A, Level AA and Level AAA Success Criteria, or a
Level AAA conforming alternate version is provided.</li>
</ul>
<p><em>Note 1:</em> Although conformance can only be achieved at the
stated levels, authors are encouraged to report (in their claim) any
progress toward meeting success criteria from all levels beyond the
achieved level of conformance.</p>
<p><em>Note 2:</em> It is not recommended that Level AAA conformance be
required as a general policy for entire sites because it is not possible
to satisfy all Level AAA Success Criteria for some content.</p>
</div>
<p><a href="http://www.w3.org/TR/UNDERSTANDING-WCAG20/conformance.html"
target="_blank" rel="noopener noreferrer">Source: Understanding
Conformance</a></p>
<p>Conformance levels can be thought of in terms of their importance
toward removing barriers with Level A being the most important. It is
helpful to think of levels as things you must do, should do, and could
do.</p>
<ul>
<li><strong>Level A:</strong> These issues <strong>must</strong> be
resolved or some group will not be able to access the content. The
issues at this level represent significant barriers that may not be
overcome with work-arounds. An example of a Level A barrier is missing
alternative text to describe an image. There is little a blind person
can do on their own to understand the content of an image without a text
description.</li>
<li><strong>Level AA:</strong> These issues <strong>should</strong> be
resolved or some group will find it difficult to access or use the
content. These issues can often be circumvented with some effort, but
will make using or understanding web content more effortful. An example
of a Level AA barrier is not being able to follow the focus of the
cursor when navigating through content with a keyboard. For a person
with low vision navigating with a keyboard, or a fully able keyboard
user for that matter, navigating through content can be very difficult
if one cannot see where the cursor is located and is unable to tell when
to press the Enter key to activate a link or button.</li>
<li><strong>Level AAA:</strong> These issues <strong>could</strong> be
resolved to improve usability for all groups. Web content may be
technically accessible, but usability can be improved by resolving these
issues. An example of a Level AAA barrier would be presenting acronyms
or abbreviations without providing their full wording. For a person who
is blind, an acronym read by a screen reader may sound like gibberish.
For a fully able user who is not familiar with a short form, an acronym
or abbreviation may have no useful meaning, at least not without having
to search out the meaning elsewhere.</li>
</ul>
<h2>Selecting a Level of Conformance</h2>
<p>While Level A conformance is an honourable accomplishment, and will
allow most people to access the content of a website, it is generally
considered “minimal conformance.” If you are working with a limited
budget (or no budget) this may be an acceptable level of accessibility,
but it is generally accepted that <strong>most sites should strive for
Level AA</strong>, and perhaps conform with a few of the Level AAA
success criteria (defined below).</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Level AA is the generally agreed upon level
of compliance websites should strive to meet.
</div>
<p>If you are working on a new website, Level AA should be the goal from
the start. Assuming the developers know what needs to be done, there is
very little extra effort required to jump from Level A to Level AA. If
you are working with an existing site that is receiving an accessibility
retrofit, then you may want to first aim for Level A, then with time
resolve all Level AA issues. Generally speaking it is less costly to
build a site to be accessible from the start, than it is to build a site
and retrofit it later to conform.</p>
<p>Level AAA conformance is unattainable for many websites. While it is
possible to conform with some of the requirements at this level, they
can often be counter-productive or unnecessary. Take for instance the
reading level requirement (WCAG success criterion 3.1.5). Public sites
will want to strive to meet this guideline, to reach the broadest
audience possible by reducing the reading level, but for other sites
that focus on a particular, perhaps highly-educated audience, it may be
impossible or even inadvisable to comply with this requirement. Imagine
an advanced course in biomechanics written at a lower-level secondary
school reading level required to satisfy this guideline. If it were
possible, replacing the advanced terminology and jargon with low level
paraphrasing would likely make the content unusable by the intended
audience.</p>
<h2>Success Criteria and Techniques</h2>
<p><strong>Success criteria</strong> are essentially accessibility
requirements. For example, the success criterion for an image conforming
with guideline 1.1 (see below), is providing an equivalent text
alternative. Note the success criterion does not specify any
technology-specific solution or strategy on how that equivalent text
should be provided.</p>
<p>Alternatives for an image can take different forms, hence the
<strong>techniques</strong> for satisfying success criteria. For success
criterion 1.1.1 possible techniques might include providing alt text,
including an image caption, or describing the image in the surrounding
text and referring to the description in the alt text for the image.
Each of these techniques potentially satisfies the requirements or
success criteria of Guideline 1.1.</p>
<p>You may also notice techniques are grouped into <strong>Sufficient
Techniques</strong> and <strong>Advisory Techniques</strong>. Sufficient
techniques are those that reliably satisfy success criteria, while an
advisory technique may not reliably satisfy success criteria but may be
beneficial for improving usability or improving accessibility for
specific users. Developers should apply sufficient techniques to satisfy
success criteria, and where feasible also apply advisory techniques to
improve accessibility or usability further.</p>
<p>There is a third category of techniques called
<strong>Failures</strong>. These are not techniques to satisfy success
criteria, but rather techniques that introduce barriers and thus should
be avoided.</p>
<p><a
href="http://www.w3.org/TR/UNDERSTANDING-WCAG20/understanding-techniques.html"
target="_blank" rel="noopener noreferrer">Source: W3C – Understanding
Techniques for WCAG Success Criteria</a></p>
<h2>Other Conformance Considerations</h2>
<p>In addition to meeting all the Level A or AA or AAA requirements
before being able to claim conformance at one of these levels, there are
other conformance requirements, listed here:</p>
<ul>
<li><strong>Full pages:</strong> Conformance applies to full web pages
only. It cannot apply to parts of pages.</li>
<li><strong>Complete processes:</strong> When a conformance claim is
being made on a collection of pages that make up a web application, for
instance, all pages in the collection must conform. If one were to claim
“the discussion forum conforms at Level AA,” all aspects of the forum
must conform, from logging in, to reading posts, to posting new
messages, and so on.</li>
<li><strong>Accessibility supported:</strong> Techniques to implement
accessibility requirements are done in a way that is supported by
assistive technologies. For instance, a linked image that is clicked to
open a feature that does not have alt text to describe the function of
the image, but does include text nearby that says “click the button to
open the feature,” would not be accessibility supported even though the
image has been described with text. The image has not been described in
a way that assistive technologies can make use of. Adding alt text to
the image in this case would be considered accessibility supported,
because assistive technologies can read alt text. Accessibility support
is a very complex issue with many grey areas. Read through “<a
href="http://www.w3.org/TR/UNDERSTANDING-WCAG20/conformance.html#uc-accessibility-support-head"
target="_blank" rel="noopener noreferrer">Understanding Accessibility
Support</a>” for a discussion of other things to consider when assessing
accessibility support.</li>
<li><strong>Non-interference:</strong> When non-accessible technologies
are used and accessible alternatives are provided, the inaccessible
version must not interfere with access to the accessible version. For
instance, an embedded Flash object may have a link to an accessible HTML
version on the page following the object. If while navigating through
the page by keyboard or using an assistive technology, the cursor
becomes trapped in the Flash object, it is interfering with the
accessible version that follows. In this case, even though an accessible
version is provided, it cannot be accessed; thus, the page does not
conform. If a bypass link were provided to skip over the Flash object,
and users were able to back out of the object, the page would conform.
Ideally, the Flash object should be created in a way that does not trap
the cursor.</li>
</ul>
<h2>Making Conformance Claims</h2>
<p>Once a website has addressed all the issues required for a certain
level of conformance, it may be desirable to “claim” conformance, though
there is no requirement that a claim be made in order to conform.</p>
<h3>Basic Conformance Claim</h3>
<p>A basic claim must include <strong>the date</strong> the site was
judged to be conformant. Because web content tends to change over time,
conformance can typically only be claimed for a specific date (with
exceptions such as numbered versions of web software). The basic claim
must also include <strong>the specification</strong> or standard the
site is claiming conformance with, and must include <strong>the
level</strong> of conformance. A basic conformance claim may look like
the following:</p>
<div style="padding: 1em;margin: 1em 0;border: 1px solid #bbb">
On January 20, 2015 this site conformed with the Web Content
Accessibility Guideline 2.0 at Level AA.
</div>
<p>A conformance claim can be more extensive than just a basic claim
like that described above. It can also provide documentation about the
accessibility features found on a site, so those accessing the site with
assistive technologies can read about these features rather than having
to discover them on their own. This documentation is often found linked
prominently in the navigation elements of a website, usually near the
start of a page so it is easily found by assistive technology users, and
is often labelled “Accessibility” or “Accessibility Statement.”</p>
<p>If the conformance claim does not apply to the whole site (e.g.,
there may be some older content that remains inaccessible), the scope of
the claim should also be specified. For instance, add to the basic claim
above, “…for any content added to the site after January 1, 2012.” The
claim can also list known issues, if there are areas of the site that
are known to be inaccessible, perhaps because there isn’t a suitable
accessible alternative to a particular technology being used. For
example, “…the video conferencing area of the site remains
non-conformant due to the lack of an alternative accessible conferencing
system.”</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-023-slug-10-key-guidelines.xhtml"></span></p>
<article>
<div
id="chapter-023-slug-10-key-guidelines.xhtml_slug-10-key-guidelines"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">10 Key Guidelines</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>The Web Content Accessibility Guidelines (WCAG 2.1) include 13
guidelines, made up of 78 success criteria (or WCAG 2.0 has 12
guidelines, 61 success criteria). Not all of these guidelines are
applicable to all websites, though there are some that are more
frequently relevant than others.</p>
<div style="padding: 1em;margin: 1em 0;border: 1px solid #bbb">
<p><strong>Required Reading:</strong> Earlier in this unit, we
encouraged you to become familiar with <a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/10KeyGuidelines.pdf"
target="_blank" rel="noopener noreferrer">10 Key Guidelines [PDF]</a>
that we provided in a downloadable document. If you have not already
done so, please take the time now to download and read this
document.</p>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-024-wcag-2-0-web-auditing-review-template.xhtml"></span></p>
<article>
<div
id="chapter-024-wcag-2-0-web-auditing-review-template.xhtml_wcag-2-0-web-auditing-review-template"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">WCAG Web Auditing Review Template</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>Now that you have an understanding of WCAG, we will introduce you to
an accessibility auditing template. You can use the template to record
issues when you conduct audits, but it also acts as a checklist to help
commit the guidelines to memory. For now, review the layout and elements
of the Web Auditing Review Template and add it to your Web Accessibility
Auditing Toolkit.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<strong>Toolkit:</strong> Download the <a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/04/WCAG21_review_template.docx">WCAG
2.1 review template[doc]</a>  and add it to your Toolkit. Create a
“webaudits” file folder on your hard drive, and save it there. As you
complete audits, save them to subfolders you create here to organize the
audit reports you generate.
</div>
<h2>Elements of the Review Template</h2>
<p><strong>Title:</strong> This field should indicate the type of
review, either General, Template, or Detailed (to be covered in greater
detail in the unit <a
href="#chapter-062-web-accessibility-audit-reporting.xhtml"
class="toc__chapter-title">Web Accessibility Audit Reporting</a>) and
the guideline it is based on.</p>
<p><strong>Location:</strong> The URL of the homepage of the site being
reviewed.</p>
<p><strong>Date:</strong> The date the review was finished.</p>
<p><strong>Reviewer:</strong> The name of the person(s) who completed
the review.</p>
<p><strong>Guideline Reference:</strong> A link to the guideline(s) the
review is based upon.</p>
<p><strong>Tools Used During This Review:</strong> A list of the tools
used in the review, including automated checkers, browsers, browser
plugins, readability test tool, colour contrast test tool, screen
readers, and any other tools used. Be sure to mention version numbers if
applicable.</p>
<p><strong>General Comments:</strong> An overview of the result of the
WCAG 2.1 Review (below), outlining the key issues, why they are issues,
with brief mention of potential solutions. This section is written for a
general audience, minimizing the use of technical language.</p>
<p><strong>WCAG 2.1 Review:</strong> The main content of the review.
This is a list of WCAG 2.1 success criteria, each one’s conformance
level (A, AA, AAA), the evaluation received (Pass, Fail, Pass?, Fail?
N/A), and comments associated with the evaluations. These comments
should identify accessibility issues relevant to the guideline, explain
why an issue presents a barrier, and offer potential solutions to
resolve issues. The review should be aimed at the web developers who
will be resolving the issues identified and may contain technical
language and sample code that can be replicated. Screenshots and other
graphics can be used to enhance explanations given in the text of the
comments.</p>
<p>There will likely be cases when borderline issues are identified,
where it could be argued that some element may pass or fail the
associated success criteria. In such cases “Pass?” (with the question
mark) is used where the auditor is leaning toward a pass, but others
might argue it fails. And, use “Fail?” where the auditor is leaning
toward a fail, though others might argue it passes. One example might be
a description for an image provided in an alt attribute that does not
fully describe the meaningful information in the image. In such cases it
is often a subjective decision by the auditor, commenting to the author
of the alt text to review the text to determine whether it “adequately”
describes the meaning one should take away from the image if it were
being viewed. Questionable pass or fail is described more thoroughly in
the example linked in the Toolkit box below.</p>
<p>Note that the AAA items are greyed out, as well as the two AA success
criteria (1.2.4, 1.2.5) that are not required by AODA (this is relevant
to Ontario-based participants). If you are auditing in a jurisdiction
that requires these guidelines, you might choose to adjust the template
by removing the grey for these two guidelines. Otherwise grey items are
optional, though when reviewing content issues associated with these
guidelines, recommendations can still be made to implement techniques
associated with these guidelines to improve overall usability.</p>
<p><strong>Other Notes:</strong> While not included in the template,
there are occasions when a reviewer needs to comment on issues not
associated with the accessibility of the site being reviewed. For
instance, a reviewer might mention potential bugs that may have been
identified, include information about posting an accessibility statement
or provide details on next steps following the review, such as planning
a follow-up review after issues are addressed, or arranging a time to
address questions that arise from the report.</p>
<p><strong>Appendix:</strong> While not included in the template, the
Appendix should include a list of the pages sampled from the site that
was reviewed.</p>
<h2>Example of a Completed Review</h2>
<p>In 2012 a General Review of Canvas was posted by OCAD University in
Toronto, which was in the process of selecting a new LMS for the
university. The review was posted publicly, so it works well as an
example of what a completed review might look like.<br />
</p>
<p>This review looked at a series of tasks, like reading a post in the
forums and posting a reply, reviewing test results and checking marks in
the Gradebook, and so on (these scenarios were described in the
appendices, missing from the publicly-posted review). The result of
these scenarios were combined into a General Review (see the unit Web
Accessibility Audit Reporting for a description of different types of
reviews). Read through parts of the review to get an idea of the types
of information it contains.<br />
</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<strong>Toolkit:</strong> Study the <a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/WCAG2_review_Canvas_lms.pdf">WCAG2
Review of the Canvas Lms</a> for examples of the types of information
that can be found in a web accessibility review. Add it to your Toolkit
as a reference.
</div>
<p>You might ask, if there are so many issues, why did we use Canvas to
deliver the online course version of the content here? Following the
publication of the review, Canvas did pay attention and put considerable
effort into improving the accessibility of their system. In 2014, Canvas
accessibility had been much improved, though with still a few areas
where improvements could be made. Compared with other Learning
Management Systems, the current version of Canvas fares well in terms of
accessibility.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-025-activity-wcag-scavenger-hunt.xhtml"></span></p>
<article>
<div
id="chapter-025-activity-wcag-scavenger-hunt.xhtml_activity-wcag-scavenger-hunt"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Activity: WCAG Scavenger Hunt</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p><img src="OEBPS/assets/activity-2.png"
class="size-full wp-image-161 alignright" width="125"
height="131" /></p>
<p>Now that you have been introduced to the key guidelines you’ll refer
to often when conducting accessibility reviews, it will be necessary for
you to expand on your understanding of <strong><a
href="https://www.w3.org/TR/WCAG21" target="_blank"
rel="noopener noreferrer">WCAG 2.1</a> </strong>by eventually reading
through the full specification (if possible, before completing the 
reading  and activities here).</p>
<p>To become comfortable with WCAG 2.1 and its associated documentation,
try this Scavenger Hunt challenge. Below is a list of barriers that
you’ll likely see on many websites. For each barrier, find a relevant
guideline and match a sufficient technique (with its ID) to remove the
barrier. <strong><a href="https://www.w3.org/WAI/WCAG21/quickref"
target="_blank" rel="noopener noreferrer">How to Meet WCAG
2.1</a></strong> is a good reference.</p>
<p>Happy hunting!</p>
<h2>Example</h2>
<p><strong>Barrier:</strong> Pre-recorded video does not audibly
describe meaningful visual activity</p>
<p><strong>Technique ID:</strong> G78: Providing a second,
user-selectable, audio track that includes audio descriptions.</p>
<h2>List of Barriers</h2>
<ol>
<li>Image has no text alternative</li>
<li>Video has no captions</li>
<li>Colour is used on its own to represent meaning</li>
<li>Contrast between text and background colours is insufficient
(&lt;4.5:1)</li>
<li>Form button is not keyboard operable</li>
<li>Page redirects to another before contents can be read</li>
<li>Webpage does not have a descriptive title</li>
<li>No means is provided to skip past large main menu on a webpage</li>
<li>The language of a page is not defined</li>
<li>Page redirects when a form radio button receives focus</li>
</ol>
<p><a href="#back-matter-003-answers.xhtml#answers-activity-2">Suggested
Answers to Activity</a></p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-026-self-test-2.xhtml"></span></p>
<article>
<div id="chapter-026-self-test-2.xhtml_self-test-2"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Self-Test 2</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p> </p>
<div class="print">
<section class="bcc-box bcc-info">
<h4><strong>Question 1</strong></h4>
<p><strong>Which WCAG 2.0 level of conformance is considered the
generally agreed upon level that organizations should aim for when
addressing the accessibility of their websites?</strong></p>
<ol type="a">
<li>Level A</li>
<li>Level AA</li>
<li>Level AAA</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 2</strong></h4>
<p><strong>Which TWO of these guidelines are considered the most
important in terms of reducing the greatest number of potential
barriers, according to “10 Key Guidelines” introduced in Unit
2?</strong></p>
<ol type="a">
<li>1.1.1 Non-Text Content</li>
<li>2.1.1 Keyboard Accessible</li>
<li>2.4.1 Bypass Blocks</li>
<li>3.1.1 Language of Page</li>
<li>3.1.5 Reading Level</li>
<li>4.1 Parsing</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 3</strong></h4>
<p><strong>Which of the following are NOT principles of WCAG 2.0? Please
select all that apply.</strong></p>
<ol type="a">
<li>Perceivable</li>
<li>Operable</li>
<li>Understandable</li>
<li>Reproducible</li>
<li>Predictable</li>
<li>Robust</li>
</ol>
</section>
<p><a href="#back-matter-003-answers.xhtml#answers-self-2">Answers to
Self-Test 2</a></p>
</div>
<div class="textbox interactive-content">
<span class="interactive-content__icon"></span>
<p>An interactive or media element has been excluded from this version
of the text. You can view it online here:<br />
<a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1298#pb-interactive-content"
title="Self-Test: Unit 2">https://pressbooks.library.ryerson.ca/pwaa/?p=1298</a></p>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="part-004-automated-testing-tools.xhtml"></span></p>
<article>
<div id="part-004-automated-testing-tools.xhtml_automated-testing-tools"
class="part">
<div class="part-title-wrap">
<h3 class="part-number"></h3>
<h1 class="part-title">3. Automated Testing Tools</h1>
</div>
</div>
</article>
<p><span id="chapter-027-introduction-3.xhtml"></span></p>
<article>
<div id="chapter-027-introduction-3.xhtml_introduction-3"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Automated Testing Tools</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>In this unit and the next, we will move from the general overview to
look more closely at the necessary tools and strategies for assessing
the accessibility of web content. Specifically, we will examine:</p>
<ul>
<li>Automated web accessibility testing tools (i.e., accessibility
checkers)</li>
<li>Tools for evaluating colour contrast, validating HTML markup, and
determining the reading level of web content</li>
<li>Assistive technologies (AT)</li>
<li>Manual testing strategies</li>
</ul>
<p>Building on the general understanding of automated review tools
introduced in the unit <a href="#chapter-007-introduction.xhtml">Aspects
of Web Accessibility Auditing</a>, this unit focuses on a few specific
tools that you will want to add to your toolkit. We won’t cover all the
potential tools you might use, but rather focus on learning how to use
some of the popular tools. Feel free to explore beyond those introduced
here.</p>
<p>The first group of tools we will look at are automated accessibility
checkers. These are typically web-based tools that take a URL or a
copied HTML page, scan through the HTML and run a variety of tests to
determine the presence or absence of accessibility features. We will
look at:</p>
<ul>
<li>AChecker, developed at the Inclusive Design Research Centre at OCAD
University in Toronto</li>
<li>The WAVE Accessibility Evaluation Tool, developed by the WebAIM
group at the Center for Persons with Disabilities at Utah State
University</li>
</ul>
<p>We’ll list a few others too, that you may want to investigate on your
own.</p>
<p>After familiarizing yourself with the automated accessibility testing
tools, we’ll look at a few other automated tools for:</p>
<ul>
<li>Testing colour contrast</li>
<li>Evaluating reading level</li>
<li>Validating HTML markup</li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-028-objectives-and-activities-4.xhtml"></span></p>
<article>
<div
id="chapter-028-objectives-and-activities-4.xhtml_objectives-and-activities-4"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Objectives and Activities</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2>Objectives</h2>
<p>By the end of this unit, you will be able to:<span class="nosee"><img
src="OEBPS/assets/checklist-e1516288820283-1.png"
class="size-full wp-image-74 alignright" width="100"
height="101" /></span></p>
<ul>
<li>Practice using one or more automated web content accessibility
checkers.</li>
<li>Evaluate the strengths and limitations of automated web content
accessibility checkers.</li>
<li>Select the automated web content accessibility checker that you wish
to include in your Web Accessibility Auditing Toolkit.</li>
<li>Operate other tools used in accessibility testing.</li>
</ul>
<h2>Activities</h2>
<ul>
<li>View walk-through/screencast videos of AChecker and WebAIM
tools</li>
<li>Test websites you are familiar with</li>
<li>Test for colour contrast conformance</li>
<li>Test for readability conformance</li>
<li>Build your Toolkit (add bookmarks for tools introduced)</li>
<li>Self-Test 3</li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-029-limitations-of-automated-web-accessibility-checkers.xhtml"></span></p>
<article>
<div
id="chapter-029-limitations-of-automated-web-accessibility-checkers.xhtml_limitations-of-automated-web-accessibility-checkers"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Limitations of Automated Web Accessibility
Checkers</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>Automated accessibility checkers are a must in your Web Accessibility
Auditing Toolkit, though it is important to understand their
limitations. Think of an automated accessibility checker like a spell
checker in a word processor. Though a good start for identifying
misspelled words, a person must still read through the text to ensure
words have been used correctly (e.g., where “there” is used in place of
“their”). For now, <strong>human judgement must also be
involved</strong> for any potential barriers that involve assessing
meaning. For example, automated checkers can identify ambiguous phrases
like “click here” or “this link” used as link text, but a person needs
to determine whether this text accurately describes the link’s
destination or function. Similarly, a person must decide whether alt
text or a long description for an image accurately describes the
meaningful information in the image, something automated checkers cannot
currently do.</p>
<p>You may also want to make use of multiple accessibility checkers and
compare results. See the Activity at the end of this unit for an
exercise comparing automated accessibility checkers.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #b9f">
<strong>Try This:</strong> Can you think of other instances where human
judgement is required to assess the full extent of a barrier in web
content?
</div>
<p>Another limitation worth noting is that automated checkers are
unlikely to identify with certainty whether accessible equivalents are
available for web content that has been flagged as a potential barrier.
A human perspective is required to make the association between
equivalent elements. However, the site provider may offer an accessible
HTML version of the page as well. An automated checker would not
recognize the connection between the barrier and its accessible
alternative, but a person would.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-030-achecker-web-accessibility-checker.xhtml"></span></p>
<article>
<div
id="chapter-030-achecker-web-accessibility-checker.xhtml_achecker-web-accessibility-checker"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">AChecker Web Accessibility Checker</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<p><strong>Toolkit:</strong> Add the public version of <strong><a
href="https://www.achecker.ca" target="_blank"
rel="noopener noreferrer">AChecker Web Accessibility
Checker</a></strong> to your Toolkit.</p>
<p>In the public version, you can set up an account and do your
automated accessibility testing. See below for details on downloading
and installing your own version.</p>
</div>
<h2>Overview</h2>
<div style="padding: 1em;margin: 1em 0;border: 1px solid #bbb">
<p><strong>Fun Fact!</strong> AChecker was originally developed as an
<strong><a
href="https://www.grants.gov.on.ca/GrantsPortal/en/OntarioGrants/GrantOpportunities/PRDR006997"
target="" rel="noopener noreferrer">Enabling Change
project</a></strong>, the same fund that supported the development of
the materials here.</p>
</div>
<p>First released in 2005, AChecker was created with the goal of
providing an accessibility checking tool that was 100% transparent,
interactive, customizable, and free. AChecker makes use of the Open
Accessibility Checks (OAC), which is a collection of checks based on all
web accessibility guidelines available globally. Currently, there are a
total of 310 OAC checks employed by AChecker.</p>
<h2>AChecker Features</h2>
<p>AChecker has specific features for public users, registered users,
administrators, and developers. To take advantage of these features, you
should first create an account on the public AChecker site, if you are
not planning to install a version of your own (see below). Follow the
link you added to your Toolkit above, and click “Register” to create an
account. Creating an account will allow you to save your accessibility
reviews, and generate an AChecker seal for sites that pass its
review.</p>
<p><img src="OEBPS/assets/achecker_screen-1.png" width="683"
height="407" alt="AChecker screenshot" /></p>
<p><strong>Figure:</strong> <strong>AChecker screenshot showing the main
interface for conducting accessibility reviews</strong></p>
<p>For more about using AChecker, watch the following video:</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=jtNyF7KuOk8"
target="_blank" rel="noopener noreferrer">Using AChecker to Test Web
Accessibility</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-13.jpg"
title="Using AChecker to Test Web Accessibility"
alt="Thumbnail for the embedded element &quot;Using AChecker to Test Web Accessibility&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1311#pb-interactive-content"
title="Using AChecker to Test Web Accessibility">https://pressbooks.library.ryerson.ca/pwaa/?p=1311</a></p>
</div>
<p><span class="small">© Greg Gay. Released under the terms of a
Standard YouTube License. All rights reserved.</span></p>
<h2>Set Up Your Own AChecker</h2>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0be">
<p><strong>Technical</strong></p>
<p><a
href="https://github.com/inclusive-design/AChecker/archive/master.zip"
target="_blank" rel="noopener noreferrer">Download AChecker</a></p>
<p><strong>Installation Instructions</strong></p>
<ul>
<li>Unzip the master.zip file downloaded from GitHub into a php-enabled,
web-accessible directory.</li>
<li>Open the installer in your browsers at
http://[yourserver.com]/AChecker/install</li>
<li>Follow the instructions provided by the installer.</li>
</ul>
<p><strong>Installing from GitHub or If You Plan to
Contribute</strong></p>
<p>If you are familiar with using GitHub, you can clone the most current
source code from there. This version often has new features not
available yet in the public site, or in the downloadable version of the
software, though it may be less stable than the publicly-distributed
version. If you would like to participate in AChecker’s development, or
you would like to add your own accessibility checks, or perhaps fix a
bug you’ve found, working from GitHub is the way to have your work added
to the public source code.</p>
<p><strong><a href="https://github.com/inclusive-design/AChecker"
target="_blank" rel="noopener noreferrer">AChecker Source
Code</a></strong></p>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-031-wave-accessibility-evaluation-tool.xhtml"></span></p>
<article>
<div
id="chapter-031-wave-accessibility-evaluation-tool.xhtml_wave-accessibility-evaluation-tool"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">WAVE Accessibility Evaluation Tool</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2>Overview</h2>
<p>Another popular free accessibility checker is WAVE, developed by
WebAIM at the Center for Persons with Disabilities at Utah State
University. It is a web service, similar to AChecker, though without
much of the interactivity and customizability. Those who prefer a visual
presentation of the issues, as opposed to the list presentation of
AChecker, may find WAVE easier to use.</p>
<h2>WAVE Features</h2>
<p>WAVE is similar to AChecker in the following respects:</p>
<ul>
<li>WAVE can take a URL and assess the page it leads to</li>
<li>It evaluates one page at a time</li>
</ul>
<p>WAVE produces a report by reproducing the page that was reviewed,
inserting a variety of icons into the content to identify errors (known
problems) and alerts (potential problems), as well as the accessibility
features that are present. Clicking on any of the icons will provide a
brief description and a link to additional information.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<strong>Toolkit:</strong> Add the <strong><a
href="http://wave.webaim.org/extension" target="_blank"
rel="noopener noreferrer">WAVE Chrome Extension</a></strong> to your
Toolkit.
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-032-other-notable-accessibility-review-tools.xhtml"></span></p>
<article>
<div
id="chapter-032-other-notable-accessibility-review-tools.xhtml_other-notable-accessibility-review-tools"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Other Notable Accessibility Review Tools</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>Explore the links listed here to get an idea of the range of
accessibility checkers currently available, and the variation in these
types of tools. Add them to your Web Accessibility Auditing Toolkit if
you find them useful.</p>
<h2>Free Tools</h2>
<p>For basic accessibility testing, you may find these free tools
useful.</p>
<ul>
<li><a href="http://www.cynthiasays.com" target="_blank"
rel="noopener noreferrer">Cynthia Says</a></li>
<li><a href="http://fae20.cita.illinois.edu" target="_blank"
rel="noopener noreferrer">FAE (Functional Accessibility
Evaluator)</a></li>
<li><a
href="https://chrome.google.com/webstore/detail/axe/lhdoppojpmngadmnindnejefpokejbdd?hl=en"
target="_blank" rel="noopener noreferrer">aXe (Chrome plugin)</a></li>
<li><a
href="https://addons.mozilla.org/en-us/firefox/addon/axe-devtools"
target="_blank" rel="noopener noreferrer">aXe (Firefox plugin)</a></li>
<li><a
href="http://www.validatore.it/vamola_validator/checker/index.php"
target="_blank" rel="noopener noreferrer">Vamola (Italian version of
AChecker)</a></li>
</ul>
<h2>Proprietary (Fee for License)</h2>
<p>For larger sites, or for in-depth testing across a website, these
enterprise level accessibility testing tools may be helpful.</p>
<ul>
<li><a
href="https://www.cryptzone.com/products/content-governance/compliance-sheriff"
target="" rel="noopener noreferrer">HiSoftware Compliance
Sheriff</a></li>
<li><a href="https://siteimprove.com/en/resources/toolkits"
target="_blank" rel="noopener noreferrer">Siteimprove</a></li>
<li><a
href="http://www.powermapper.com/products/sortsite/ads/acc-accessibility-testing"
target="_blank" rel="noopener noreferrer">PowerMapper Accessibility
Testing Tools</a></li>
<li><a href="https://tenon.io">Tenon</a></li>
</ul>
<h2>Even More Tools</h2>
<p>Collections of accessibility testing tools can be found through the
following resources.</p>
<ul>
<li><a
href="http://www.paciellogroup.com/blog/2014/10/accessibility-testing-tools-updated"
target="_blank" rel="noopener noreferrer">Paciello Group Accessibility
Testing Tools</a></li>
<li><a href="http://www.w3.org/WAI/ER/tools" target="_blank"
rel="noopener noreferrer">W3C WAI Accessibility Evaluation Tools
List</a></li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-033-colour-contrast-evaluation.xhtml"></span></p>
<article>
<div
id="chapter-033-colour-contrast-evaluation.xhtml_colour-contrast-evaluation"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Colour Contrast Evaluation</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2>Colour Blindness Simulations</h2>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #b9f">
<strong>Try This:</strong> To experience how colour blindness affects
people’s ability to see colour, experiment with the <strong><a
href="http://www.color-blindness.com/coblis-color-blindness-simulator"
target="_blank" rel="noopener noreferrer">Coblis – Color Blindness
Simulator</a>.</strong>
</div>
<h2>Colour Contrast Testers</h2>
<p>A quick search of the Internet for “colour contrast test” should turn
up a variety of tools you can use to test contrast. Here, we will
mention the WebAIM Color Contrast Checker, but if you prefer another,
you can add it to your Toolkit.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<strong>Toolkit:</strong> Bookmark the WebAIM <strong><a
href="http://webaim.org/resources/contrastchecker" target="_blank"
rel="noopener noreferrer">Color Contrast Checker</a></strong> and add it
to your Toolkit.
</div>
<h2>Why Colour Contrast Is Important</h2>
<p>You may recall from the unit <a
href="https://pressbooks.library.ryerson.ca/pwaa/chapter/introduction-2"
class="toc__chapter-title">Introduction to WCAG 2.0</a> that WCAG 2.0
Guidelines 1.4.3 and 1.4.6 address accessibility issues associated with
colour contrast. These two guidelines are presented below. Note the
<strong>contrast ratios</strong> at each level (4.5:1 &amp; 3:1 at Level
AA and 7:1 &amp; 4.5:1 at Level AAA for smaller and larger text
respectively).</p>
<div style="padding: 1em;margin: 1em 0;border: 1px solid #bbb">
<p><strong>1.4.3 Contrast (Minimum):</strong> The visual presentation of
text and images of text has a <em>contrast ratio of at least 4.5:1</em>,
except for the following (Level AA):</p>
<ul>
<li><strong>Large Text:</strong> Large-scale text and images of
large-scale text have a <em>contrast ratio of at least 3:1</em></li>
<li><strong>Incidental:</strong> Text or images of text that are part of
an inactive user interface component, that are pure decoration, that are
not visible to anyone, or that are part of a picture that contains
significant other visual content, have <em>no contrast
requirement.</em></li>
<li><strong>Logotypes:</strong> Text that is part of a logo or brand
name has <em>no minimum contrast requirement.</em></li>
</ul>
</div>
<div style="padding: 1em;margin: 1em 0;border: 1px solid #bbb">
<p><strong>1.4.6 Contrast (Enhanced):</strong> The visual presentation
of text and images of text has a <em>contrast ratio of at least
7:1</em>, except for the following (Level AAA):</p>
<ul>
<li><strong>Large Text:</strong> Large-scale text and images of
large-scale text have a <em>contrast ratio of at least 4.5:1.</em></li>
<li><strong>Incidental:</strong> Text or images of text that are part of
an inactive user interface component, that are pure decoration, that are
not visible to anyone, or that are part of a picture that contains
significant other visual content, have <em>no contrast
requirement.</em></li>
<li><strong>Logotypes:</strong> Text that is part of a logo or brand
name has <em>no minimum contrast requirement.</em></li>
</ul>
</div>
<p>Some accessibility checkers will have colour contrast evaluation
built into them (e.g., AChecker), but others will not.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0be">
<p><strong>Technical:</strong></p>
<p>There are many colour contrast evaluators from which you may choose
to support your contrast testing (see some suggestions below). Using any
of these tools requires gathering the colour codes from the elements
being evaluated. There are a variety of ways to find these codes, though
the easiest is to use a browser’s “Inspect” feature. You can inspect the
colours in the right frame, as shown in the figure below.</p>
<p><img src="OEBPS/assets/firebug_colours.png"
class="alignnone wp-image-36 size-full"
alt="A screenshot of firebug, with colour codes highlighted in the right panel." /></p>
<p><strong>Figure: Inspect panel showing the colour codes in the Style
pane to the right</strong><br />
Once you’ve tested a few colour combinations you’ll quickly develop a
“feel” for good contrast, and be able to quickly scan a page and
identify where contrast may not be sufficient. You can test the specific
colours associated with those elements you’ve identified in a scan.
There are tools, however, that will evaluate all the colours on a page
(e.g., AChecker) – this may be preferable if you are reviewing a site
that seems to have multiple contrast issues.</p>
</div>
<p>For a walk through the WebAIM colour contrast checker, watch the
following video:</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=denV-EyR2O4"
target="_blank" rel="noopener noreferrer">Checking Colour
Contrast</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-14.jpg"
title="Checking Colour Contrast"
alt="Thumbnail for the embedded element &quot;Checking Colour Contrast&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1317#pb-interactive-content"
title="Checking Colour Contrast">https://pressbooks.library.ryerson.ca/pwaa/?p=1317</a></p>
</div>
<h2>The Anatomy of a Colour Contrast Results Screen</h2>
<p>In the figure below you can see the foreground colour (#007ac6) and
background colour (#ffffff) codes entered into the respective fields.
Below that you will see the compliance status for Normal and Large text,
at Level AA and Level AAA. In this case the colours contrast well enough
to pass at Level AA (4.57:1), but for smaller text the contrast ratio
fails at Level AAA. Sites should aim for Level AA contrast, but if
feasible try for Level AAA compliance.</p>
<p>Note the lighten and darken links next to the colour input field. You
can click these (on the test site) to adjust the colours so they will
pass, then take the resulting colour codes and replace the existing
codes to adjust the colour on the site being evaluated so it
complies.</p>
<p><img src="OEBPS/assets/webaim_contrast.png"
class="alignnone wp-image-37 size-full" width="675" height="463"
alt="The WebAIM Colour Contrast Checker" /></p>
<p><strong>Figure: The WebAIM Colour Contrast Checker<br />
</strong></p>
<h2><strong>Other Contrast Testers</strong></h2>
<p>Here are a few other colour contrast testers you may want to
experiment with:</p>
<ul>
<li><a href="http://contrastchecker.com" target="_blank"
rel="noopener noreferrer">Acart Communications Contrast Checker</a></li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-034-readability-testing.xhtml"></span></p>
<article>
<div id="chapter-034-readability-testing.xhtml_readability-testing"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Readability Testing</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2>Why Is Readability Testing Important?</h2>
<p>Web content authors should use the simplest language possible for the
following reasons:</p>
<ul>
<li><a href="http://publications.gc.ca/pub?id=9.644871&amp;sl=0"
target="_blank" rel="noopener noreferrer">Plain language</a> will
translate more easily for those who may wish to read the site in a
different language.</li>
<li>Plain language will be more accessible to those with lower levels of
literacy.</li>
<li>For a general audience, most readers will appreciate simpler
language over the unnecessary use of complex words.</li>
</ul>
<p>Though appropriate reading level is identified as a Level AAA
requirement in WCAG 2.0, this is one Level AAA guideline that most
<strong>public sites</strong> should aim to meet in order to reach the
broadest possible audience.</p>
<p>The WCAG 2.0 guideline that is relevant to readability is 3.1.5:</p>
<div style="padding: 1em;margin: 1em 0;border: 1px solid #bbb">
<p><strong>3.1.5 Reading Level:</strong> When text requires reading
ability more advanced than the <em>lower secondary education level</em>
after removal of proper names and titles, supplemental content, or a
version that does not require reading ability more advanced than the
lower secondary education level, is available. (Level AAA)</p>
</div>
<h2>Reading Level Test Tools</h2>
<p>Automated accessibility checkers like AChecker and WAVE <span
style="text-decoration: underline">do not</span> test for
readability.</p>
<p>You can find a variety of readability test tools by searching the Web
for “readability test.” These tools run a variety of algorithms that
measure things like word length, number of syllables per word, and
sentence length, to come up with a readability score. We have selected
one example here for you to include in your Toolkit: The Readability
Test Tool.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<strong>Toolkit:</strong> Bookmark <strong><a
href="http://read-able.com" target="" rel="noopener noreferrer">The
Readability Test Tool</a></strong> to add it to your Toolkit.
</div>
<p>This tool, like most others, will allow you to enter a URL to a
webpage, or paste text into a text area. The output from the test
appears in the figure below. In this case the reading level is about
grade 10, in the range acceptable to pass Guideline 3.1.5. The first
area lists a series of readability indices, calculated using various
combinations of the characteristics of the text on the page. If you
visit the tool’s site, the measures for these indices are listed. Below
the indices is a list of the characteristics of the text content. All of
these elements are averaged to come up with an average grade level
score.</p>
<p> </p>
<p><img src="OEBPS/assets/readability.png"
class="alignnone wp-image-38 size-full" width="820" height="629"
alt="Screenshot of the readability test tool output" /></p>
<p><strong>Figure: Readability Test Results from the Readability Test
Tool</strong></p>
<h2>Other Readability Testers</h2>
<ul>
<li><a
href="http://www.online-utility.org/english/readability_test_and_improve.jsp"
target="_blank" rel="noopener noreferrer">Readability
Calculator</a></li>
<li><a href="http://juicystudio.com/services/readability.php"
target="_blank" rel="noopener noreferrer">Juicy Studio Readability
Test</a></li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-035-markup-validation.xhtml"></span></p>
<article>
<div id="chapter-035-markup-validation.xhtml_markup-validation"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Markup Validation</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>Many HTML editing tools will have markup validation built into them,
so you can test the validity of the code while creating it, but since
most sites are dynamically assembled parts, these built-in validators
have limited usefulness. It is necessary to validate markup after the
code has been generated into a webpage using tools like the W3C’s HTML
Validator. This is a tool you should add to your Toolkit.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<strong>Toolkit:</strong> Bookmark the <strong><a
href="https://validator.w3.org" target="" rel="noopener noreferrer">W3C
Markup Validation Service</a></strong> to add it to your Toolkit.
</div>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0be">
<strong>Technical:</strong> The content that follows is intended for a
technical audience.
</div>
<p>The WCAG 2.0 Guideline that deals with markup validation is Guideline
4.1.1. Note that Parsing is a Level A requirement, so despite the fact
that some “careless” code may get by without affecting accessibility,
markup validation needs to be done in order to comply with WCAG 2.0. The
guideline is reproduced below for your reference.</p>
<div
style="padding: 1em;margin: 1em 0;border: 1px solid #bbb;background-color: #fff">
<p><strong>4.1.1 Parsing:</strong> In content implemented using markup
languages, elements have complete start and end tags, elements are
nested according to their specifications, elements do not contain
duplicate attributes, and any IDs are unique, except where the
specifications allow these features. (Level A)</p>
<p><em>Note:</em> Start and end tags that are missing a critical
character in their formation, such as a closing angle bracket or a
mismatched attribute value quotation mark are not complete.</p>
</div>
<h2>Why Perform Markup Validation?</h2>
<p>Markup validation ensures that the HTML of web content is well
formed, and used in a way that is compliant with the HTML
specifications. It is important that HTML be clean and properly
structured for the following reasons:</p>
<ul>
<li>Assistive technologies, such as screen readers, generally rely on
the HTML to properly interpret content. Technologies will attempt to
correct markup errors themselves, but there are some markup errors that
will trip up assistive technologies, such as table cells that are not
closed, or duplicate IDs used on a page.</li>
<li>Clean markup is a sign of quality work, and validating HTML should
be something developers do consistently.</li>
<li>Clean markup ensures that barriers are not introduced inadvertently
because of broken code.</li>
</ul>
<h2>When to Perform Markup Validation?</h2>
<p>Markup validation should be done as early as possible in the web
accessibility auditing process. It can help rule out apparent barriers
when testing content with assistive technologies, so it is helpful to
validate the HTML before doing any screen reader testing. We’ll talk
more about screen reader testing in the section <a
href="#chapter-049-screen-reader-testing-2.xhtml"
class="toc__chapter-title">Screen Reader Testing</a>.</p>
<h2>Notable Constraints of Markup Validation</h2>
<p>In reality it can be difficult to achieve 100% validation, and
sometimes it may be necessary to let markup errors go. Below are some
examples of situations that might require a developer’s and/or auditor’s
judgement.</p>
<p><strong>ARIA in an XHTML document:</strong> Developers may wish to
use <strong>ARIA in an XHTML document</strong>, which will fail
validation because ARIA is not a part of the XHTML specification (it’s
part of HTML5). Using ARIA in XHTML can enhance accessibility, so as an
auditor you may choose to ignore these validation errors.</p>
<p><strong>HTML5 Elements:</strong> If HTML5 elements such as
<code>nav</code> are being used to create a navigation bar, validation
will produce warnings if the ARIA <code>role="navigation"</code> is used
in that element. The<code>nav</code> element is supposed to already have
a role of navigation built in. In reality, though, there is still
inconsistent support for the <code>nav</code> element, so developers
will often add <code>role="navigation"</code> as a fallback for
technologies that do not identify <code>nav</code> correctly. From an
accessibility perspective, it does not hurt to have the redundant roles
in HTML5 elements.</p>
<p><strong>External Services:</strong> Another common validation issue
occurs when developers use external services within markup that injects
third party HTML into the code of a site. Google ads from Adwords, for
instance, tend to introduce validation errors, though these errors have
no bearing on accessibility.</p>
<p>In all of the above cases, judgement is needed to decide whether the
invalid markup creates a potential barrier or not, and whether these
errors should be reported in a web accessibility audit. Such errors can
cause a site to fail at Level A, which can have legal implications in
jurisdictions that require Level A compliance. They can also have
implications for auditors who choose to ignore these errors and pass a
site at Level A, despite the HTML not validating.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> If a site is given Level A compliance with
any of these validation errors present, an explanation must be provided
in the audit report.
</div>
<h2>How Validators Work</h2>
<p>Much like the automated accessibility checkers, it is possible to
have the validator assess markup via URL, file upload, or by pasting in
HTML. Note that the HTML must be a full HTML document, with all the
necessary components including a DOCTYPE declaration, an opening HTML
element, a HEAD element and Title, as well as opening and closing BODY
elements and a closing HTML element at the end of the document.</p>
<p>When running the validator there are a variety of settings that can
be adjusted, though the default settings are usually sufficient. One
option you may want to enable is “<strong>Show Source</strong>” which
prints out the HTML of the page, making it easier to identify exactly
where issues occur in the page. This option and others are shown in the
screenshot of the W3C Validator that follows. The W3C Validator will
also identify some accessibility issues, such as images missing alt text
or use of duplicate IDs within the content.</p>
<p> </p>
<p><img src="OEBPS/assets/validator.png"
class="alignnone size-full wp-image-39" width="764" height="547"
alt="W3C Markup Validation Service opening screen" /></p>
<p><strong>Figure: The W3C Markup Validation Service opening screen,
with various options displayed</strong></p>
<p><a href="#chapter-035-markup-validation.xhtml_x039">⇧ Back to
Top</a></p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-036-activity-compare-achecker-and-wave.xhtml"></span></p>
<article>
<div
id="chapter-036-activity-compare-achecker-and-wave.xhtml_activity-compare-achecker-and-wave"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Activity: Compare AChecker and WAVE</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2><span class="nosee"> <img src="OEBPS/assets/activity-2.png"
class="size-full wp-image-161 alignright" width="125" height="131" />
</span></h2>
<p>If you have had an opportunity to begin experimenting with the
AChecker and/or WAVE automated accessibility review tools, consider
these questions for self-reflection:</p>
<ul>
<li>What advantages/disadvantages have you found for each of these
tools?</li>
<li>What features do you find most useful?</li>
<li>How do they compare in the reports they generate? Do you get the
same result? If not, how do they differ?</li>
<li>If you have used other accessibility checkers not listed in the
course, how do they compare to WAVE and AChecker?</li>
</ul>
<p> </p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-037-self-test-3.xhtml"></span></p>
<article>
<div id="chapter-037-self-test-3.xhtml_self-test-3"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Self-Test 3</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div class="print">
<section class="bcc-box bcc-info">
<h4><strong>Question 1</strong></h4>
<p><strong>Please follow the directions below and then select all
applicable options:</strong></p>
<ul>
<li><strong>Open a new browser window.</strong></li>
<li><strong>Launch one of the one of the colour contrast testing tools
presented in Unit 3.</strong></li>
<li><strong>Once you have opened the tool, enter each pair of colour
identifiers (foreground, background) listed below in the appropriate
fields pair, and identify which ones provide sufficient contrast to pass
Guideline 1.4.3. Assume the foreground text is a 12 point
font.</strong></li>
<li><strong>Select all pairs below that pass Guideline
1.4.3.</strong></li>
</ul>
<ol type="a">
<li>0000ff, ffffff</li>
<li>9a9aff, efefef</li>
<li>9a9aff, 7a4fef</li>
<li>000000, 8f6bf1</li>
<li>5c5c5c, 63f1af</li>
<li>4c4c4c, 11c973</li>
<li>4d4d4d, c9a1c1</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 2</strong></h4>
<p><strong>Please follow the directions below and then select the
correct option:</strong></p>
<ul>
<li><strong>Open a new browser window.</strong></li>
<li><strong>Launch the <a
href="http://www.webpagefx.com/tools/read-able" target="_blank"
rel="noopener noreferrer">readability test tool</a>.</strong></li>
<li><strong>Once you have opened the tool, evaluate the following block
of text (do not include the quotes surrounding the
paragraph).</strong></li>
<li><strong>Determine the overall reading grade level required to
effectively understand the paragraph.</strong></li>
<li><strong>Select the average grade level range from the list
below.</strong></li>
</ul>
<p><strong>“Though reading level is a Level AAA requirement in WCAG,
this is one Level AAA guideline that most public sites should aim for to
reach the broadest possible audience. Generally speaking Web content
authors should use the simplest language possible (within reason).
Simple text will translate more easily for those who may wish to read
the site in a different language. It will be more accessible to those
with lower levels of education, or for those reading in a second
language. And for a general audience, most readers will appreciate
simpler language over unnecessary use of “big” words. Being able to
explain things in simple language for most, is a more intelligent use of
language than loading it with jargon, complex terminology, and
unnecessarily complicated words and sentences.”</strong></p>
<ol type="a">
<li>6 to 7</li>
<li>8 to 9</li>
<li>10 to 11</li>
<li>12 to 13</li>
<li>14 to 15</li>
<li>16 to 17</li>
<li>18 to 19</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 3</strong></h4>
<p><strong>Please follow the directions below and then select the
correct option:</strong></p>
<ul>
<li><strong>Launch <a href="https://achecker.ca/checker/index.php"
target="_blank" rel="noopener noreferrer">AChecker</a></strong></li>
<li><strong>Launch <a href="http://wave.webaim.org" target="_blank"
rel="noopener noreferrer">WAVE</a></strong></li>
<li><strong>In each checking tool, enter the following Web page: <a
href="https://de.ryerson.ca/wa/showcase/image.html" target="_blank"
rel="noopener noreferrer">Web Accessibility Auditing Showcase:
Images</a></strong></li>
<li><strong>Identify the number of “Known” problems flagged by each
tool.</strong></li>
<li><strong>What is the difference between the number of known problems
identified in AChecker and the number of errors identified by
WAVE?</strong></li>
<li><strong>Select the correct answer from the options
below.</strong></li>
</ul>
<ol type="a">
<li>none</li>
<li>one</li>
<li>two</li>
<li>three</li>
<li>four</li>
<li>five</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 4</strong></h4>
<p><strong>Based on the evaluations that you did in the Question 3,
which of the following issues did both checkers identify? Please select
all that apply.</strong></p>
<ol type="a">
<li>missing form label</li>
<li>headings used improperly</li>
<li>image missing alt text</li>
<li>colour contrast is insufficient</li>
<li>link text may not be meaningful</li>
<li>duplicate IDs were found</li>
<li>image may contain text that is not in the alt text</li>
</ol>
</section>
<p><a href="#back-matter-003-answers.xhtml#answers-self-3">Answers to
Self-Test 3</a></p>
</div>
<p> </p>
<div class="textbox interactive-content">
<span class="interactive-content__icon"></span>
<p>An interactive or media element has been excluded from this version
of the text. You can view it online here:<br />
<a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1325#pb-interactive-content"
title="Self-Test: Unit 3">https://pressbooks.library.ryerson.ca/pwaa/?p=1325</a></p>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="part-005-manual-testing-strategies.xhtml"></span></p>
<article>
<div
id="part-005-manual-testing-strategies.xhtml_manual-testing-strategies"
class="part">
<div class="part-title-wrap">
<h3 class="part-number"></h3>
<h1 class="part-title">4. Manual Testing Strategies</h1>
</div>
</div>
</article>
<p><span id="chapter-038-manual-testing-strategies.xhtml"></span></p>
<article>
<div
id="chapter-038-manual-testing-strategies.xhtml_manual-testing-strategies"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Introduction to Manual Testing Strategies</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>In addition to automated testing and testing with assistive
technologies (AT), manual testing is an important part of web
accessibility auditing. A number of simple manual tests will be
introduced so you can quickly get a general sense of the accessibility
of a website and identify key issues with just a cursory scan. For the
developers taking this course, more complex manual testing will also be
introduced, involving the examination of source code and dynamically
tweaking code to test potential solutions.</p>
<p>The manual testing strategies discussed in this module include:</p>
<ul>
<li><a href="#chapter-040-tab-key-navigation-test.xhtml">Tab Key
Navigation Test</a></li>
<li><a href="#chapter-041-select-all-test.xhtml">“Select All”
Test</a></li>
<li><a href="#chapter-042-code-examination-and-repair.xhtml">Code
Examination and Repair</a></li>
<li><a href="#chapter-043-media-review.xhtml">Media Review</a></li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-039-objectives-and-activities-5.xhtml"></span></p>
<article>
<div
id="chapter-039-objectives-and-activities-5.xhtml_objectives-and-activities-5"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Objectives and Activities</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2>Objectives</h2>
<p><img src="OEBPS/assets/checklist-e1516288820283-1.png"
class="size-full wp-image-74 alignright" width="100" height="101" />By
the end of this unit, you will be able to:</p>
<ul>
<li>Use manual accessibility tests to quickly identify potential
barriers.</li>
<li>Identify a variety of tools that can assist with web accessibility
auditing.</li>
<li>Identify potential barriers in multimedia content.</li>
<li>Utilize basic code examination strategies to identify and confirm
potential accessibility barriers.</li>
<li>Implement code changes in live webpages to test potential solutions
to accessibility barriers.</li>
</ul>
<h2>Activities</h2>
<ul>
<li>Install and explore browser add-on tools</li>
<li>Reflect on your preferences, pros and cons, and other possible tools
for manual testing</li>
<li>Self-Test 4</li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-040-tab-key-navigation-test.xhtml"></span></p>
<article>
<div
id="chapter-040-tab-key-navigation-test.xhtml_tab-key-navigation-test"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Tab Key Navigation Test</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>The Tab Key Navigation test is often used with the “Select All” test
(discussed on the next page) to confirm whether items that were not
selected are keyboard operable, but this test can also be used on its
own. Place the cursor at the very start of the HTML content (sometimes
tricky), or in the browser’s location field or address bar, then press
the Tab key repeatedly and watch as the cursor moves through the content
of the page. Make the following observations:</p>
<ol>
<li>Are you able to see the cursor’s area of focus as you move through
elements of the page? If not, this will violate Guideline 2.4.7 Focus
Visible (Level AA). When reporting on the issue, recommend adding a
focus indicator so it is possible to visually follow the cursor as it
moves through the page.</li>
<li>As you navigate with the Tab key through elements on the page, do
all functional elements such as links, buttons or forms receive focus?
If not, those elements that do not receive focus are going to be
inaccessible to some people, violating Guideline 2.1.1 Keyboard (Level
A).</li>
</ol>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0be">
<p><strong>Technical: </strong>These elements are often custom features
built with non-standard HTML and JavaScript. In such cases you can
recommend the use of standard HTML where possible or suggest the
developer add keyboard focus for the element by adding
<code>tabindex="0"</code> to the HTML, and add keyboard events, in
addition to the existing mouse events, to the programming that controls
the functionality of the feature.</p>
</div>
<ol start="3">
<li>When navigating with the Tab key through elements of the page, is
the path followed through these elements the standard left to right, top
to bottom sequence? If the cursor’s focus jumps around, moving to places
on the page outside where you might logically expect the cursor to go by
viewing the layout of elements on the page, it may violate Guideline
2.4.3 Focus Order (Level A). By default the focus order will be
standard, so in cases where the order is irregular, it is because the
developer has purposely changed the order. You may recommend removing
the irregular tab sequence or adjusting it to follow a more meaningful
path.</li>
<li>While navigating with the Tab key through menus, and other features
that one can operate with a mouse, do these features also operate with a
keyboard? If they do not, they will be inaccessible to those who use
only a keyboard to move through web content. In the figure below, the
submenus that drop down when one of the main navigation elements is
clicked cannot be opened with a keypress. These types of menus may use
the arrow keys to open and navigate through submenus, or they may
operate using the Tab key. Arrow keys are preferred, though Tab key
navigation will satisfy the success criteria associated with keyboard
operability.</li>
</ol>
<p>For drop down menus like those described in #4 above, also watch for
Tab key navigation moving through the items in the submenus, but the
submenus not visibly opening. This will be confusing for low vision
keyboard users who are following the focus indicator to keep track of
where they are within the page.</p>
<p> </p>
<p><img src="OEBPS/assets/menu_access_2.jpg"
class="alignnone size-full wp-image-40" width="874" height="414"
alt="pointing to a menu that requires a mouse click to operate" /></p>
<p><strong>Figure: Scenario in which the menus only function with a
mouse click (see <a href="https://de.ryerson.ca/wa/lulu" target="_blank"
rel="noopener noreferrer">Lulu’s Lollipops</a>)</strong></p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-041-select-all-test.xhtml"></span></p>
<article>
<div id="chapter-041-select-all-test.xhtml_select-all-test"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">“Select All” Test</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>The “Select All” test can help identify elements in web content that
are not keyboard accessible. The key command for “Select All” in Windows
is Ctrl-A, and for Mac is Command-A.</p>
<h2>How to Perform a “Select All” Test</h2>
<p>After pressing the “select all” key command for the operating system
you are using to select the content of a webpage, scan over the page
looking for elements that are not selected. In the two screenshots
below, the first has nothing yet selected, and the second is the result
of pressing the “select all” key combination.</p>
<p><strong>Compare “Before Select All” above, with “After Select All”
below and notice the elements that do not have the blue background
colour in the latter version.</strong></p>
<h3>Before Select All</h3>
<p><img src="OEBPS/assets/selectall_before.jpg"
class="alignnone size-full wp-image-41" width="769" height="610"
alt="screenshot of a page not yet selected, for comparison with the screenshot below" /></p>
<p><strong>Figure: Screenshot prior to selecting to compare with the
screenshot below</strong></p>
<h3>After Select All</h3>
<p><img src="OEBPS/assets/selectall_after.jpg"
class="alignnone size-full wp-image-42" width="770" height="610"
alt="screenshot with all page elements selected, except for one element" /></p>
<p><strong>Figure: Screenshot after selecting showing elements that do
not appear to be selected</strong></p>
<p>In the second screenshot, the Feedback tab located on the right does
not appear to be selected and is missing the blue background colour that
appears when other elements are selected. That tab should be
investigated further to see if it is keyboard operable. The appearance
of not being selected does not necessarily mean such elements are not
keyboard operable, but warrants further testing. This testing can be
done by using the Tab Key Navigation test described on the previous
page. Using Tab key navigation you can confirm that the Feedback tab on
the right is indeed not keyboard operable. It may then be appropriate to
identify the tab as a potential barrier when reporting on the site. Do
search the screen for other ways to get to the Feedback form. There may
be an accessible alternative elsewhere on the page, in which case it may
be acceptable for the Feedback tab to be inaccessible, as long as the
alternative is relatively easy to access.</p>
<hr />
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-042-code-examination-and-repair.xhtml"></span></p>
<article>
<div
id="chapter-042-code-examination-and-repair.xhtml_code-examination-and-repair"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Code Examination and Repair</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0be">
<strong>Technical:</strong> The content on this page is intended for a
technical audience.
</div>
<div>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<strong>Toolkit:</strong> If your preferred browser is Firefox, you may
wish to install <strong><a
href="https://www.mozilla.org/en-US/firefox/developer" target="_blank"
rel="noopener noreferrer">Firefox for Developers</a></strong>, with
extended developer tools. You can also use the standard <strong>Inspect
Element</strong> tool found in most browsers’ context menu by right
clicking on an element and selecting it from the menu.
</div>
<p>Once you have discovered a potential barrier, you can identify where
the problem is occurring in the HTML markup. In the screenshot below,
the feedback tab (1) on the right of the screen is examined by right
clicking and choosing “Inspect Element with Firebug”” (2).
<strong>Note:</strong> Firebug is now deprecated, but you can do the
same thing with selecting “Inspect Element” from the menu. You will
notice the code associated with the feature is highlighted in the code
window (3) to the lower left. Click on the Edit button (4) to edit that
HTML to test possible solutions.</p>
<p><img src="OEBPS/assets/examine_code-1.png"
class="alignnone size-full wp-image-90" width="626" height="337"
alt="screen shot showing code examination, described above" /></p>
<p><strong>Figure: Steps to examine and modify code to test potential
accessibility solutions</strong></p>
<p>In the case above, the Tab Key Navigation test revealed that the
Feedback tab would not receive focus, thus could not be operated with a
keyboard. A simple fix for this is to add <code>tabindex="0"</code> to
the main element containing the tab. Once added, without reloading the
page, the Tab Key Navigation test is conducted again to see if the tab
now takes keyboard focus. It does, though it is still not possible to
operate the tab, which requires modifying the associated JavaScript.</p>
<p><img src="OEBPS/assets/examine_fix.png"
class="alignnone size-full wp-image-44" width="502" height="176"
alt="firebug code edit window, described in the caption below" /></p>
<p><strong>Figure: Result of adding
<code>tabindex="0"</code></strong></p>
<p>After clicking the Edit button, the selected code from above is
opened for editing. In this case <code>tabindex="0"</code> has been
added to test whether this adds keyboard focus to the Feedback tab
(which it does).</p>
<p>For a look at other tools for examining code, watch the following
video on the Chrome accessibility audits.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=b0Q5Zp_yKaU"
target="_blank" rel="noopener noreferrer">The new way to test
accessibility with Chrome DevTools</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-15.jpg"
title="The new way to test accessibility with Chrome DevTools - A11ycasts #23"
alt="Thumbnail for the embedded element &quot;The new way to test accessibility with Chrome DevTools - A11ycasts #23&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1349#pb-interactive-content"
title="The new way to test accessibility with Chrome DevTools - A11ycasts #23">https://pressbooks.library.ryerson.ca/pwaa/?p=1349</a></p>
</div>
</div>
<p><span class="small">© Google Chrome Developers. Released under the
terms of a Creative Commons Attribution license.</span></p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-043-media-review.xhtml"></span></p>
<article>
<div id="chapter-043-media-review.xhtml_media-review"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Media Review</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>Another element of web content that is typically examined manually is
multimedia. There are three potential accommodations that can be found
with various media: captions, audio description, and transcripts (and
combinations of these, depending on the media).</p>
<h2>Video</h2>
<p>All video with meaningful spoken dialogue must include
<strong>captions</strong> that reproduce the verbal elements of the
video. Depending on the jurisdiction you are in, video may also require
<strong>audio description</strong> (referred to as <strong>described
video</strong> for television) – an audio track added to the video that
describes the action or context of the video that one would not be able
to determine by listening. The third element is an optional
<strong>transcript</strong>, made available as a separate file that can
be downloaded or reviewed online on its own.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> In Ontario, audio description is only
required from government organizations as of 2020, despite being a Level
A requirement in WCAG 2.0. For other organizations in Ontario it is not
required. Audio description, however, can be an important accommodation
for people who are blind, so smaller organizations should still attempt
to provide audio description when needed.
</div>
<p>Adding captions to a video is a fairly straightforward process, with
the right tools. Services like YouTube provide built-in tools that allow
video producers to add captions directly through the YouTube video
manager. Many video production programs also include tools for creating
captions. The Amara caption editor, which will also caption YouTube
videos, can be used to caption videos from other sources on the Web. It
generates a caption file that can be imported into video editors or
players, to quickly add captions. It is also relatively straightforward
to convert the caption file into a transcript, by removing the time
codes from the caption file.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<strong>Toolkit:</strong> Add the <strong><a href="https://amara.org"
target="_blank" rel="noopener noreferrer">Amara Caption
Editor</a></strong> to your Toolkit, familiarize yourself with how it
works, and provide the link to it in your audit reports where missing
captions have been identified.
</div>
<p>One word of caution regarding services that provide automated
captions: these captions do not satisfy the success criterion associated
with Guideline 1.2.2 Captions (Prerecorded) Level A. They may be a
helpful strategy to consider in cases when a video must be posted in a
hurry; however, in many cases these automated captions have a very high
error rate, and provide little accommodation for those who require them.
Only human-generated captions are acceptable to meet the requirements of
this guideline. One of the most useful aspects of automated captions is
that they are a good starting point for human-generated captions. They
can be exported from YouTube into Amara where they can be refined, then
exported back to YouTube. However, the more errors automated captions
have in them, the less useful they become as a starting point for
human-generated captions. With an error rate of about 35% or worse, you
are better off captioning from scratch.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Automated captioning output is not
considered an acceptable text alternative for audio. Captions must be
created by a human being.
</div>
<p>For more on how to use the YouTube and Amara caption editors, view
the videos below.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=FHythZAzk-4"
target="_blank" rel="noopener noreferrer">How to Add Closed Caption
Subtitles on YouTube 2015</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-16.jpg"
title="How to Add Closed Caption Subtitles on YouTube"
alt="Thumbnail for the embedded element &quot;How to Add Closed Caption Subtitles on YouTube&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1351#pb-interactive-content"
title="How to Add Closed Caption Subtitles on YouTube">https://pressbooks.library.ryerson.ca/pwaa/?p=1351</a></p>
</div>
<p><span class="small">© Noah’s World!!!. Released under the terms of a
Standard YouTube License. All rights reserved.</span></p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=-NxoPqYwVwo"
target="_blank" rel="noopener noreferrer">Captioning with Amara Caption
Editor</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-17.jpg" title="Typing Step"
alt="Thumbnail for the embedded element &quot;Typing Step&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1351#pb-interactive-content"
title="Typing Step">https://pressbooks.library.ryerson.ca/pwaa/?p=1351</a></p>
</div>
<p><span class="small">© Amara Subtitles. Released under the terms of a
Standard YouTube License. All rights reserved.</span></p>
<h2>Audio</h2>
<p>Examining the accessibility of audio content is straightforward. When
audio with meaningful spoken information is presented, a transcript must
be provided.</p>
<p>It is also possible in some cases to caption an audio track if it is
being presented in a player that supports captioned audio. Provide
captioned audio where possible, but also be sure to include a
transcript.</p>
<p><img src="OEBPS/assets/captioned_audio.png"
class="alignnone wp-image-45 size-full" width="571" height="185"
alt="captions being displayed in a player over a black background" /></p>
<p><strong>Figure: Example of captioned audio</strong></p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-044-other-tools-for-manual-testing.xhtml"></span></p>
<article>
<div
id="chapter-044-other-tools-for-manual-testing.xhtml_other-tools-for-manual-testing"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Other Tools for Manual Testing</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>You may also find the following tools useful when auditing web
accessibility. Though we won’t go into any detail here, you may
optionally install these add-ons and extensions and explore their
capabilities.</p>
<h3>Firefox Add-ons</h3>
<ul>
<li><a
href="https://addons.mozilla.org/en-us/firefox/addon/web-developer"
target="_blank" rel="noopener noreferrer">Firefox Web Developer
ToolBar</a></li>
<li><a href="https://addons.mozilla.org/en-US/firefox/addon/headingsmap"
target="_blank" rel="noopener noreferrer">HeadingsMap (Firefox
Add-on)</a></li>
<li><a href="http://ainspector.github.io" target="_blank"
rel="noopener noreferrer">AInspector</a></li>
<li><a
href="https://addons.mozilla.org/en-US/firefox/addon/wcag-contrast-checker"
target="_blank" rel="noopener noreferrer">WCAG Contrast Checker</a></li>
</ul>
<h3>Chrome Extensions</h3>
<ul>
<li><a
href="https://chrome.google.com/webstore/detail/wave-evaluation-tool/jbbplnpkjmmeebjpijfedlgcdilocofh"
target="_blank" rel="noopener noreferrer">WAVE Chrome Extension</a></li>
<li><a
href="https://chrome.google.com/webstore/detail/axe/lhdoppojpmngadmnindnejefpokejbdd"
target="_blank" rel="noopener noreferrer">aXe (Accessibility Testing for
Chrome Developer Tools)</a></li>
<li><a
href="https://chrome.google.com/webstore/detail/colorpick-eyedropper/ohcpnigalekghcmgcdcenkpelffpdolg?hl=en"
target="_blank" rel="noopener noreferrer">ColorPick Eyedropper</a></li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-045-activity-chrome-tools.xhtml"></span></p>
<article>
<div id="chapter-045-activity-chrome-tools.xhtml_activity-chrome-tools"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Activity: Chrome Tools</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p><img src="OEBPS/assets/activity-2.png"
class="size-full wp-image-161 alignright" width="125" height="131" />For
this activity you will need the Chrome web browser. Be sure to install
it now if you have not already. You will need it in the next unit as
well. Visit the <a href="https://chrome.google.com/webstore"
target="_blank" rel="noopener noreferrer">Chrome Web Store</a> using the
Chrome web browser, and install the ColorPick Eyedropper and the WAVE
Chrome Extension. Explore the features of these tools and think about
how they might be used during web accessibility auditing activities.</p>
<p> </p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-046-self-test-4.xhtml"></span></p>
<article>
<div id="chapter-046-self-test-4.xhtml_self-test-4"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Self-Test 4</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div class="print">
<section class="bcc-box bcc-info">
<h4><strong>Question 1</strong></h4>
<p><strong>The “Tab Key Navigation test” is useful for identifying a
variety of potential barriers. From those uses listed below, select all
that the Tab Key Navigation test would identify.</strong></p>
<ol type="a">
<li>Focus visibility</li>
<li>Keyboard operability</li>
<li>Missing alt text</li>
<li>Focus order</li>
<li>Descriptive feedback</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 2</strong></h4>
<p><strong>Which of the following potential barriers would the “Select
All test” be useful in identifying? Select all that apply.</strong></p>
<ol type="a">
<li>Focus visibility</li>
<li>Keyboard operability</li>
<li>Missing alt text</li>
<li>Focus order</li>
<li>Descriptive feedback</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 3</strong></h4>
<p><strong>To examine the HTML markup associated with a potential
barrier that has been identified using the Tab Key Navigation or Select
All tests, a recommended approach would be to use:</strong></p>
<ol type="a">
<li>The browser’s “View Source” function</li>
<li>The Browser’s “Inspect Element” function</li>
<li>Install and use the “Examine Markup” browser plugin</li>
<li>The W3C Markup Validator</li>
<li>Use the WebAIM toolbar’s view source feature</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 4</strong></h4>
<p><strong>When reviewing video content for accessibility, which of the
following alternatives does WCAG 2.0 suggest should be provided? Select
all that apply.</strong></p>
<ol type="a">
<li>An alternative slideshow for those who do not have a video
player</li>
<li>Captioning</li>
<li>A downloadable PDF version</li>
<li>A downloadable slideshow version</li>
<li>A transcript</li>
<li>Audio description</li>
</ol>
</section>
<p><a href="#back-matter-003-answers.xhtml#answers-self-4">Answers to
Self-Test 4</a></p>
</div>
<p> </p>
<div class="textbox interactive-content">
<span class="interactive-content__icon"></span>
<p>An interactive or media element has been excluded from this version
of the text. You can view it online here:<br />
<a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1357#pb-interactive-content"
title="Self-Test: Unit 4">https://pressbooks.library.ryerson.ca/pwaa/?p=1357</a></p>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="part-006-assistive-technology-testing.xhtml"></span></p>
<article>
<div
id="part-006-assistive-technology-testing.xhtml_assistive-technology-testing"
class="part">
<div class="part-title-wrap">
<h3 class="part-number"></h3>
<h1 class="part-title">5. Assistive Technology Testing</h1>
</div>
</div>
</article>
<p><span id="chapter-047-assistive-technology-testing.xhtml"></span></p>
<article>
<div
id="chapter-047-assistive-technology-testing.xhtml_assistive-technology-testing"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Assistive Technology Testing</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>In this unit we will look more closely at assistive technology
testing, and particularly testing with a screen reader, and in the next
unit we will look at strategies for including people with disabilities
as part of a web accessibility audit. Specifically, we will examine:</p>
<ul>
<li>Screen readers as an accessibility testing tool</li>
<li>ChromeVox screen reader and learning to use it</li>
<li>Screening user testers</li>
<li>Developing user testing protocols</li>
</ul>
<div
style="margin: 1em 0;padding: 1em;background-color: #fff5cc;border: 1px solid #ddd">
<p><span class="nosee"><img
src="OEBPS/assets/striped_lollipop_morgaine1976-300px-150x150-1-e1521733755321.png"
class="size-full wp-image-75 alignleft" width="50"
height="50" /></span>Many of Lulu’s potential clients might use
assistive technology to access her site, so to help ensure the success
of Lulu’s “barrier-breaking” efforts, it is important to assess how the
site and these devices interact.</p>
</div>
<p>There is a wide range of assistive technologies (AT) that people use
to access the Web, from browser-based tools for magnifying text, to
screen readers that read back text content, to various types of hardware
such as braille displays, or switches and scanners that can be used by
those with limited physical mobility to control keyboard and mouse
actions.</p>
<p><img src="OEBPS/assets/at_examples.jpg"
class="alignnone size-full wp-image-47" width="400" height="304"
alt="example of assistive technologies" /></p>
<p><strong>Figure: Examples of assistive technology<br />
</strong> <a href="http://intro2at-fall13.wikispaces.com" target=""
rel="noopener noreferrer">Source: Intro2AT</a></p>
<h2>Why Learn About Assistive Technologies?</h2>
<p>While web accessibility guidelines are written to be technology
neutral, and intended to remove the need for testing with specific AT,
there are times when manual testing with AT may be necessary. Screen
readers are most commonly used for manual AT testing. You were
introduced to the ChromeVox screen reader in the section <a
href="#chapter-015-chromevox-screen-reader.xhtml"
class="toc__chapter-title">ChromeVox Screen Reader</a>. We will
introduce you to some other common screen readers and discuss their
strengths and limitations. We will also examine their compatibility
across web browsers, operating systems, devices, and with various web
accessibility technologies.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-048-objectives-and-activities-6.xhtml"></span></p>
<article>
<div
id="chapter-048-objectives-and-activities-6.xhtml_objectives-and-activities-6"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Objectives and Activities</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2>Objectives</h2>
<h2><span class="nosee"> <img
src="OEBPS/assets/checklist-e1516288820283-1.png"
class="size-full wp-image-74 alignright" width="100" height="101" />
</span></h2>
<p>By the end of this unit, you will be able to:</p>
<ul>
<li>Use basic features of desktop screen readers such as JAWS and
NVDA.</li>
<li>Use basic features of mobile screen readers such as VoiceOver and
Talkback.</li>
<li>Identify assistive technologies other than screen readers that might
be used in web accessibility testing.</li>
</ul>
<h2>Activities</h2>
<ul>
<li>Practice using ChromeVox screen reader for day-to-day screen reader
testing</li>
<li>Experience web navigation with a screen reader as your primary means
of accessing content</li>
<li>Self-Test 5</li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-049-screen-reader-testing-2.xhtml"></span></p>
<article>
<div
id="chapter-049-screen-reader-testing-2.xhtml_screen-reader-testing-2"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Screen Reader Testing</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>In this course, we focus specifically on the ChromeVox screen reader
add-on for the Chrome web browser because of its simplicity, support for
standards, and its availability across platforms and being free, open
source software. We will also introduce you to a number of other screen
readers and provide a summary of the main keyboard commands you might
use during screen reader testing.</p>
<p>For new or inexperienced users, learning to operate a screen reader
can be difficult, particularly if you are not using one on a regular
basis. Memorizing the basic commands provided in the upcoming pages is
often enough for screen reader testing purposes, though there is much
more functionality in screen readers that is not discussed here. You are
encouraged to explore the full range of features screen readers have to
offer as time allows.</p>
<p>ChromeVox is ideal for developers and auditors, though it does have
its limitations, and it is a good idea to do final screen reader testing
with one of the more broadly used screen readers like JAWS, Window Eyes,
NVDA, or VoiceOver, and across multiple browsers and devices. What may
seem accessible with one combination of browser and screen reader, may
not necessarily have the same accessibility across other
combinations.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-050-summary-of-available-screen-readers.xhtml"></span></p>
<article>
<div
id="chapter-050-summary-of-available-screen-readers.xhtml_summary-of-available-screen-readers"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Summary of Available Screen Readers</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>There are a variety of screen readers available for different
operating systems, whether you are using Windows, Mac, Linux, iOS, or
Android, and there are a few web-based screen readers. The more common
screen readers are listed below for reference.</p>
<p>Screen readers should not be confused with Text-to-Speech (TTS)
applications. Though both read text content aloud, TTS only reads
content text, such as the text on this page, and not the menus or
interface of the browser or reader application displaying the page.
Screen readers also read content text, but they also read aloud elements
of the browser’s interface and elements of the operating system, as well
as provide ways to navigate the content, with features for listing
headings, links, or tables, for example. These features are not
typically found in TTS applications.</p>
<h2>Windows (Commercial)</h2>
<ul>
<li><a href="http://www.freedomscientific.com/Products/Blindness/JAWS"
target="_blank" rel="noopener noreferrer">JAWS (Freedom
Scientific)</a></li>
<li><a href="http://www.gwmicro.com/Window-Eyes" target="_blank"
rel="noopener noreferrer">Window Eyes (GW Micro) – discontinued</a></li>
<li><a href="http://www.yourdolphin.com/productdetail.asp?id=5"
target="_blank" rel="noopener noreferrer">Dolphin (Dolphin)</a></li>
<li><a href="http://www.aisquared.com/products/zoomtext" target="_blank"
rel="noopener noreferrer">ZoomText (Ai Squared)</a></li>
</ul>
<h2>Windows (Free Open Source)</h2>
<ul>
<li><a href="http://www.nvaccess.org" target="_blank"
rel="noopener noreferrer">NVDA (NV Access)</a></li>
</ul>
<h2>Mac</h2>
<ul>
<li><a href="http://www.apple.com/ca/accessibility/osx/voiceover"
target="_blank" rel="noopener noreferrer">VoiceOver (built into
Macs)</a></li>
</ul>
<h2>Linux (Free Open Source)</h2>
<ul>
<li><a href="https://help.gnome.org/users/orca/stable" target="_blank"
rel="noopener noreferrer">Orca (GNOME)</a></li>
<li><a href="http://www.linux-speakup.org">Speakup (Speakup)</a></li>
</ul>
<h2>iOS</h2>
<ul>
<li><a href="http://www.apple.com/ca/accessibility/ios/voiceover"
target="_blank" rel="noopener noreferrer">VoiceOver (built into iOS
devices)</a></li>
</ul>
<h2>Android (Free Open Source)</h2>
<ul>
<li><a
href="https://play.google.com/store/apps/details?id=com.google.android.marvin.talkback&amp;hl=en"
target="_blank" rel="noopener noreferrer">Talkback (built into Android
devices)</a></li>
</ul>
<h2>Browser-Based (Free Open Source)</h2>
<ul>
<li><a href="http://www.chromevox.com" target="_blank"
rel="noopener noreferrer">ChromeVox (Google, requires the Chrome
browser)</a></li>
</ul>
<p>For a more thorough list of screen readers, see <a
href="https://en.wikipedia.org/wiki/List_of_screen_readers" target=""
rel="noopener noreferrer">Wikipedia’s Screen Reader entry</a>.</p>
<p><strong>Important to Note:</strong> Many of the listings at this
Wikipedia link are not actually screen readers, but rather
Text-to-Speech (TTS) programs. The two should not be confused. TTS
programs generally only read text selected from content, while screen
readers tend to read all elements of the operating system they run on,
or all elements in web content.</p>
<h2>Screen Reader Usage Trends</h2>
<p>It is rarely possible to test with every screen reader available, so
it is a good idea to choose the screen readers you use strategically.
Understanding screen reader usage patterns can help you decide which
one(s) to test with.</p>
<p>WebAIM has been conducting screen reader user surveys since 2009,
with the latest results from October 2019 (as of this writing). The <a
href="https://webaim.org/projects/screenreadersurvey8" target="_blank"
rel="noopener noreferrer">2019 WebAIM Screen Reader User Survey</a>
notes that 72.5% of respondents used more than one desktop/laptop screen
reader on a regular basis, with NVDA (72.4%), JAWS (61.7%), and
VoiceOver (47.1%) in the lead. This was the first year NVDA usage
exceeded JAWS usage. With built-in screen readers like VoiceOver on Mac,
and free open source screen readers like NVDA – both much improved in
recent years – many users are opting for these less expensive options.
JAWS, though highly functional, is expensive software and can be out of
reach for some who need screen reader technology.</p>
<p>Microsoft’s Narrator first made an appearance in the 2017 survey with
21.4% respondents reporting using it commonly on a desktop/laptop. In
2019, Microsoft Narrator usage increased to 30.3%. In 2015 its usage was
so low that it wasn’t even mentioned by name, but because of significant
improvements in Windows 10 it has been gaining users.</p>
<p>The <a href="https://webaim.org/projects/screenreadersurvey6/#used"
target="_blank" rel="noopener noreferrer">previous 2015 survey</a>
reflected a significant dip in JAWS and NVDA usage in favour of
Window-Eyes and ZoomText that isn’t repeated in the 2017 or 2019
results. <a
href="https://webaim.org/projects/screenreadersurvey7/#primary">The 2017
survey</a> attributes the difference to the respondents’
demographics: “What happened in 2015? Essentially, the survey was
distributed to a much broader audience, with many ZoomText and
Window-Eyes users recruited to respond. Window-Eyes was also offered
freely with Microsoft Office before the 2015 survey, but has since been
discontinued.”</p>
<p><img src="OEBPS/assets/screenreader_usage_2019.png"
class="size-full wp-image-2394 aligncenter" width="826"
height="492" /></p>
<p><strong>Figure: Usage patterns of commonly used screen readers<br />
</strong> <a href="https://webaim.org/projects/screenreadersurvey8"
target="_blank" rel="noopener noreferrer">Source: WebAIM Screen Reader
User Survey #8</a></p>
<p><a
href="https://webaim.org/projects/screenreadersurvey7/#mobilescreenreaders"
target="_blank" rel="noopener noreferrer">Mobile screen reader usage</a>
has increased exponentially over the years, from just 12% in 2009 to 88%
in 2017 (statistic not available in 2019). VoiceOver is a clear market
leader on mobile platforms (commonly used by 69% of respondents in 2017,
up to 71.2% in 2019), followed by TalkBack for Android (29.5% in 2017,
up to 33% in 2019). Keep this in mind when screen reader testing.
Testing with mobile screen readers should be considered.</p>
<p>The following table from WebAIM shows changes in screen readers
commonly used for desktop and laptop computers between 2009 and
2019.</p>
<table class="addborder"
style="width: 95.6631%;text-align: left;margin-top: auto;margin-bottom: auto;height: 150px">
<caption>Which of the following desktop/laptop screen readers do you
commonly use?</caption>
<tbody>
<tr class="header" style="height: 15px">
<th style="height: 15px; width: 55.2961%">Screen Reader</th>
<th style="height: 15px; width: 9.50796%">2009</th>
<th style="height: 15px; width: 10.2586%">2015</th>
<th style="height: 15px; width: 11.5096%">2017</th>
<th style="width: 9.00755%">2019</th>
</tr>

<tr class="odd" style="height: 15px">
<td style="height: 15px; width: 55.2961%">JAWS</td>
<td style="height: 15px; width: 9.50796%">75.2%</td>
<td style="height: 15px; width: 10.2586%">43.7%</td>
<td style="height: 15px; width: 11.5096%">66.0%</td>
<td style="width: 9.00755%">61.7%</td>
</tr>
<tr class="even" style="height: 15px">
<td style="height: 15px; width: 55.2961%">NVDA</td>
<td style="height: 15px; width: 9.50796%">25.6%</td>
<td style="height: 15px; width: 10.2586%">41.4%</td>
<td style="height: 15px; width: 11.5096%">64.9%</td>
<td style="width: 9.00755%">72.4%</td>
</tr>
<tr class="odd" style="height: 15px">
<td style="height: 15px; width: 55.2961%">VoiceOver</td>
<td style="height: 15px; width: 9.50796%">14.6%</td>
<td style="height: 15px; width: 10.2586%">30.9%</td>
<td style="height: 15px; width: 11.5096%">39.6%</td>
<td style="width: 9.00755%">47.1</td>
</tr>
<tr class="even" style="height: 15px">
<td style="height: 15px; width: 55.2961%">Window-Eyes</td>
<td style="height: 15px; width: 9.50796%">23.5%</td>
<td style="height: 15px; width: 10.2586%">29.6%</td>
<td style="height: 15px; width: 11.5096%">4.7%</td>
<td style="width: 9.00755%">1.2%</td>
</tr>
<tr class="odd" style="height: 15px">
<td style="height: 15px; width: 55.2961%">ZoomText</td>
<td style="height: 15px; width: 9.50796%">7.5%</td>
<td style="height: 15px; width: 10.2586%">27.5%</td>
<td style="height: 15px; width: 11.5096%">6.0%</td>
<td style="width: 9.00755%">5.5%</td>
</tr>
<tr class="even" style="height: 15px">
<td style="height: 15px; width: 55.2961%">System Access or System Access
To Go</td>
<td style="height: 15px; width: 9.50796%">22.3%</td>
<td style="height: 15px; width: 10.2586%">6.9%</td>
<td style="height: 15px; width: 11.5096%">4.0%</td>
<td style="width: 9.00755%">3.5%</td>
</tr>
<tr class="odd" style="height: 15px">
<td style="height: 15px; width: 55.2961%">ChromeVox</td>
<td style="height: 15px; width: 9.50796%">n/a</td>
<td style="height: 15px; width: 10.2586%">2.8%</td>
<td style="height: 15px; width: 11.5096%">5.1%</td>
<td style="width: 9.00755%">4.7%</td>
</tr>
<tr class="even" style="height: 15px">
<td style="height: 15px; width: 55.2961%">Narrator</td>
<td style="height: 15px; width: 9.50796%">n/a</td>
<td style="height: 15px; width: 10.2586%">n/a</td>
<td style="height: 15px; width: 11.5096%">21.4%</td>
<td style="width: 9.00755%">30.3%</td>
</tr>
<tr class="odd" style="height: 15px">
<td style="height: 15px; width: 55.2961%">Other</td>
<td style="height: 15px; width: 9.50796%">7.7%</td>
<td style="height: 15px; width: 10.2586%">6.5%</td>
<td style="height: 15px; width: 11.5096%">6.4%</td>
<td style="width: 9.00755%">6.0%</td>
</tr>
</tbody>
</table>
<h2>Other Screen Readers to Consider</h2>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<strong>Readings and References:</strong> Here is a list of <a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/OtherScreenReaderstoconsider.pdf"
target="_blank" rel="noopener noreferrer">Other Screen Readers to
Consider [PDF]</a> when screen reader testing.
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-051-other-assistive-technologies.xhtml"></span></p>
<article>
<div
id="chapter-051-other-assistive-technologies.xhtml_other-assistive-technologies"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Other Assistive Technologies</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>While screen readers are the most common assistive technology used in
web accessibility testing, there are others that merit consideration
when performing web accessibility audits. Fortunately, when AT testing
is required, the issues that are identified while testing with a screen
reader are often similar to issues that may arise with other AT.</p>
<p>Listed below are some of the more common assistive technologies that
may be included in accessibility testing, perhaps as part of
<strong>user testing, covered in the unit <a
href="#chapter-054-user-testing-2.xhtml" class="toc__chapter-title">User
Testing</a>,</strong> to gather additional usability feedback across a
range of diverse users.</p>
<h2>Magnification</h2>
<p>Screen magnification software is often used by people with low vision
to make text and images larger and more visible. Some screen magnifiers,
such as ZoomText, function much like a screen reader, with audio output
in addition to magnifying the content. Issues that create barriers for
those using screen readers often also arise with screen
magnification.</p>
<p>For a sampling of different brands and types of magnifiers, you may
wish to review the videos below.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=fhLV6ydGqWg"
target="_blank" rel="noopener noreferrer">Introducing ZoomText
11</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-18.jpg" title="Introducing ZoomText 11"
alt="Thumbnail for the embedded element &quot;Introducing ZoomText 11&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1381#pb-interactive-content"
title="Introducing ZoomText 11">https://pressbooks.library.ryerson.ca/pwaa/?p=1381</a></p>
</div>
<p><span class="small">© aisquared. Released under the terms of a
Standard YouTube License. All rights reserved.</span></p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=GlFRwfDhwGE"
target="_blank" rel="noopener noreferrer">Windows 7
Magnifier</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-19.jpg" title="Windows 7 Magnifier"
alt="Thumbnail for the embedded element &quot;Windows 7 Magnifier&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1381#pb-interactive-content"
title="Windows 7 Magnifier">https://pressbooks.library.ryerson.ca/pwaa/?p=1381</a></p>
</div>
<p><span class="small">© Better Living Through Technology. Released
under the terms of a Standard YouTube License. All rights
reserved.</span></p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=veYJ7E_VKtE"
target="_blank" rel="noopener noreferrer">Mac OS X Accessibility –
Magnifier</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-20.jpg"
title="Mac OS X Accessibility - Magnifier"
alt="Thumbnail for the embedded element &quot;Mac OS X Accessibility - Magnifier&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1381#pb-interactive-content"
title="Mac OS X Accessibility - Magnifier">https://pressbooks.library.ryerson.ca/pwaa/?p=1381</a></p>
</div>
<p><span class="small">© Todd Boniface. Released under the terms of a
Standard YouTube License. All rights reserved.</span></p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0be">
<p><strong>Technical: </strong>Operating systems such as Mac, Windows,
as well as iOS and Android, have screen magnification programs built
into them. While they don’t have all the capabilities of a full-fledged
screen magnifier such as ZoomText, they are often sufficient to meet the
needs of low vision users. In terms of potential accessibility issues,
there are relatively few because these tools magnify the screen, as
opposed to the content itself, so the content magnifies regardless of
whether it was created in a way that would allow it to be resized. What
may be problematic for magnifier users are low grade images,
particularly those containing text, which tend to degrade when
magnification is applied.</p>
<p>Another type of magnification is built into web browsers. Until
recently, browser magnification would increase the size of text only,
leaving images and other elements of the content at their original size.
Now however, most browser magnification works like the screen magnifiers
mentioned above, magnifying the entire browser window as opposed to the
content within the window. As a result text and images, and other
content elements, magnify at the same rate. At least for the short term,
until all older browsers are replaced by newer ones that magnify the
window instead of just the text, some users will still have trouble with
magnification.</p>
<p>When testing content magnification with a browser, test with just the
text magnified. In Firefox for instance, in the ViewZoom menu there is
an option to Zoom the text only. If when testing in this mode the text
does not increase in size, or the text size increases but other elements
on the page do not, this may be an indication that elements have been
sized with absolute measures using pixel (px) or point (pt) measures,
rather than using relative measures such as percent (%) or “em”
measures. The latter relative measures applied to content elements will
resize these elements at the same rate as the text when using browser
text magnification, while those sized with absolute measures typically
will remain the same size.</p>
</div>
<h2>Voice Recognition</h2>
<p>Voice recognition is being built into a range of systems and is not
only for those who require it as an assistive technology. Take Siri, for
instance, on iOS devices. Windows has built-in speech recognition and
even Google allows you to simply speak your search terms. So, creating
content that will be accessible by voice means that all operable
elements in web content should include text that is readable by AT.</p>
<p>A range of users who are perhaps unable to use a mouse or keyboard
can use voice recognition software instead to operate their computers.
Within web content it is also possible to speak commands. To activate a
link or a button, one would speak the text of these elements to bring
focus to and activate the element. Barriers occur when these elements do
not contain readable text, such as an image used as a button without alt
text, or a navigation element created with images, again without alt
text.</p>
<p>One of the more popular voice recognition applications is Dragon
NaturallySpeaking. It can be used to navigate through web content or to
control a computer’s operating system. The following NaturallySpeaking
Demo will give you a brief look at how voice recognition works.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=r9IayI6zBIg"
target="_blank" rel="noopener noreferrer">Web Accessibility 101 Dragon
NaturallySpeaking Demo</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-21.jpg"
title="Web Accessibility 101 Dragon NaturallySpeaking Demo"
alt="Thumbnail for the embedded element &quot;Web Accessibility 101 Dragon NaturallySpeaking Demo&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1381#pb-interactive-content"
title="Web Accessibility 101 Dragon NaturallySpeaking Demo">https://pressbooks.library.ryerson.ca/pwaa/?p=1381</a></p>
</div>
<p><span class="small">© Ilana Benish. Released under the terms of a
Standard YouTube License. All rights reserved.</span></p>
<h2>Alternative Input</h2>
<p>By alternative input we mean devices or software other than a mouse
and keyboard, which allow users to control their computer and navigate
the Web. You have already been introduced to voice recognition, which
takes one’s voice as input.</p>
<p>There are many devices that can take the place of a mouse and a
keyboard; voice recognition, onscreen keyboards, a head mouse, and
various types of switches. The following video will give you an idea of
how these technologies are used. The person in the video has no use of
his arms and legs and uses his computer to perform complex tasks with
the help of an onscreen keyboard, a sip and puff switch, and a head
mouse.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=x31u1seLTo0"
target="_blank" rel="noopener noreferrer">Head-Designed</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-22.jpg" title="Head-designed"
alt="Thumbnail for the embedded element &quot;Head-designed&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1381#pb-interactive-content"
title="Head-designed">https://pressbooks.library.ryerson.ca/pwaa/?p=1381</a></p>
</div>
<p><span class="small">© AssistiveWare. Released under the terms of a
Standard YouTube License. All rights reserved.</span></p>
<p>In terms of identifying accessibility issues that affect those using
alternative input, there are relatively few when compared to barriers
that might be faced by screen reader users. A few to watch for
include:</p>
<ul>
<li>Small target areas that might be difficult to position a mouse
pointer over. Targeting a radio button for instance, can be made easier
if a proper label is used, making the label itself clickable to activate
the button.</li>
<li>Well designed error feedback can also improve usability by reducing
the effort needed to recover when an error occurs. For example, if an
email address is entered incorrectly, identify this error before the
form submits, and send the cursor to the email field so it can be
corrected after the error message is acknowledged.</li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-052-activity-chromevox.xhtml"></span></p>
<article>
<div id="chapter-052-activity-chromevox.xhtml_activity-chromevox"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Activity: Using ChromeVox to Find
Accessibility Features</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2><span class="nosee"> <img src="OEBPS/assets/activity-2.png"
class="size-full wp-image-161 alignright" width="125" height="131" />
</span></h2>
<p><span style="font-weight: 400"><strong>NOTE:</strong> If you are a
regular day-to-day screen reader user (i.e., you are blind or have
significant vision loss) use your own screen reader for this activity
instead of ChromeVox.</span></p>
<p><span style="font-weight: 400">Ideally, accessibility features will
be invisible to typical users so they do not interfere with their user
experience. In addition to using a screen reader to identify
accessibility problems, it is an important tool for identifying features
that add to the accessibility of a website, so when reporting you are
not identifying potential barriers that may have hidden
alternatives.</span></p>
<p><span style="font-weight: 400">In this activity practice using
ChromeVox to identify hidden accessibility features in a website. Refer
back to <strong>ChromeVox Screen Reader</strong> in the section </span>
<a href="#chapter-015-chromevox-screen-reader.xhtml"
class="toc__chapter-title">ChromeVox Screen Reader</a> <span
style="font-weight: 400">, and have the keyboard commands list beside
you when completing this activity.</span></p>
<ol>
<li><span style="font-weight: 400">Open the <a
href="https://de.ryerson.ca/wa/showcase" target="_blank"
rel="noopener noreferrer">Showcase Demo Site</a> in Chrome, and turn on
ChromeVox.<br />
</span></li>
<li><span style="font-weight: 400">Leave your monitor turned on so you
can see what you are doing.</span></li>
<li><span style="font-weight: 400">Put your mouse away, and use only
your keyboard to navigate through the site.</span></li>
<li><span style="font-weight: 400">Create a list of all the hidden
accessibility features on the site. You may also list the visible
accessibility features if there are any. </span></li>
<li><span style="font-weight: 400">In addition to listing the
accessibility features, if relevant, describe what the screen reader
announces when it encounters the accessibility features in your
list.<br />
</span></li>
</ol>
<p><strong>Hint:</strong> Some of the features to listen for are
WAI-ARIA enabled elements. You may need to examine the HTML source to
determine what they are, or use the Chrome Inspect tool to see how
WAI-ARIA is being used.</p>
<div>

</div>
<div style="text-align: right">
<a href="#back-matter-003-answers.xhtml#answer-activity-5">Suggested
answers to Activity</a>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-053-self-test-5.xhtml"></span></p>
<article>
<div id="chapter-053-self-test-5.xhtml_self-test-5"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Self-Test 5</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div class="print">
<section class="bcc-box bcc-info">
<h4><strong>Question 1</strong></h4>
<p><strong>According to the data from the WebAIM Screen Reader Survey,
when it comes to screen readers commonly used, which of the following
screen readers experiences the least usage?</strong></p>
<ol type="a">
<li>JAWS</li>
<li>NVDA</li>
<li>ChromeVox</li>
<li>VoiceOver</li>
<li>Window-Eyes</li>
<li>Talkback</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 2</strong></h4>
<p><strong>Based on your Chapter 5 readings, which screen reader makes
use of a rotor for accessing different features of Web content, such as
headings, lists, tables and links?</strong></p>
<ol type="a">
<li>JAWS</li>
<li>NVDA</li>
<li>ChromeVox</li>
<li>VoiceOver</li>
<li>Window-Eyes</li>
<li>Talkback</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 3</strong></h4>
<p><strong>Which of the screen readers introduced in this Unit are open
source software? Choose all that apply.</strong></p>
<ol type="a">
<li>JAWS</li>
<li>NVDA</li>
<li>ChromeVox</li>
<li>VoiceOver</li>
<li>Window-Eyes</li>
<li>Talkback</li>
</ol>
</section>
<p><a href="#back-matter-003-answers.xhtml#answers-self-5">Answers to
Self-Test 5</a></p>
</div>
<p> </p>
<div class="textbox interactive-content">
<span class="interactive-content__icon"></span>
<p>An interactive or media element has been excluded from this version
of the text. You can view it online here:<br />
<a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1393#pb-interactive-content"
title="Self-Test: Unit 5">https://pressbooks.library.ryerson.ca/pwaa/?p=1393</a></p>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="part-007-user-testing.xhtml"></span></p>
<article>
<div id="part-007-user-testing.xhtml_user-testing" class="part">
<div class="part-title-wrap">
<h3 class="part-number"></h3>
<h1 class="part-title">6. User Testing</h1>
</div>
</div>
</article>
<p><span id="chapter-054-user-testing-2.xhtml"></span></p>
<article>
<div id="chapter-054-user-testing-2.xhtml_user-testing-2"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">User Testing</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>While user testing is not a necessary element of a web accessibility
audit, it can still be of value. This is because user testing can
provide useful information about the usability of web content that an
expert accessibility auditor may not discover through a technical
audit.</p>
<p>Going back to the <strong>“Curb Cut”</strong> discussion introduced
in the section <a href="#chapter-005-lulus-story-begins.xhtml"
class="toc__chapter-title">Why Learn about Web Accessibility
Auditing?</a>, user testing with people with disabilities is a good way
to identify usability issues in general, that affect all users. Issues
are typically “amplified” for people with disabilities, making them
easier to identify than might be the case with other users who may work
around usability issues.</p>
<p>There are a variety of ways to approach user testing, ranging from
having colleagues with disabilities provide feedback on web content to
highly controlled scientific studies that recruit randomly sampled
control and experimental groups, exposing them to content that is and is
not accessible to study the difference in their behaviour.</p>
<p>While we will not address testing at the level of scientific studies,
this unit will look at the benefits and challenges associated with user
testing, and provide some guidelines to help you design user testing
scenarios that provide useful feedback on accessible designs without
incurring extensive additional costs.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-055-objectives-and-activities-7.xhtml"></span></p>
<article>
<div
id="chapter-055-objectives-and-activities-7.xhtml_objectives-and-activities-7"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Objectives and Activities</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2>Objectives</h2>
<h2><span class="nosee"> <img
src="OEBPS/assets/checklist-e1516288820283-1.png"
class="size-full wp-image-74 alignright" width="100" height="101" />
</span></h2>
<p>By the end of this unit, you will be able to:</p>
<ul>
<li>Identify instances where user testing is needed.</li>
<li>Recruit and screen user testers.</li>
<li>Develop a test protocol, including observation and recording.</li>
</ul>
<h2>Activities</h2>
<ul>
<li>Identify possible agencies in your area that might assist with user
testing</li>
<li>Develop a possible test protocol for users of Lulu’s Lollipops
website</li>
<li>Self-Test 6</li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-056-involving-user-testers.xhtml"></span></p>
<article>
<div
id="chapter-056-involving-user-testers.xhtml_involving-user-testers"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Involving User Testers</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>User testing in web accessibility auditing projects is a good idea,
though who to include and when needs some thoughtful consideration. You
should not attempt to generalize results when only a small number of
users are involved. Testing with users will help identify issues for a
particular user, or groups of users with similar disabilities, but may
not be relevant to people with other types of disabilities, those with
the same disabilities who use different assistive technologies (AT), or
those with different levels of expertise with the Web and their AT.
Nonetheless, involving just a few experienced AT users can provide
valuable input for your audit.</p>
<h2>When to Involve Users</h2>
<p>If you plan to involve user testers in the auditing process, they
should be included <strong>after the auditing against all relevant
standards</strong> has been done, and <strong>the resulting
recommendations have been implemented</strong>. At that point the
accessibility of the site should be relatively good, so the focus can be
aimed at improving usability.</p>
<p>In some cases, if web accessibility auditing involves incremental
testing during the development of a new website or a web application, it
is useful to include user testers from the start of the development
process. This can help avoid costly issues later on in the development
by identifying accessibility and usability problems early on in the
design phase of a development project.</p>
<h2>How to Select the Types of Users to Recruit</h2>
<p>In most cases user testers should have average to expert web and AT
knowledge to produce the best feedback. This helps reduce issues that
arise due to not knowing how to use AT effectively. Later in this unit
we’ll look at screening user testers. There are cases however, when you
may want to include novice AT users, if for instance you are working
with a site that caters to specific disability groups. Sites such as
these are often visited by novice users, thus should be functional with
just basic web and AT experience.</p>
<p>When choosing user testers, it is helpful to select a group based on
the assistive technology they are using. Choose screen reader users,
magnifier users, alternative input users, text to speech users, voice
recognition users, and so on, rather than choosing based on disability.
You might also choose people who do not use assistive technologies. For
example, some people may use browser-based adaptations to access web
content, and older users can provide useful information about common
age-related visual, auditory, physical, and cognitive changes that
affect their ability to access the Web.</p>
<h2>A Note on Working with People with Disabilities</h2>
<p>It is not uncommon for people who have not previously worked with
people with disabilities to feel a little unsure of themselves,
sometimes uncertain how to interact, or worried about saying the wrong
thing. The best approach, not surprisingly, is simply to interact as you
would with anyone:</p>
<ul>
<li>Introduce yourself</li>
<li>Speak normally</li>
<li>Ask before attempting to help</li>
<li>Ask before touching a guide animal</li>
<li>Don’t be afraid of using non-disabled words (e.g. “…as you’ll see”
to a blind person)</li>
<li>Talk to the person, not their companion or helper</li>
<li>Use people first language (e.g., person who is blind, rather than a
blind person)</li>
<li>Avoid offensive language (use “person who is blind” or “…with a
visual impairment”)</li>
<li>Be aware of personal space</li>
</ul>
<p>For more about interacting with people with disabilities see the
following resources:</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<p><strong>Readings and References: </strong> <a
href="http://uiaccess.com/accessucd/interact.html" target="_blank"
rel="noopener noreferrer">Interacting with People with
Disabilities</a></p>
</div>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=Gv1aDEFlXq8"
target="_blank" rel="noopener noreferrer">Disability Sensitivity
Training Video</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-23.jpg"
title="Disability Sensitivity Training Video"
alt="Thumbnail for the embedded element &quot;Disability Sensitivity Training Video&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1402#pb-interactive-content"
title="Disability Sensitivity Training Video">https://pressbooks.library.ryerson.ca/pwaa/?p=1402</a></p>
</div>
<p><span class="small">© dcgovernment. Released under the terms of a
Standard YouTube License. All rights reserved.</span></p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=aj1aIuPVuz0"
target="_blank" rel="noopener noreferrer">Stupid Questions Not to Ask a
Disabled Person</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-24.jpg"
title="Stupid questions not to ask a disabled person - Defying the Label Season - BBC Three"
alt="Thumbnail for the embedded element &quot;Stupid questions not to ask a disabled person - Defying the Label Season - BBC Three&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1402#pb-interactive-content"
title="Stupid questions not to ask a disabled person - Defying the Label Season - BBC Three">https://pressbooks.library.ryerson.ca/pwaa/?p=1402</a></p>
</div>
<p><span class="small">© BBC Three. Released under the terms of a
Standard YouTube License. All rights reserved.</span></p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-057-recruiting-user-testers.xhtml"></span></p>
<article>
<div
id="chapter-057-recruiting-user-testers.xhtml_recruiting-user-testers"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Recruiting User Testers</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>It’s relatively easy to find user testers through social media
groups, disability and accessibility mailing lists, university
accessibility services, or organizations that serve people with
disabilities. People with disabilities tend to be receptive to testing
when you are improving accessibility, and are often willing to refer you
to other potential testers.</p>
<div
style="margin: 1em 0;padding: 1em;background-color: #fff5cc;border: 1px solid #ddd">
<p><span class="nosee"> <img
src="OEBPS/assets/striped_lollipop_morgaine1976-300px-150x150-1-e1521733755321.png"
class="size-full wp-image-75 alignleft" width="50" height="50" />
</span></p>
<p>After all the work that she and her team have done, Lulu realizes
that one potential source of referrals for user testers may in fact be
the organization who approached Lulu’s Lollipops to inquire about their
accessibility in the first place!</p>
</div>
<h2>Initial Screening</h2>
<p>It is important that user testers be screened for particular
characteristics, including good understanding of web technologies, as
well as proficiency using their respective AT. This is necessary, in
most cases, to ensure that issues that testers’ experience during
testing are attributable to problems with the web content or application
being tested, and not the result of inexperience with the Web or limited
expertise with the AT being used.</p>
<p>There are a number of questions that you can ask that will help gauge
a user tester’s level of knowledge.</p>
<p>The two main categories of questions to cover in screening user
testers are:</p>
<ul>
<li>Web Knowledge</li>
<li>Assistive Technology Expertise</li>
</ul>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<p><strong>Toolkit:</strong> Download the <a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/UserScreeningQuestions.docx"
target="_blank" rel="noopener noreferrer">User Tester Screening
Questions [docx]</a><span style="text-decoration: underline"></span> and
add it to your Toolkit. Note that the template includes instructional
commentary that you should remove if you distribute the questions to
potential users. Though these questions can be a good indicator of a
tester’s level of understanding, keep in mind that users may exaggerate
their experience or not be aware of their level of understanding.
Additional questions or observation may be needed once the user is in
front of a computer using their assistive technology.</p>
</div>
<p>For another approach to screening users for accessibility testing,
visit the following resource: <a
href="http://www.uiaccess.com/accessucd/ut_ppt-screen.html"
target="_blank" rel="noopener noreferrer">Recruiting Screener</a>.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-058-developing-a-test-protocol.xhtml"></span></p>
<article>
<div
id="chapter-058-developing-a-test-protocol.xhtml_developing-a-test-protocol"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Developing a Test Protocol</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div
style="margin: 1em 0;padding: 1em;background-color: #fff5cc;border: 1px solid #ddd">
<p><span class="nosee"><img
src="OEBPS/assets/striped_lollipop_morgaine1976-300px-150x150-1-e1521733755321.png"
class="size-full wp-image-75 alignleft" width="50" height="50" /></span>
Thanks to some helpful referrals from her client, Lulu has reached out
and contacted a number of people to assist with user testing. Now she is
ready to plan her testing. To conduct your user testing, in most cases
you will want to develop a “test protocol” that details the activities
and the steps taken to test a particular set of features. Most testing
sessions with users should not exceed one hour, so a test protocol
should provide a number of relatively short scenarios that can be
completed in 5-10 minutes, allowing time between each scenario for a few
questions to probe the user’s experience.</p>
</div>
<h2>Talk Aloud Protocol</h2>
<p>One of the best ways to gather information about a user’s experience
using your web content is to have them talk aloud as they complete
tasks. Record verbal responses as well as any emotional responses or
facial expression in a log. You can also ask simple questions like “what
were you thinking when…?” to determine their thoughts. It may be
preferable to video or audio record sessions and analyze them afterwards
so you as the observer can focus your attention on guiding and probing
the tester’s thoughts.</p>
<p><strong>Note:</strong> If you plan to video or audio record testing
sessions, always be sure to inform user testers of this fact.</p>
<h2>Test Protocol Example – The Lake Devo Website</h2>
<p>As an example of a potential user testing protocol, we will look at
the plans put together to user test <a href="http://lakedevo.ryerson.ca"
target="_blank" rel="noopener noreferrer">Lake Devo</a>, a web-based
role playing game used by students at Ryerson University to design and
play out various scenarios related to their subject of study. The Lake
Devo website has recently undergone extensive improvements for
accessibility.</p>
<h3>The User Testers</h3>
<p>A couple of screen reader users who had not used Lake Devo previously
were recruited to complete a series of tasks that would test the
accessibility and usability of key features in the software. Both were
skilled JAWS users and knowledgeable about web technology. They were
both also students in online courses at the university.</p>
<p>The testers were told they would receive compensation in the form of
a $100 CAD prepaid credit card. Regardless of whether the testers
completed all the scenarios, they received their compensation.</p>
<h3>Pre-Test Tasks</h3>
<p>Before starting the testing session, the Observer (in this case the
web developer) provided a description of Lake Devo, its purpose, its
main features, and an overview of how it might be used to develop a role
playing movie. Each user tester was informed at the start of the session
that if at anytime they needed a break, felt uncomfortable or wished to
discontinue testing, they were free to do so.</p>
<p>Then the Observer introduced the scenarios the tester would be asked
to complete and how the session would unfold. For each of the scenarios,
the Observer essentially “trained” the user testers by doing the
following:</p>
<ul>
<li>Reading out the scenario in full</li>
<li>Walking through the scenario him/herself describing aloud the steps
taken to complete the task</li>
<li>Modelling the talk aloud protocol</li>
</ul>
<h2>Lake Devo Test Scenarios</h2>
<p><strong>Scenario 1:</strong> Watch the web accessibility movie and
answer a skill-testing question</p>
<p>[no login required] low effort</p>
<ol>
<li>Find the Gallery link in the Lake Devo main navigation and open the
Gallery.</li>
<li>On the Gallery screen enter the words “<a
href="http://lakedevo.ryerson.ca/Movie.aspx?pi=0&amp;s=accessibility&amp;mid=5b51534f-cf6a-4393-9ac4-039a794cd3cd">Lake
Devo Accessibility</a>” into the search field and submit the
search.</li>
<li>In the search results choose the “Lake Devo Accessibility” movie and
click or keypress to open the movie.</li>
<li>On the movie player screen that opens, find the play button and
explore the other options available in the player toolbar.</li>
<li>Return to the play button and click or keypress the button to start
the movie.</li>
<li>Listen to the movie as it plays, and pay attention so you can answer
the question about the movie that will follow.</li>
<li>Answer the question the Observer asks you.</li>
</ol>
<p><strong>Scenario 2:</strong> Create a new character</p>
<p>[login required] medium effort</p>
<ol>
<li>Log in to Lake Devo with the account created for you, using the
login link at the top right of the screen, then fill in the login form,
and press the Login button.</li>
<li>In the MyStudio screen that opens, find the Access Team community
and click or keypress to open the list of movies created by community
members (of which you are one).</li>
<li>In that list of movies, find the Learning About Accessibility movie,
and click or keypress that movie to open it in the script editor.</li>
<li>Find the Movie Settings button in the Script Editor, and press it to
open the Movie Setting tabpanel, consisting of Movie Info, Character,
and Scenes tabs.</li>
<li>Click or keypress the Characters tab to open the list of current
characters in the movie.</li>
<li>In the Create New Character area, open the character editor.</li>
<li>Observer describes the character editor: The character editor
consists of two main panels, with the preview of the character on the
left, and a series of tab panels on the right from which to choose
characteristics for the character. These include: info, face, nose,
hair, shirt, outerwear, and accessories.</li>
<li>To begin creating your character, fill in the name, description,
choose male or female, adult or child, and if desired check the checkbox
“This character requires a wheelchair.” These are all elements of the
form that opens under the info tab.</li>
<li>After entering the character info, return to the tabs, navigate to
the faces tab and choose a face shape and a face colour.</li>
<li>Next open the Nose tab and choose a nose.</li>
<li>Optionally, choose hair and a hair colour, a shirt and shirt colour,
outerwear, and accessories from the other tabs.</li>
<li>After choosing characteristics for your character, press the Save
button to save the character.</li>
<li>Your character is now created and you will be returned to the list
of characters. Find the character you created and click or keypress the
Edit link to reopen the character editor.</li>
<li>Navigate back to the preview panel of the character editor and
listen to the description provided to confirm the characteristics of
your character.</li>
</ol>
<p>You will note that each of the scenarios carefully step the user
testers through a specific process on the Lake Devo website. In cases
like this one, existing documentation such as the “Help” area of the
website often provides a good starting point for writing up the steps
involved in a given test scenario.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-059-recording-observations.xhtml"></span></p>
<article>
<div
id="chapter-059-recording-observations.xhtml_recording-observations"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Recording Observations</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>There are a range of ways you can record your own observations when
watching user testers complete activities. You might use an informal
strategy, like taking anecdotal notes, then expand on those notes after
the session. As mentioned previously, you may wish to videotape the
sessions, then after the sessions are complete, watch the videos and
create notes. Or, you could create a blended observation strategy,
recording specific behaviours in a spreadsheet based on the scenarios,
with codes to indicate particular behaviours or observations, with space
to add anecdotal notes, and perhaps in addition record the sessions so
it is possible to go back through the session later to provide
clarifications on recorded observations.</p>
<p>The following is an example of a record sheet, based on the Lake Devo
Testing – Scenario 1 introduced on the previous page. Notice a short
description of the <strong>task</strong> in the first column, a coded
level of <strong>effort</strong> in the second column ranging from 1 (no
difficulty) to 5 (unable to complete task). In the third column record
the <strong>tester’s comments</strong> as they think aloud, and in the
final column record the <strong>observer’s comments</strong>.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<strong>Toolkit:</strong> Download the <a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/ObservationNotesTemplate.docx"
target="_blank" rel="noopener noreferrer">Observation Notes Template
[docx]</a> and add it to your Toolkit.
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-060-activity-finding-user-testers.xhtml"></span></p>
<article>
<div
id="chapter-060-activity-finding-user-testers.xhtml_activity-finding-user-testers"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Activity: Finding User Testers</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2><span class="nosee"> <img src="OEBPS/assets/activity-2.png"
class="size-full wp-image-161 alignright" width="125" height="131" />
</span></h2>
<p>Spend a few moments with your favorite search engine and find
agencies or resources in your area that might help you find people with
disabilities to assist with user testing. Document three potential
sources in your area, including the name of the organization, and why
you think it would be a good source. Some sources might include:</p>
<ul>
<li>Associations for the blind</li>
<li>University accessibility services</li>
<li>Services for veterans</li>
<li>Services for those with cognitive or developmental disabilities</li>
<li>Associations for those with severe physical disabilities</li>
<li>First Nations disability association</li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-061-self-test-6.xhtml"></span></p>
<article>
<div id="chapter-061-self-test-6.xhtml_self-test-6"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Self-Test 6</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div class="print">
<section class="bcc-box bcc-info">
<h4><strong>Question 1</strong></h4>
<p><strong>When selecting user testers, which of the following
prerequisite skills or knowledge should recruits have? Choose all that
apply.</strong></p>
<ol type="a">
<li>Ability to read HTML</li>
<li>Knowledge of WCAG</li>
<li>Good understanding of web technologies</li>
<li>Ability to use multiple assistive technologies</li>
<li>Moderate to expert skill using their own assistive technology</li>
<li>Fluent English speaker</li>
<li>Touch typing skill</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 2</strong></h4>
<p><strong>When developing a test protocol, which of the following
features should it have? Choose all that apply.</strong></p>
<ol type="a">
<li>Can be completed in one hour</li>
<li>Multiple short tasks to complete</li>
<li>Coverage of the whole website or application being tested</li>
<li>Time between tasks to ask questions</li>
<li>Printed out on paper for tester to read</li>
<li>Provided in electronic form so it can be read by assistive
technologies</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 3</strong></h4>
<p><strong>When recording observations during a user testing session,
which of the following strategies might be used. Choose all that
apply.</strong></p>
<ol type="a">
<li>Anecdotal notes</li>
<li>Video taping</li>
<li>Audio taping</li>
<li>Recording in a spreadsheet</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 4</strong></h4>
<p><strong>During a user testing session which of the following should
an observer not do? Choose all that apply.</strong></p>
<ol type="a">
<li>Ask questions about what a tester is thinking</li>
<li>Provide hints to make a task easier</li>
<li>Help a tester complete a task if they get stuck</li>
<li>Remain quiet</li>
<li>Answer a phone call</li>
<li>Describe to a tester how a task is done</li>
<li>Pay the tester for their time and expenses</li>
</ol>
</section>
<p><a href="#back-matter-003-answers.xhtml#answers-self-6">Answers to
Self-Test 6</a></p>
</div>
<p> </p>
<div class="textbox interactive-content">
<span class="interactive-content__icon"></span>
<p>An interactive or media element has been excluded from this version
of the text. You can view it online here:<br />
<a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1421#pb-interactive-content"
title="Self-Test: Unit 6">https://pressbooks.library.ryerson.ca/pwaa/?p=1421</a></p>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="part-008-web-accessibility-reporting.xhtml"></span></p>
<article>
<div
id="part-008-web-accessibility-reporting.xhtml_web-accessibility-reporting"
class="part">
<div class="part-title-wrap">
<h3 class="part-number"></h3>
<h1 class="part-title">7. Web Accessibility Reporting</h1>
</div>
</div>
</article>
<p><span
id="chapter-062-web-accessibility-audit-reporting.xhtml"></span></p>
<article>
<div
id="chapter-062-web-accessibility-audit-reporting.xhtml_web-accessibility-audit-reporting"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Web Accessibility Reporting</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div
style="margin: 1em 0;padding: 1em;background-color: #fff5cc;border: 1px solid #ddd">
<p><span class="nosee"><img
src="OEBPS/assets/striped_lollipop_morgaine1976-300px-150x150-1-e1521733755321.png"
class="size-full wp-image-75 alignleft" width="50"
height="50" /></span>Having greatly improved their awareness of how to
identify and test for barriers in their web content, Lulu and her team
quickly realized that proper documentation of this work would be
necessary in order to make the most of their accessibility improvement
efforts. As such, they next turned their attention to tracking and
reporting. The first six units introduced you to web accessibility
auditing, went through the WCAG 2.0 guidelines, and covered the tools
and methods for conducting accessibility reviews.</p>
</div>
<p>Building on this foundation, this unit will explore what to do with
the results of the accessibility testing tools. Specifically, we will
look at:</p>
<ul>
<li>Reporting strategies – different types of auditing reports, when to
use each, and the elements of such reports</li>
<li>Web accessibility around the world and the relationship between
international regulations and WCAG 2.0</li>
<li>Other accessibility guidelines and standards that complement WCAG
2.0, that you may need to consider while performing audits</li>
</ul>
<p>After identifying accessibility issues, the next step is to inform
the website’s owner or developer so that they may begin to remove
barriers. This is accomplished by producing an audit report.</p>
<p>This unit will introduce reporting strategies that can be used
to:</p>
<ul>
<li>Document potential barriers</li>
<li>Provide the reasoning to help consumers understand the importance of
“barrier free” web content</li>
<li>Prioritize issues</li>
<li>Recommend strategies to correct potential barriers</li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-063-objectives-and-activities-8.xhtml"></span></p>
<article>
<div
id="chapter-063-objectives-and-activities-8.xhtml_objectives-and-activities-8"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Objectives and Activities</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2><span class="nosee"><img
src="OEBPS/assets/checklist-e1516288820283-1.png"
class="size-full wp-image-74 alignright" width="100"
height="101" /></span>Objectives</h2>
<p>By the end of this unit, you will be able to.</p>
<ul>
<li>Identify factors to be considered when choosing a type of
audit.</li>
<li>Perform a quick informal review.</li>
<li>Produce a Template Audit.</li>
<li>Produce a General Audit.</li>
<li>Produce a Detailed Audit.</li>
<li>Create graphical enhancements for audit reports.</li>
<li>Write an effective executive summary for an audit report.</li>
<li>Assemble appendices for audit reports.</li>
</ul>
<h2>Activities</h2>
<ul>
<li>Examine a completed audit report</li>
<li>Conduct an informal review of the Lulu’s Lollipops website<br />
</li>
<li>Walk through the steps of a Template Audit</li>
<li>Self-Test 7</li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-064-choosing-an-audit.xhtml"></span></p>
<article>
<div id="chapter-064-choosing-an-audit.xhtml_choosing-an-audit"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Choosing an Audit</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>Different situations will require different types of web
accessibility audits or reviews. More detailed information on each type
of review is provided in the pages that follow. However, here are some
questions that may assist you when deciding what type of audit to
conduct:</p>
<ul>
<li><strong>Is this an internal or external review?</strong> Depending
on your audience, a review may be more or less formal. If you are
providing feedback to a developer in your organization, it may be
sufficient to provide point form notes in an email. If you are reporting
to senior management, or perhaps to an external organization, a more
formal review is likely more appropriate.</li>
<li><strong>What is the budget for the review?</strong> If you are
working with a small company, or even a larger company with limited
resources committed to web accessibility, a quick informal review may be
appropriate. A template review may also be desirable in such cases.
These tend to be completed quickly and produce the biggest effect on
accessibility for the effort and cost expended. If you are working with
a larger budget, then a combination of formal reviews and user testing
might be conducted.</li>
<li><strong>What is the client’s motivation for the audit?</strong> For
jurisdictions that have legislated web accessibility requirements, more
detailed reviews may be desirable to ensure that organizations are in
compliance. On the other hand, organizations may be in jurisdictions
where there is no obligation to make their web content accessible and
may not be willing to invest in an audit. A quick, informal review may
open their eyes to the benefits of an inclusive website, acting as a
loss leader for a formal review. And, there will be other organizations
that just want to be good corporate citizens, who will be more open to a
thorough review of their web content.</li>
</ul>
<p>Balancing context, motivation, and budget will often guide the
approach you’ll take as an auditor, giving clients what will serve them
best. Depending on the answers to the questions above, it may happen
that a series of reviews are offered to a client, beginning informally
and building to more detailed reviews.</p>
<div
style="margin: 1em 0;padding: 1em;background-color: #fff5cc;border: 1px solid #ddd">
<p><span class="nosee"><img
src="OEBPS/assets/striped_lollipop_morgaine1976-300px-150x150-1-e1521733755321.png"
class="size-full wp-image-75 alignleft" width="50"
height="50" /></span>Lulu is interested in making improvements to the
accessibility of her web content for both compliance-related and
business reasons. If Lulu was your client, what types of audits and
related reports might you offer her in order to optimize the
accessibility outcomes for her website?</p>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-065-informal-reviews.xhtml"></span></p>
<article>
<div id="chapter-065-informal-reviews.xhtml_informal-reviews"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Informal Reviews</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>An informal review is a quick scan of a website to identify obvious
accessibility issues. While these reviews do not represent exhaustive
audits, they are useful for a variety of purposes.</p>
<h2>Purpose of Review</h2>
<p>An informal review is often attached to a quote for a formal
accessibility audit, providing some introductory information to a client
to give them a better idea of the types of issues on their website
before they commit to the formal review. An informal review can be
helpful in justifying a formal review.</p>
<h2>Process of Review</h2>
<p>Informal reviews often occur as part of a conversation, perhaps with
a member of an organization who is responsible for managing an
organization’s image, or with a developer who is planning or reviewing
design activities. These reviews will often involve a couple of quick
tests, like the Tab Key Navigation test, or passing a page through an
automated accessibility checker, or quickly examining the code where
suspected issues may be present, or running a page through a screen
reader. These quick reviews often turn up a number of potential barriers
that help get a discussion started on next steps toward making web
content accessible.</p>
<h2>Reporting Results from the Review</h2>
<p>The following is an example of the types of issues that might be
documented in an informal review. Characteristics of an informal review
could include (in this example):</p>
<ol>
<li><strong>Type of site:</strong> a registration system with integrated
eCommerce</li>
<li><strong>Timing of review:</strong> prior to going live</li>
<li><strong>Duration of review:</strong> about 30 minutes</li>
<li><strong>Audience:</strong> the developer of the User Interface (UI)
created over a third party eCommerce system</li>
<li><strong>Style of Report:</strong>
<ol>
<li>Provided by email to the developer and the developer’s management
team</li>
<li>Brief and succinct</li>
<li>Written in a way that the developer would understand, already being
familiar with the UI, and already being familiar with the technical
language being used</li>
<li>A few non-accessibility related issues identified as a courtesy</li>
<li>Not too detailed if the review is intended to elicit a formal
review</li>
</ol></li>
</ol>
<h2>Sample Informal Review by Email</h2>
<div class="textbox">
<p>Hi John,</p>
<p>Here’s a quick summary of the potential issues found on your
registration site. If you like, we can arrange a time to talk about
these issues, and the possibility of conducting a formal review that
will address these and other potential issues in more detail to ensure
that as many people as possible are able to access your site and to
register.</p>
<p>I’ve identified some issues and offered suggestions for possible
fixes where applicable:</p>
<ul>
<li>Associate labels with form fields by matching the for attribute in
the label with the id attribute in the input element.</li>
<li>Add <code>aria-required="true"</code> to the required input
fields.</li>
<li>Use <code>aria-describedby="[id]"</code> to associate the
description in the hidden spans with the respective input field.</li>
<li>The Yes/No inputs look like checkboxes, but function like radio
buttons. Maybe not an issue, but inconsistent with what most people
might expect.</li>
<li>For the footnote numbers next to Price and Group, aria-describedby
could be used to associate the footnote with the number, or the numbers
could be linked to an anchor next to the associated footnote.</li>
<li>Because there are two levels of table header cells in the tickets
table, they should use headers/id to associate both levels of header,
though in this case this is a trivial issue given the small size of the
table.</li>
<li>The checkbox looking button beside the credit cards accepted line is
a bit confusing. It shows a hand cursor which suggests it should be
clickable, but it’s not.</li>
<li>When an error message is displayed, include
<code>role="alert"</code> in the div containing the message.</li>
<li>When an error occurs, send focus to the first field that has an
error.</li>
<li>It was possible to submit the form for payment without the ticket
holder email being valid.</li>
<li>Clicking “return to form” in the credit card popup hangs, apparently
trying to access Google Analytics.</li>
<li>In the credit card popup, focus should be trapped in the dialog in a
loop until either Pay Now, Back to Form, or the Escape key is
pressed.</li>
<li>In the credit card popup, the initial checkbox and other form fields
should be associated with the respective labels using the Label element
(with matching for/id).</li>
<li>For the error message that appears in the credit card popup, add
<code>role="alert"</code> to the span containing the message.</li>
<li>The close X should have title text added such as
<code>title="close credit card details"</code>.</li>
<li>After submitting the credit card form, the screen hangs, again
trying to access Google analytics.</li>
<li>Unable to see the output after making a credit card submission, to
determine if there are any issues at the final step.</li>
<li>Unable to see how the tickets are issued, perhaps via email. Not
sure if there are any issues there.</li>
</ul>
</div>
<p> </p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-066-template-audit-and-audit-walk-through.xhtml"></span></p>
<article>
<div
id="chapter-066-template-audit-and-audit-walk-through.xhtml_template-audit-and-audit-walk-through"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Template Audit and Audit Walk-Through</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>A Template Audit is perhaps the most impactful of the different types
of audits that will be discussed here.</p>
<h2>Purpose of Audit</h2>
<p>These audits focus on the common elements throughout a website, such
as the navigation, header, footer, menus, and the layout in general.
They are often quick to complete, taking only a few hours, and often
involve looking at only a single page. There are occasions when multiple
templates might be reviewed, such as the home page, which often differs
from other pages, as well as one or two unique layouts from other pages
on a website.</p>
<h2>Process of Audit</h2>
<p>In the screenshot below you can see the areas of a page outlined. For
a Template Audit, the <em>Main Navigation</em>, the <em>Header (i.e,.
Banner),</em> the <em>Side Menu</em>, and the <em>Footer</em> area are
reviewed. The Main Content Area would be ignored for now, to be reviewed
as part of a General Audit.</p>
<p><img src="OEBPS/assets/template_regions.jpg"
class="alignnone size-full wp-image-51" width="633" height="617"
alt="Template regions, see description below" /></p>
<p><strong>Figure</strong>: <strong>Typical template elements include
the header, the side menu, banner, main content area, complementary
content, and the footer</strong></p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> Before reading further, download the <a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/WCAG2_review_template.doc"
target="_blank" rel="noopener noreferrer"><strong>WCAG2 Review Template
[doc]</strong></a>, if you have not already, and open it in Microsoft
Word, or another word processor that supports .doc files.
</div>
<h2>Audit Procedure</h2>
<p>Using the sample site template displayed in the figure above, examine
all the features except the main content area. The following series of
tests can be followed to audit the common elements of the template.
<strong>This same series of tests would be used for General and Detailed
Audits</strong> as well, but rather than focusing on elements of a
single page in the case of a Template Audit, these steps would be
followed for each page that is being reviewed as part of an audit.</p>
<p>Visit the <a href="https://de.ryerson.ca/wa/showcase" target="_blank"
rel="noopener noreferrer">Web Accessibility Showcase</a> to follow along
while we <strong>walk through</strong> a page audit. Open the audit
template so you can add notes to it as you are following along. Each of
the following test strategies include a multimedia alternative to the
text of the walk through.</p>
<p><strong>Note regarding the following videos</strong>: The videos that
appear in the section below are considered to be “<a
href="http://www.w3.org/TR/WCAG20/#multimedia-alt-textdef"
target="_blank" rel="noopener noreferrer">media alternatives for
text</a>” and as such they do not require captions. The text itself
provides the text equivalents for the videos (See Guideline 1.2.2).
Nonetheless, we have captioned them here. If you encounter videos used
in this way, without captions, they need not be identified in an audit
report as a potential barrier, as long as they are listed as media
alternatives.</p>
<h2>Tab Key Navigation Test</h2>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=1KYzwcJhrJ0"
target="_blank" rel="noopener noreferrer">Tab Key Accessibility
Testing</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-25.jpg"
title="Tab Key Accessibility Testing"
alt="Thumbnail for the embedded element &quot;Tab Key Accessibility Testing&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1438#pb-interactive-content"
title="Tab Key Accessibility Testing">https://pressbooks.library.ryerson.ca/pwaa/?p=1438</a></p>
</div>
<ol>
<li>Place the cursor in the top left corner of the page. Begin by
pressing the Tab key repeatedly and following the cursor’s path through
the template elements. Look for bypass links at the top of the page, and
if they are not visible, look at the browser’s status bar at the bottom
of the browser window to see if hidden bypass links are present. The URL
displayed there should have “#content” on the end of it, or something
similar prefixed with the number sign, or hash (#) as it is often
referred to. Follow the bypass link(s) by pressing the enter key when
they receive focus, to ensure they lead to the main content area, or in
some cases to the side menu. If these bypass links are not present, look
for other means to navigate through the content such as landmarks, as
described in the screen reader test below or by examining the HTML
markup to find them, or look for good use of headings. (Guideline 2.4.1,
Level A)</li>
<li>Ensure that the path the cursor takes is visible. (Guideline 2.4.7,
Level AA)</li>
<li>Look for access to an accessibility statement somewhere near the top
of the template, and that it appears early in the Tab sequence.
(Guideline 3.3.5, Level AAA)</li>
<li>Ensure the menus down the left of the page open and elements in the
submenus can be accessed by keyboard. This may require using the arrow
keys, or they may open using the Tab key or space bar. (Guideline 2.1.1,
Level A)</li>
<li>Ensure there is a way to skip past the menus, particularly if they
contain many items in the sub-menus. Typically the Tab key brings focus
to the menu, the arrow keys are used to navigate through it, and the Tab
key is pressed to exit the menu, and in this case move on to the banner
area to the right. (Guideline 2.4.1, Level A)</li>
<li>After the banner area, the cursor should move into the main content
area. Again ensure the focus is visible through elements in the main
content. Notice the tabpanels in the main content area. Ensure that it
is possible to move between the tabs in the tabpanel, typically using
the arrow keys, and to move directly from a tab to its associated panel,
typically using the Tab key. Keyboard functionality for tabpanels may
vary somewhat from site to site. (Guidelines 2.4.7, Level AA, Guideline
2.1.1, Level A, Guideline 2.4.1, Level A)</li>
<li>After reaching the end of the side menu, the cursor should move into
the main content area. We’ll ignore testing the elements within the main
content area for now, and come back to these when we discuss General
Audits. (Guideline 1.3.2, Level A)</li>
<li>After tabbing through the main content area, the cursor should move
to the right side complimentary content. Again ensure the focus is
visible while navigating through its elements, and that the toggles used
to open and close the accordion menu operate with a keypress, and that
they do so without reloading the page, or without losing focus on the
toggles when their state changes (e.g., open to closed). Ensure that
elements in the opened submenus are keyboard operable. (Guideline 1.3.2,
Level A, Guideline 2.4.7, Level AA, Guideline 3.2.2, Level A, Guideline
2.1.1, Level A)</li>
<li>After passing through the complimentary content area with the Tab
key, the cursor should move into the footer area. Again ensure that the
focus is visible, and that functional elements, in this case links, all
receive keyboard focus and operate with a keypress. (Guideline 1.3.2,
Level A, Guideline 2.4.7, Level AA, Guideline 2.1.1, Level A)</li>
<li>Having reached the end of the page, note whether the path the cursor
took through the page was a logical path, crossing from left to right,
moving from top to bottom. (Guideline 1.3.2, Level A)</li>
<li>Also note whether all of the elements the focus passed through are
meaningful on their own, and/or within the context of other functional
elements on the page. (Guideline 2.4.9, Level AAA, Guideline 2.4.4,
Level A</li>
</ol>
<h2>Using an Automated Accessibility Checker</h2>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=xbrqfxCNJb4"
target="_blank" rel="noopener noreferrer">Automated Accessibility
Checking</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-26.jpg"
title="Automated Accessibility Checking"
alt="Thumbnail for the embedded element &quot;Automated Accessibility Checking&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1438#pb-interactive-content"
title="Automated Accessibility Checking">https://pressbooks.library.ryerson.ca/pwaa/?p=1438</a></p>
</div>
<ol>
<li>We will use <a href="https://www.achecker.ca" target="_blank"
rel="noopener noreferrer">AChecker</a> here for demonstration purposes,
though you might choose to use another automated accessibility testing
tool.</li>
<li>Either test the page through its URL, or if the site is not publicly
available, view the source of the page, typically found in the browser’s
View menu, select all the markup displayed in the view source window
(e.g., press Ctrl-A), copy the markup (e.g., press Ctrl-C) to the
system’s clipboard, then paste the markup from the clipboard (Ctrl-V)
into the Paste HTML Markup area of the accessibility checker.</li>
<li>Open the Options Menu in AChecker, and select Show Source, WCAG 2.0
(Level AA), and View by Guideline. Or, adjust these options as needed.
You might choose WCAG 2.0 (Level AAA), though issues identified at this
level are typically optional.</li>
<li>After selecting options, press the “Check It” button to run the
checker, and wait for a few moments while the report is generated.</li>
<li>Note the number of Known, Likely, and Potential problems the checker
identifies, focusing on the Known Problems to start. Examine the Known
Problems to ensure they are not false positives. You may need to follow
the Line number link next to a problem to examine the surrounding
markup. If the issues are actual, note them with the appropriate
guideline in your developing audit report. You can also examine other
information about issues by following the link next to each check that
is listed in the checker’s report.</li>
<li>After documenting the Known Issues in your developing audit report,
switch to the Likely Problems tab in the checker, if there are any, and
scan through these issues to confirm whether issues are actual or not.
These issues may be actual, though often they are not, when accessible
alternatives are provided. Scan through the content of the page to
ensure items marked as likely have an accessible alternative. If these
turn out to be actual issues, note them with the appropriate guideline
in your developing audit report.</li>
<li>Finally scan through the issues presented under the Potential
Problems tab. These quite often are not problems at all, but because the
checker is unable to identify these issues with certainty, a human has
to make a decision. If these turn out to be actual problems, identify
them in your developing audit report.</li>
</ol>
<h2>Markup Validation</h2>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=trNwb73LcBA"
target="_blank" rel="noopener noreferrer">HTML
Validation</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-27.jpg" title="HTML Validation"
alt="Thumbnail for the embedded element &quot;HTML Validation&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1438#pb-interactive-content"
title="HTML Validation">https://pressbooks.library.ryerson.ca/pwaa/?p=1438</a></p>
</div>
<ol>
<li>As with AChecker, submit the URL or paste a copy of the HTML source
of the page into the <a href="http://validator.w3.org" target="_blank"
rel="noopener noreferrer">W3C HTML Validator</a> to assess the validity
of the HTML to ensure that markup errors are not causing potential
barriers. Like AChecker you can also select Options, though the default
settings are typically sufficient.</li>
<li>Pay attention to the errors identified in the report the validator
generates, and don’t be concerned with the warnings. Pay particular
attention to duplicate IDs, elements that are not closed, and elements
that are incorrectly nested. These issues run the risk of confusing
screen readers.</li>
<li>If the page does not validate (most won’t) provide a general
statement along with Guideline 4.1.1 (Level A) in your audit report that
validation should be conducted to remove potential barriers that may
arise when assistive technologies encounter broken markup, and provide a
link to the validator. There is no need to document all the markup
errors, apart from those mentioned above.</li>
</ol>
<h2>Screen Reader Scan</h2>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=H42dISD3gDA"
target="_blank" rel="noopener noreferrer">Testing Accessibility with
ChromeVox</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-28.jpg"
title="Testing Accessibility with ChromeVox"
alt="Thumbnail for the embedded element &quot;Testing Accessibility with ChromeVox&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1438#pb-interactive-content"
title="Testing Accessibility with ChromeVox">https://pressbooks.library.ryerson.ca/pwaa/?p=1438</a></p>
</div>
<ol>
<li>For screen reader testing we will use ChromeVox, turn it on then
continue.</li>
<li>Repeat the Tab Key Navigation test with the screen reader running,
and listen carefully to what the screen reader announces. Is what you
hear meaningful? Document in your audit report where additional
description could be provided. Are all functional elements able to
receive focus, and operate with a keypress. (Guideline 3.3.2, Level A,
Guideline 2.1.1, Level A)</li>
<li>List the headings on the page using the screen reader list headings
command (Cvox-L-H) and use the down arrow key to cycle through the list.
Are headings present, and structured in a meaningful way? Is there text
that appears to be a heading but it not recognized by the screen reader
(e.g., large bold fonts instead of proper headings)? Document these
issues in your report if they are relevant (Guideline 1.3.1, Level A,
Guideline 2.4.6, Level AA, Guideline 2.4.10, Level AAA ). If bypass
links are not present, headings are provided to allow navigation through
content (Guideline 2.4.1, Level A)</li>
<li>List the landmarks on the page using the screen reader’s list
landmarks command (Cvox-L-;) and use the down arrow key to cycle through
the landmarked regions. Are all areas of the page contained within a
landmarked region? Are landmarks present if bypass links or headings are
not? Document these issues in your report if relevant. Suggest including
them regardless of other ways to navigate through the page being
present. (Guideline 2.4.1, Level A)</li>
<li>List the links on the page using the screen reader’s list link
command (Cvox-L-L). Are all the links meaningful in context, or not in
context? (Guideline 2.4.4, Level A, Guideline 2.4.9, Level AAA)</li>
</ol>
<h2>Other Tests</h2>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=r1OvWGNIZD4"
target="_blank" rel="noopener noreferrer">Check Colour
Contrast</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-29.jpg" title="Check Colour Contrast"
alt="Thumbnail for the embedded element &quot;Check Colour Contrast&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1438#pb-interactive-content"
title="Check Colour Contrast">https://pressbooks.library.ryerson.ca/pwaa/?p=1438</a></p>
</div>
<p>Scan the page for potential colour contrast issues. Though the page
should not have any, the grey text on the grey background in the footer
area appears suspicious. Determine the colour codes, using your
browser’s Inspect Element feature, and run those colours through a
colour contrast tester to confirm they provide sufficient contrast.
(Guideline 1.4.3, Level AA, Guideline 1.4.6, Level AAA)</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-067-general-audits.xhtml"></span></p>
<article>
<div id="chapter-067-general-audits.xhtml_general-audits"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">General Audits</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2>Purpose of Audit</h2>
<p>A General Audit is a review of a sample of content from the main
content areas of a website, the results of which are generalized to the
whole site. It is usually too time-consuming and expensive to review all
pages on a website; many pages would be similar which would result in a
very long repetitive report. Generalizing results to the whole site
should be emphasized in the audit report.</p>
<h2>Process of Audit: Selecting a Review Sample</h2>
<p>Reviewing a representative sample of pages is the most efficient
approach for a General Audit. When choosing pages for the sample, be
sure to include pages that are key to the operation of the website, such
as:</p>
<ul>
<li>the home page</li>
<li>a registration page</li>
<li>a product purchase page, etc.</li>
</ul>
<p>Also choose pages with different types of content such as:</p>
<ul>
<li>a page with multimedia</li>
<li>a page presenting data laid out in a table</li>
<li>a form-based page</li>
<li>pages with embedded objects such as Java or Flash</li>
<li>a page with a structured article, etc.</li>
</ul>
<p>The sample should provide a complete cross-section of the different
types of content on the site.</p>
<p>Depending on the size of the site, and the different types of content
it contains, a sample might include 10 pages for a smaller site, and up
to 20–25 pages for a larger site with a broad variety of content. For
more information about <a href="http://www.w3.org/TR/WCAG-EM/#step3"
target="_blank" rel="noopener noreferrer">choosing a representative
sample</a>, refer to the Website Accessibility Conformance Evaluation
Methodology produced by the W3C.</p>
<p>When choosing pages for the sample, a thorough scan of the site
should be done by methodically clicking from page to page, viewing the
content quickly, and copying the URL and title for each of the pages
that will be included in the sample. It is often helpful to choose the
sample pages in cooperation with the developers of the website, who will
have a better idea of the types of content found on the site, and where
they might be located within a complex site structure. Alternatively,
you can scan through the site yourself, gather the sample, and send that
list to the owner of the site for their confirmation of whether the
sample is representative of the content on the site.</p>
<h2>Additional Scope Considerations</h2>
<p>If a Template Audit has not been conducted, elements of the template
will need to be included as part of the General Audit. A Template Audit
should be recommended to a client to avoid complicating a General
Audit.</p>
<h2>Time Required for the Audit</h2>
<p>You should estimate how much of your time will be required for the
audit before beginning. Your general sense of the complexity of the
content on the sample pages, the number of issues identified while
assembling the sample, whether a Template Audit will accompany the
General Audit, as well as the effort required to gather the sample will
all help you to establish a rough time-per-page estimate. A simple site
with basic content may take 10–15 minutes per page, while larger, more
complex sites may take an hour or more per page. Performing a review and
writing a report on 15 website pages might take a total of 10 to 15
hours.</p>
<p>With your first few audits, time estimates will likely be higher. As
you begin accumulating reports, there will be elements that can be
reused to save time. For example, the executive summary will tend to
follow the same format, introducing the report, providing a description
of the report and how to use it, with just the summary of key issues
changing from report to report. You will also find that similar issues
will arise from website to website, and the descriptions for those
issues can also be reused in many cases. Likewise, when describing
solutions to issues within reports, the time you initially invest to
develop solutions is time you will save later on.</p>
<h2>Audit Procedure</h2>
<p>Assuming a Template Audit is being conducted along with the General
Audit, the audit procedure will be much like that of a Template Audit,
but in this case will focus on the main content area of each of the
sampled pages (see figure on the previous “Template Audits” page). The
high level procedures are reiterated here; refer back to the procedure
outlined with the Template Audit for details.</p>
<ul>
<li>Tab Key Navigation test</li>
<li>Use an automated accessibility checker</li>
<li>Markup validation</li>
<li>Screen reader scan</li>
<li>Other test (colour, readability)</li>
</ul>
<p>In most cases testing the main content is much simpler than testing
the templates. The main content tends to be less complex so it is likely
that a quick scan will yield no issues. For example, an article
presented on a website may simply be a collection of headings and
paragraph text; checking the headings to be sure they are HTML headings
and nested properly takes only a few moments. On the other hand, if the
site has more complex elements and there are issues with those elements,
it may take just a few moments to discover the issues, but significantly
more time to describe them.</p>
<p>For a more detailed look at web accessibility auditing methods, see
the following resource.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<strong>Readings and References:</strong> <a
href="http://www.w3.org/TR/WCAG-EM" target="_blank"
rel="noopener noreferrer">W3C Website Accessibility Conformance
Evaluation Methodology</a>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-068-detailed-audits.xhtml"></span></p>
<article>
<div id="chapter-068-detailed-audits.xhtml_detailed-audits"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Detailed Audits</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>A third type of web accessibility audit is a Detailed Audit. This
type of audit is conducted on a particular feature of a website or on a
particular process. All aspects of the accessibility of the feature or
process are examined.</p>
<h2>Purpose of Audit</h2>
<p>Detailed Audits may be part of a series of audits that include a
Template and General Audit or they may be conducted on their own. A
Detailed Audit may be conducted on a standalone web application as a
whole, where a vendor or developer wishes to certify the accessibility
of their product. Alternatively, a Detailed Audit may be conducted on a
particular collection of pages that serve a particular purpose within a
site.</p>
<h2>Process of Audit</h2>
<p>The procedure for conducting a Detailed Audit is much like that of a
Template or General Audit, with the added review of the process or
transition elements of the process associated with a feature or
application.</p>
<p>A Detailed Audit begins by identifying all pages or screens
associated with the feature(s) to be reviewed. Think of this collection
of pages as representing a path through the site a visitor might take to
reach an ultimate destination. For example, consider a shopping cart
application used within a larger community website. The community site
may include a registration screen, a login screen, a user home page, and
the cart itself may include a product selection page, an invoice page, a
checkout page, and a credit card submission page, among others. All of
these pages together represent a process that must be accessible as a
whole before the cart application can be judged conformant.</p>
<p>Each page of the process of making a purchase with the cart
application is reviewed independently and as part of the whole process.
Individual pages are evaluated much like a content page would be
assessed in a General Audit. For example, can a screen reader user
easily navigate through a collection of products and make a selection
from the product page?</p>
<p>It is also important to evaluate the transitions between screens in
the process of making a purchase. For example, if a user wants to find
out more details about a product and opens a details window, once the
user has finished with the details window and closes it, are they able
to easily find their way back to their position in the products page
from which the details were opened? Or, after making a selection from
the product screen and being directed to the checkout screen, is there
sufficient feedback provided to indicate the product selection was
successful, without having to spend too much time searching through the
content of the checkout screen to make that determination? These types
of accessibility issues are part of the process, rather than part of the
content. Both <strong>content and process</strong> need to be considered
as a whole in a Detailed Audit.</p>
<h2>Time Required for Audit</h2>
<p>The scope of a Detailed Audit can vary quite significantly from audit
to audit. Assessing the accessibility of a whole web application, for
instance, can take weeks or more to complete. When estimating the time
required to complete a Detailed Audit, a strategy similar to the
sampling process in a General Audit is helpful. Create a list of each of
the pages or screens to be reviewed, do some initial informal review to
get a sense of the level of accessibility and the complexity of the
elements to be reviewed. Come up with a base time-per-page and multiply
that by the number of pages to be assessed to estimate the effort
required for the audit.</p>
<h2>Conformance Considerations</h2>
<p>When conducting Detailed Audits of web applications, it is important
to note a software version number in the report. A Detailed Audit will
only apply to a specific version of the software or to a specific
feature on a website on a particular date. Because software and websites
change over time, it is only appropriate to assign conformance on a
particular “date identified” snapshot of the features or functionality
being reviewed.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #f66">
<strong>Key Point:</strong> A conformance claim following a Detailed
Audit applies only to a particular version of software, or to a
particular feature of a website at a specific point in time.
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-069-follow-up-audits.xhtml"></span></p>
<article>
<div id="chapter-069-follow-up-audits.xhtml_follow-up-audits"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Follow-Up Audits</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2>Purpose of Audit</h2>
<p>The final type of audit to be introduced here is a Follow-Up Audit,
which occurs some time after the initial Template, General, or Detailed
Audits have been issued. After the site’s developers have gone through
the audit to understand the issues and the steps needed to address
accessibility problems, you will likely want to arrange a time to answer
any questions that arise. Once their questions are answered, developers
will go ahead and fix the issues in your report and will likely want a
Follow-Up Audit to confirm that the fixes have successfully removed the
barriers identified and that no new barriers have been introduced.</p>
<p>Often just a single Follow-Up Audit is required, though there may be
a need for multiple audits. When estimating time required for questions
and the follow-up review(s), an hour or two is usually enough for
questions and a follow-up or two adds about 20% to the cost of the
project.</p>
<h2>Process of Audit</h2>
<p>As the reviewer, start a new audit with a fresh copy of the audit
template and go through the issues identified in the initial audit
report, confirming that each has been addressed. While confirming, watch
out for any new issues that may have been introduced. Document any
remaining or new issues in the Follow-Up Audit report.</p>
<h2>Conformance Confirmation</h2>
<p>Assuming the outcome of the Follow-Up Audit confirms that all of the
issues identified in the initial audit report have been addressed, you
may choose to issue a conformance claim; this might include a
conformance seal, either those issued by the <a
href="http://www.w3.org/WAI/WCAG2-Conformance" target="_blank"
rel="noopener noreferrer">W3C</a> or perhaps your own company seal.
Refer to the “<a
href="http:///pwaa/chapter/wcag-2-0-accessibility-conformance-levels"
target="_blank" rel="noopener noreferrer"
title="WCAG 2.0 Accessibility Conformance Levels">WCAG 2.0 Conformance
Levels</a>” in unit 2 for additional details on issuing conformance
claims.</p>
<p>Publicly posting conformance claims is optional and not posting a
claim does not in any way affect conformance. Many organizations choose
not to make public claims. They should still, however, provide
documentation on the accessibility features found on the site and
describe their goal to reach and maintain Level AA conformance.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-070-tour-of-an-audit-report.xhtml"></span></p>
<article>
<div
id="chapter-070-tour-of-an-audit-report.xhtml_tour-of-an-audit-report"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Tour of an Audit Report</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>In the unit Introduction to WCAG 2.0, you were introduced to the “Web
Auditing Review Template” and the elements it contains. Here we will
look more closely at the “WCAG 2.0 Review” elements of the report: the
Executive Summary and the Appendices. Download a <a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/WCAG2_review_Canvas_lms.pdf"
target="_blank" rel="noopener noreferrer">copy of the Canvas LMS General
Review [PDF]</a> and follow along.</p>
<h2>The General Comments or Executive Summary</h2>
<p>The <strong>General Comments</strong> in the Canvas LMS audit can
also be thought of as the Executive Summary, and provides an overview of
the report.</p>
<p>General Comments or an Executive Summary will commonly include:</p>
<ul>
<li>The scope of the audit</li>
<li>A description of key issues</li>
<li>Terms used to evaluate issues</li>
</ul>
<p>In this case the <strong>scope of the audit</strong> is the student
facing components of the LMS, presented below:</p>
<div style="padding: 1em;margin: 1em 0;border: 1px solid #bbb">
<p><strong>Scope:</strong></p>
<p>“This evaluation looks at the accessibility and usability of the
student facing components of the Canvas LMS. It is not an exhaustive
review of all features, but rather more general coverage of the
accessibility and usability of the student features as a whole.”</p>
</div>
<p>Following the scope comes a <strong>description of the key
issues</strong> that have been identified in the report. These are
typically the more significant Level A issues that would result in
barriers to access for a given group of users, or issues that are
recurring throughout the site or application being reviewed. Depending
on the scope of the review, this can be anywhere from a few paragraphs
to a few pages.</p>
<p>Finally, the General Comments describe the <strong>Evaluation
terms</strong>, before leading into the full WCAG 2.0 Review.</p>
<div style="padding: 1em;margin: 1em 0;border: 1px solid #bbb">
<p><strong>Evaluation Terms:</strong></p>
<p>“In places throughout the review, “Fail?” or “Pass?” have been used
where a fail or pass is questionable. “Pass?” is used in places where a
single instance of a barrier has been identified, perhaps an oversight,
or where it could be argued that an item might fail or pass, typically a
minor issue, leaning toward a Pass. “Fail?” is used in cases where an
item could be argued as a fail or pass, leaning toward a fail. In all
cases, developers should consider the recommendations made to remove any
potential argument.”</p>
</div>
<h2>The WCAG 2.0 Review</h2>
<p>The WCAG 2.0 Review area of an audit report is a table formatted into
4 columns and 62 rows. Each row represents one of the WCAG 2.0
guidelines. The four columns present the following key elements of the
review:</p>
<ul>
<li><strong>Success Criterion:</strong> The guideline numbers and a
brief description of the guideline.</li>
<li><strong>Level:</strong> The conformance level for the associated
guideline, i.e., A, AA, or AAA. Note that the AAA requirements are
greyed out, indicating that these are optional requirements. You may
also notice that Guidelines 1.2.4 and 1.2.5 are also greyed out; these
are optional requirements for Ontario organizations, though may be
required in other jurisdictions.</li>
<li><strong>Evaluation:</strong> This is the outcome of the evaluation
of a particular guideline, and there are 4 options.
<ul>
<li>“Pass” is specified if the success criteria for a guideline are
met.</li>
<li>“Pass?” indicates that you have dismissed an issue as trivial,
though it should still be considered when making accessibility updates
to the site. For example, if just one image on a website is missing alt
text, while all others include it, a questionable pass would be
specified.</li>
<li>“Fail” is specified when the success criteria for a guideline are
clearly not met.</li>
<li>“Fail?” is used when it could be argued that a strategy arguably
meets the success criteria, but there are perhaps better approaches. In
either case, questionable pass or fail, a subjective judgement is being
made. This should be clearly stated in the General Comments.</li>
<li>“N/A” marks those guidelines that are not applicable in the current
context.</li>
</ul></li>
<li>Comments: This is the “meat” of a web accessibility audit. Here,
potential barriers are described with enough detail so that readers
familiar with the site being reviewed are able to reproduce or find the
barriers themselves. Reading through the Comments section of the Canvas
LMS review, you can gather a sense of the detail provided.</li>
</ul>
<h2>The Comments Area – Use of Graphics</h2>
<p>Continuing to look at the Comments section in more detail, you will
see that some graphics have been added to explain issues more clearly,
particularly where the written explanations may be too complicated or
technical for some people to understand, or in places where a key issue
needs to be highlighted. And, there are times when just pointing to an
issue in a graphic is more effective than trying to describe it in
words.</p>
<h3>Graphics to Enhance Explanations and Summarize Main Issues</h3>
<p>Take Success Criterion 1.4.3 in the Canvas LMS review for instance.
In the explanation of the first issue, it can be difficult to pinpoint
exactly which colours are problematic. An added graphic explanation,
like the figure below, makes it clear which colours are being referred
to almost instantly upon viewing the image. In fact, one may be able to
understand the issue based on the graphic without needing to read the
text explanation.</p>
<p><img src="OEBPS/assets/image00.png"
class="alignnone size-full wp-image-52" width="476" height="415"
alt="example graphic used to enhance text description of an accessibility issue" /></p>
<p><strong>Figure: Example of a graphic used to enhance the explanation
of an issue</strong></p>
<p>The collection of graphics in the report as a whole can act as a
summary of the main issues. If you scan through just the graphics in the
report, you will notice they address most of the main issues.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<strong>Reading and References:</strong> If you would like more
information on tools that can be used to create graphics, see <a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/ToolsforCreatingGraphicEnhancements28129.pdf"
target="_blank" rel="noopener noreferrer">Tools for Creating Graphic
Enhancements [PDF]</a>.
</div>
<h2>The Comments Area – Issue Descriptions</h2>
<p>When describing an issue, always include:</p>
<ul>
<li>a brief description of the issue itself</li>
<li>the reason why it is an issue</li>
<li>one or more potential solutions to correct the issue</li>
</ul>
<p>For each type of issue, reasoning need only be provided once. Examine
the following description of an issue and note these elements in the
description.</p>
<div style="line-height: 30px">
<div
style="height: 30px;width: 30px;float: left;margin-right: 10px;background-color: #ff9900">

</div>
<p>Issue described</p>
</div>
<div style="line-height: 30px">
<div
style="height: 30px;width: 30px;float: left;margin-right: 10px;background-color: #00ffff">

</div>
<p>Reason why it’s an issue</p>
</div>
<div style="line-height: 30px">
<div
style="height: 30px;width: 30px;float: left;margin-right: 10px;background-color: #e06666">

</div>
<p>Potential solution(s)</p>
</div>
<div style="padding: 1em;margin: 1em 0;border: 1px solid #bbb"
title="In this paragraph, the first line describes the issue, the second to reasoning, and the last the solution">
<p><span style="background-color: #ff9900">In the main calendar view,
the days of the week that appear in the top row should be marked up with
table headers (th).</span> <span
style="background-color: #00ffff">Currently when navigating the data
cells for each day, Assistive Technology users hear only the number,
with no indication of the day of the week.</span> <span
style="background-color: #e06666">The <code
style="background: none">scope="col"</code> attribute could be added in
each header cell to help ensure day of the week is announced with each
number.</span></p>
</div>
<h2>Appendices</h2>
<p><strong>For a General Review</strong>, the Appendices should include
a list of the pages sampled for the review, including the page title and
URL.</p>
<p><strong>For a Detailed Review</strong>, the Appendices should include
a list of page titles and their associated URLS for the process or
feature being reviewed. This might include a description of a user
scenario that was tested, such as the process of making a purchase
(described earlier).</p>
<p>The Appendices may also contain information not directly related to
the accessibility review, such as pointing out potential bugs, providing
recommendations on processes for addressing issues outlined in the
report, or outlining strategies to address accessibility of web content
as part of everyday business practice.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-071-activity-lulus-lollipops-informal-review.xhtml"></span></p>
<article>
<div
id="chapter-071-activity-lulus-lollipops-informal-review.xhtml_activity-lulus-lollipops-informal-review"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Activity: Lulu's Lollipops Informal
Review</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p><img src="OEBPS/assets/activity-2.png"
class="size-full wp-image-161 alignright" width="125"
height="131" />Based on what you learned in this unit, conduct an
informal review of the <a href="https://de.ryerson.ca/wa/lulu"
class="external" target="_blank" rel="noopener noreferrer">Lulu’s
Lollipops website<span style="text-decoration: underline"></span><span
class="screenreader-only"><span
style="text-decoration: underline"></span></span></a>, and write a brief
report (maximum two pages). Re-read the <strong>Sample Informal
Review</strong> from earlier in this unit to understand what, and how
much information to include in your Informal Review. The goal should be
to encourage a formal review.</p>
<p> </p>
<p><a href="#back-matter-003-answers.xhtml#answer-activity-7">Suggested
Answer to Activity</a></p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-072-self-test-7.xhtml"></span></p>
<article>
<div id="chapter-072-self-test-7.xhtml_self-test-7"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Self-Test 7</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div class="print">
<section class="bcc-box bcc-info">
<h4><strong>Question 1</strong></h4>
<p><strong>Which of the following is not a type of audit that was
covered in this Chapter? Please select all that apply.</strong></p>
<ol type="a">
<li>Informal</li>
<li>Template</li>
<li>Navigation</li>
<li>Content</li>
<li>General</li>
<li>Detailed</li>
<li>Follow-Up</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 2</strong></h4>
<p><strong>What is the time limit on the validity of a Web accessibility
conformance review for a website?</strong></p>
<ol type="a">
<li>Two years</li>
<li>A year</li>
<li>Six months</li>
<li>A month</li>
<li>A week</li>
<li>None of the above</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 3</strong></h4>
<p><strong>Which of the following elements would be reviewed in a
Template Audit? Please select all that apply.</strong></p>
<ol type="a">
<li>Main Navigation</li>
<li>Header</li>
<li>Side Menu</li>
<li>Main Content Area</li>
<li>Footer</li>
<li>None of the above</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 4</strong></h4>
<p><strong>Which of the following elements would be reviewed in a
General Audit, assuming a Template Audit had already been conducted?
Please select all that apply.</strong></p>
<ol type="a">
<li>Main Navigation</li>
<li>Header</li>
<li>Side Menu</li>
<li>Main Content Area</li>
<li>Footer</li>
<li>None of the above</li>
</ol>
</section>
<p><a href="#back-matter-003-answers.xhtml#answers-self-7">Answers to
Self-Test 7</a></p>
</div>
<p> </p>
<div class="textbox interactive-content">
<span class="interactive-content__icon"></span>
<p>An interactive or media element has been excluded from this version
of the text. You can view it online here:<br />
<a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1478#pb-interactive-content"
title="Self-Test: Unit 7">https://pressbooks.library.ryerson.ca/pwaa/?p=1478</a></p>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="part-009-other-accessibility-standards.xhtml"></span></p>
<article>
<div
id="part-009-other-accessibility-standards.xhtml_other-accessibility-standards"
class="part">
<div class="part-title-wrap">
<h3 class="part-number"></h3>
<h1 class="part-title">8. Other Accessibility Standards</h1>
</div>
</div>
</article>
<p><span
id="chapter-073-other-accessibility-standards.xhtml"></span></p>
<article>
<div
id="chapter-073-other-accessibility-standards.xhtml_other-accessibility-standards"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Other Accessibility Standards</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div
style="margin: 1em 0;padding: 1em;background-color: #fff5cc;border: 1px solid #ddd">
<p><span class="nosee"><img
src="OEBPS/assets/striped_lollipop_morgaine1976-300px-150x150-1-e1521733755321.png"
class="size-full wp-image-75 alignleft" width="50"
height="50" /></span>At a recent planning meeting with her management
team, Lulu was reminded of one additional consideration with respect to
her website. Lulu hopes to expand her business more widely to
international markets. She wonders if her website is in compliance with
accessibility requirements in other jurisdictions. Because the learning
and work that Lulu and her team have been doing is anchored in the WCAG
2.0 guidelines, she will meet the compliance requirements of most
regions across North America and the rest of the world. However, it
would be beneficial for those at Lulu’s Lollipops and for you to become
familiar with a few additional guidelines that may be relevant in
specific contexts and situations.</p>
</div>
<p>So far WCAG 2.0 has been the main guideline we have used for auditing
web accessibility. In most cases it will be the guideline of choice,
though there are others to be aware of that might also be referenced as
part of web accessibility auditing projects. In this unit we will look
at:</p>
<ul>
<li>The W3C Authoring Tool Accessibility Guidelines (ATAG)</li>
<li>User Agent Accessibility Guidelines (UAAG)</li>
<li>WAI’s Accessible Rich Internet Applications Guidelines
(WAI-ARIA)</li>
<li>The ISO 24751 Access for All standards</li>
</ul>
<p>We will also look at how rules and legislation around the world have
adopted WCAG 2.0 as the basis for various international laws that
dictate web accessibility requirements in many countries. As a result of
this adoption, it is possible through courses like this one to train
developers and auditors with one set of instructions. Ultimately, the
good news is that what you learn in this course will be applicable for a
broad range of country-specific accessibility requirements.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-074-objectives-and-activities-9.xhtml"></span></p>
<article>
<div
id="chapter-074-objectives-and-activities-9.xhtml_objectives-and-activities-9"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Objectives and Activities</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2><span class="nosee"><img
src="OEBPS/assets/checklist-e1516288820283-1.png"
class="size-full wp-image-74 alignright" width="100"
height="101" /></span>Objectives</h2>
<p>By the end of this unit, you will be able to:</p>
<ul>
<li>Identify a range of accessibility guidelines and standards and
relate them to relevant business contexts and jurisdictions.</li>
</ul>
<h2>Activities</h2>
<ul>
<li>Identify any relevant accessibility guidelines that may be in place
in your jurisdiction</li>
<li>Compare WAI-ARIA implementation strategies using the ChromeVox
screen reader</li>
<li>Self-Test 8</li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-075-wcag-2-0-relation-to-international-web-accessibility-guidelines.xhtml"></span></p>
<article>
<div
id="chapter-075-wcag-2-0-relation-to-international-web-accessibility-guidelines.xhtml_wcag-2-0-relation-to-international-web-accessibility-guidelines"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">WCAG Relation to International Web
Accessibility Guidelines</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>The W3C <a href="https://www.w3.org/TR/WCAG20" target="_blank"
rel="noreferrer noopener">Web Content Accessibility Guideline</a> (WCAG
2.0) has become broadly accepted as the definitive source for web
accessibility rules around the world, with many jurisdictions adopting
it verbatim, or with minor adjustments, as the basis for accessibility
laws that remove discrimination against people with disabilities on the
web. The following is a listing of some of the countries that have
adopted WCAG 2.0.</p>
<h2>Canada</h2>
<h3>Accessibility for Ontarians with Disabilities Act (AODA)</h3>
<p>This course has been created in the context of the AODA, which came
into effect in 2005 with the goal of making Ontario the most inclusive
jurisdiction in the world by 2025. Part of this 20 year rollout involved
educating businesses in Ontario, many of which are now obligated by the
Act to make their websites accessible, first at Level A between 2012 and
2014, and at Level AA between 2016 and 2021.</p>
<p>The AODA adopts WCAG 2.0 for its web accessibility requirements, with
the exception of two guidelines:</p>
<ol>
<li>Ontario businesses and organizations are not required to provide
captioning for live web-based broadcasts (WCAG 2.0 Guideline 1.2.4,
Level A)</li>
<li>Ontario businesses and organizations are not required to provide
audio description for pre-recorded web-based video (WCAG 2.0 Guideline
1.2.5, Level AA)</li>
</ol>
<p>Otherwise, AODA adopts WCAG 2.0 verbatim.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<strong>Readings and References:</strong> For key information on the
adoption of WCAG 2.0 in the context of the AODA, refer to <a
href="http://www.ontario.ca/laws/regulation/110191#BK15" target="_blank"
rel="noreferrer noopener">The Integrated Accessibility Standards (of the
AODA)</a>.
</div>
<h3>Canadian Government Standard on Web Accessibility</h3>
<p>In 2011, the Government of Canada (GOC) introduced its most recent
set of web accessibility standards, made up of four sub-standards that
replace the previous Common Look and Feel 2.0 standards. The Standard on
Web Accessibility adopts WCAG 2.0 as its web accessibility requirements,
with the exception of Guideline 1.4.5 Images of Text (Level AA) in cases
where “essential images of text” are used, in cases where “demonstrably
justified” exclusions are required, and for any archived web content.
The standard applies only to Government of Canada websites.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<strong>Readings and References: </strong>For full details of the
Government of Canada accessibility requirements, read the <a
href="https://www.tbs-sct.gc.ca/pol/doc-eng.aspx?id=23601"
target="_blank" rel="noreferrer noopener">Standard on Web
Accessibility</a>.
</div>
<h3>Accessibility 2024</h3>
<p>In 2014 the British Columbia government released Accessibility 2024,
a 10-year action plan designed around 12 building blocks intended to
make the province the most progressive in Canada for people with
disabilities. Accessible Internet is one of those building blocks. The
aim is to have all B.C. government websites meet WCAG 2.0 AA
requirements by the end of 2016.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<strong>Readings and References:</strong> For additional details visit
the <a
href="http://www2.gov.bc.ca/gov/content/governments/about-the-bc-government/accessibility"
target="_blank" rel="noreferrer noopener">Accessibility
2024</a> website.
</div>
<h2>United States</h2>
<h3>Americans with Disabilities Act (ADA)</h3>
<p>The ADA does not have any specific technical requirements upon which
it requires websites to be accessible; however, there have been a number
of cases where organizations that are considered to be “places of public
accommodation” have been sued due to the inaccessibility of their
websites (e.g., Southwest Airlines, AOL), where the defendant
organization was required to conform with WCAG 2.0 Level A and Level AA
guidelines.</p>
<p>There is a proposed revision to Title III of the ADA (Federal
Register Volume 75, Issue 142, July 26, 2010) that would, if passed,
require WCAG 2.0 Level A and AA conformance to make web content
accessible under ADA.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<strong>Readings and References:</strong> See: <a
href="https://www.federalregister.gov/articles/2010/07/26/2010-18334/nondiscrimination-on-the-basis-of-disability-accessibility-of-web-information-and-services-of-state#h-12"
target="_blank" rel="noreferrer noopener">Nondiscrimination on the Basis
of Disability; Accessibility of Web Information and Services of State
and Local Government Entities and Public Accommodations</a>
</div>
<h3>Section 508 (of The Rehabilitation Act, U.S.)</h3>
<p>Section 508 is part of the U.S. Rehabilitation Act and its purpose is
to eliminate barriers in information technology, applying to all Federal
Agencies that develop, procure, maintain, or use electronic and
information technology. Any company that sells to the U.S. Government
must also provide products and services that comply with the
accessibility guidelines Section 508 describes in the Act.</p>
<p>These guidelines were originally based on a subset of the WCAG 1.0
guidelines, which was recently updated to adopt WCAG 2.0 Level A and AA
guidelines as new requirements for those obligated through Section
508.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<p><strong>Readings and References:</strong></p>
<ul>
<li><a
href="https://www.federalregister.gov/documents/2017/01/18/2017-00395/information-and-communication-technology-ict-standards-and-guidelines"
target="_blank" rel="noreferrer noopener">Section 508 Refresh (Jan 18,
2018)</a></li>
<li><a
href="http://www.ecfr.gov/cgi-bin/text-idx?SID=aed1a91a2d4f562c58049c82d84ed21d&amp;mc=true&amp;node=pt36.3.1194&amp;rgn=div5#se36.3.1194_122"
target="_blank" rel="noreferrer noopener">Section 508 – 1194.22 (Old
508)</a></li>
<li><a
href="http://www.access-board.gov/guidelines-and-standards/communications-and-it/about-the-ict-refresh/background/comparison-table-of-wcag2-to-existing-508-standards"
target="_blank" rel="noreferrer noopener">Comparison Table of WCAG 2.0
to Existing 508 Standards</a></li>
<li><a
href="http://www.access-board.gov/guidelines-and-standards/communications-and-it/about-the-ict-refresh?highlight=WyJpY3QiLCJyZWZyZXNoIiwiaWN0IHJlZnJlc2giXQ=="
target="_blank" rel="noreferrer noopener">Section 508 Proposed Update
(February 18, 2015 – See section B of Major Issues)</a></li>
</ul>
</div>
<h2>United Kingdom</h2>
<h3>Equality Act 2010</h3>
<p>The Equality Act in the UK does not specifically address how web
accessibility should be implemented, but does, through Section 29(1),
require that those who sell or provide services to the public must not
discriminate against any person requiring the service. Effectively,
preventing a person with a disability from accessing a service on the
web constitutes discrimination.</p>
<p>Sections 20 and 29(7) of the Act make it an ongoing duty of service
providers to make “reasonable adjustments” to accommodate people with
disabilities. To this end the British Standard Institution (BSI) <a
href="http://shop.bsigroup.com/en/ProductDetail/?pid=000000000030180388"
target="_blank" rel="noreferrer noopener">provides a code of practice
(BS 8878)</a> on web accessibility, based on WCAG 1.0.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<p><strong>Readings and References:</strong></p>
<ul>
<li><a href="http://www.legislation.gov.uk/ukpga/2010/15/contents"
target="_blank" rel="noreferrer noopener">Equality Act 2010</a></li>
<li><a href="https://www.gov.uk/guidance/equality-act-2010-guidance"
target="_blank" rel="noreferrer noopener">Equality Act 2010:
Guidance</a></li>
<li><a
href="http://www.seqlegal.com/blog/website-accessibility-and-equality-act-2010"
target="_blank" rel="noreferrer noopener">Website accessibility and the
Equality Act 2010</a></li>
</ul>
</div>
<p>For more about BSI efforts, watch the following video:</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=awldEoQ-aNQ"
target="_blank" rel="noopener noreferrer">BSI Documentary – Web
Accessibility World Standards Day</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-30.jpg"
title="BSI Documentary - Web accessibility - World Standards Day 14 Oct 2010"
alt="Thumbnail for the embedded element &quot;BSI Documentary - Web accessibility - World Standards Day 14 Oct 2010&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1486#pb-interactive-content"
title="BSI Documentary - Web accessibility - World Standards Day 14 Oct 2010">https://pressbooks.library.ryerson.ca/pwaa/?p=1486</a></p>
</div>
<p><span class="small">© BSI Group. Released under the terms of a
Standard YouTube License. All rights reserved.</span></p>
<h2>Europe</h2>
<p>Throughout Europe a number of countries have their own accessibility
laws, each based on WCAG 2.0. In 2010 the European Union itself
introduced web accessibility guidelines based on WCAG 2.0 Level AA
requirements. The EU Parliament passed a law in 2014 that requires all
public sector websites, and private sector websites that provide key
public services, to conform with WCAG 2.0 Level AA requirements, with
new content conforming within one year, existing content conforming
within three years, and multimedia content conforming within five
years.</p>
<p>This does not mean, however, that all countries in the EU must now
conform. The law now goes before the EU Council, where heads of state
will debate it, which promises to draw out adoption for many years into
the future, if it gets adopted at all.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<p><strong>Readings and References:</strong></p>
<ul>
<li><a
href="http://ec.europa.eu/ipg/standards/accessibility/index_en.htm"
target="_blank" rel="noreferrer noopener">The EU Internet Handbook: Web
Accessibility</a></li>
<li><a
href="http://www.etsi.org/news-events/news/754-new-european-standard-on-accessibility-requirements-for-public-procurement-of-ict-products-and-services"
target="_blank" rel="noreferrer noopener">New European Standard on
accessibility requirements for public procurement of ICT products and
services (ETSI EN 301 549)</a></li>
<li><a
href="http://mandate376.standards.eu/standard/technical-requirements/#9"
target="_blank" rel="noreferrer noopener">Standard – EN 301 549</a></li>
</ul>
</div>
<h3>Italy</h3>
<p>In Italy the Stanca Act 2004 (<span lang="it">Disposizioni per
favorire l’accesso dei soggetti disabili agli strumenti
informatici</span>) governs web accessibility requirements for all
levels of government, private firms that are licensees of public
services, public assistance and rehabilitation agencies, transport and
telecommunications companies, as well as ICT service contractors.</p>
<p>The Stanca Act has 22 technical accessibility requirements originally
based on WCAG 1.0 Level A guidelines, updated in 2013 to reflect changes
in WCAG 2.0.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<strong>Readings and References:</strong> <a
href="http://www.agid.gov.it/dm-8-luglio-2005-allegato-A#requisiti"
target="_blank" rel="noreferrer noopener">Stanca 2013 Requirements
(Italian)</a>
</div>
<h3>Germany</h3>
<p>In Germany, BITV 2.0 (<span lang="de">Barrierefreie
Informationstechnik-Verordnung</span>), which adopts WCAG 2.0 with a few
modifications, requires accessibility for all government websites at
Level AA (i.e., BITV Priority 1).</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<strong>Readings and References:</strong> <a
href="https://www.einfach-fuer-alle.de/artikel/bitv_english/bitv_annex1"
target="_blank" rel="noreferrer noopener">BITV (Appendix 1)</a>
</div>
<h3>France</h3>
<p>Accessibility requirements in France are specified in <a
href="http://www.legifrance.gouv.fr/affichTexte.do?cidTexte=JORFTEXT000000809647&amp;dateTexte="
target="_blank" rel="noreferrer noopener">Law No 2005-102, Article
47</a>, and its associated technical requirements are defined in RGAA 3
(based on WCAG 2.0). It is mandatory for all public online communication
services, public institutions, and the State, to conform with RGAA (WCAG
2.0).</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<p><strong>Readings and References:</strong></p>
<ul>
<li><a
href="http://www.legifrance.gouv.fr/affichTexteArticle.do;jsessionid=1C158CD1669658D96BFA12998D3A33FE.tpdila08v_3?idArticle=LEGIARTI000006682279&amp;cidTexte=LEGITEXT000006051257&amp;dateTexte=20151030"
target="_blank" rel="noreferrer noopener">Law No 2005-102, Article 47
(French)</a></li>
<li><a
href="https://references.modernisation.gouv.fr/rgaa-accessibilite"
target="_blank" rel="noreferrer noopener">Référentiel Général
d’Accessibilité pour les Administrations (RGAA) (French)</a></li>
</ul>
</div>
<h3>Spain</h3>
<p>The web accessibility laws in Spain are Law 34/2002 and Law 51/2003,
which require all government websites to conform with WCAG 1.0 Priority
2 guidelines. More recently UNE 139803:2012 adopts WCAG 2.0
requirements, and mandates government and government funded
organizations, as well as organizations larger than 100 employees, or
with a trading column greater than 6 million Euros, or those providing
financial, utility, travel/passenger, or retail services online to
comply with WCAG Level AA requirements.</p>
<p>(see: <a
href="http://www.webcontrol.es/en/technology/web-accessibility/legislation-in-spain"
target="_blank" rel="noreferrer noopener">Legislation in Spain</a> )</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<p><strong>Readings and References:</strong></p>
<ul>
<li><a
href="http://www.congreso.es/public_oficiales/L7/CONG/BOCG/A/A_068-13.PDF"
target="_blank" rel="noreferrer noopener">Law 34/2002 – Information
Society and Electronic Commerce Services Act PDF (Spanish)</a></li>
<li><a
href="http://www.aenor.es/aenor/normas/normas/fichanorma.asp?tipo=N&amp;codigo=N0049614#.V3FzwI5jF1N"
target="_blank" rel="noreferrer noopener">UNE 139803:2012: Web content
accessibility requirements</a> (supersedes 139803:2004)</li>
<li><a
href="http://noticias.juridicas.com/base_datos/Admin/l51-2003.html"
target="_blank" rel="noreferrer noopener">Law 51/2003 – Equality of
opportunities, non-discrimination, and universal accessibility for
people with disabilities (Spanish)</a></li>
</ul>
</div>
<h2>Australia</h2>
<div
class="show-content user_content clearfix enhanced jqueryUIWidgetized">
<p>Though not specifically referencing the Web, the Disability
Discrimination Act of 1992 section 24 makes it unlawful for a person who
provides goods, facilities or services to discriminate on the grounds of
disability. This law was tested in 2000, when a blind man successfully
sued the Sydney Organizing Committee for the Olympic Games (SOCOG) when
its website prevented him from purchasing event tickets.</p>
<p>The Australian Human Rights and Equal Opportunity Commission (HREOC)
shortly after released World Wide Web Access: Disability Discrimination
Act Advisory Notes. These were last updated in 2014 and though they do
not have direct legal force, they do provide web accessibility guidance
for Australians on how to avoid discriminatory practices when developing
web content, based on WCAG 2.0.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<strong>Readings and References:</strong> <a
href="http://www.humanrights.gov.au/world-wide-web-access-disability-discrimination-act-advisory-notes-ver-40-2010"
target="_blank" rel="noreferrer noopener">World Wide Web Access:
Disability Discrimination Act Advisory Notes</a>
</div>
<p>For more about international web accessibility laws, see the
following resources:</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<p><strong>Readings and References:</strong></p>
<ul>
<li><a href="http://jimthatcher.com/book2/chapter17.html"
target="_blank" rel="noreferrer noopener">Chapter 17 – Web Accessibility
(2006)</a></li>
<li><a href="http://www.w3.org/WAI/Policy" target="_blank"
rel="noreferrer noopener">Policies Relating to Web Accessibility
(W3C)</a></li>
<li><a
href="http://www.powermapper.com/blog/government-accessibility-standards"
target="_blank" rel="noreferrer noopener">Government accessibility
standards and WCAG 2</a></li>
<li><a href="http://webaim.org/articles/laws/world" target="_blank"
rel="noreferrer noopener">World Laws WebAIM</a></li>
</ul>
</div>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-076-atag-2-0-authoring-tool-accessibility-guidelines.xhtml"></span></p>
<article>
<div
id="chapter-076-atag-2-0-authoring-tool-accessibility-guidelines.xhtml_atag-2-0-authoring-tool-accessibility-guidelines"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">ATAG: Authoring Tool Accessibility
Guidelines</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>Authoring tools come in many forms. Some familiar
<strong>web-based</strong> examples of authoring tools include blogs
(e.g., WordPress), wikis (e.g., Mediawiki), content management systems
(e.g., Drupal), learning management systems (e.g., Canvas), document
authoring tools (e.g., Google Docs), and video production environments
(e.g., YouTube). Some other tools that are
<strong>not</strong> <strong>web-based</strong> include HTML editors
(e.g., Adobe Dreamweaver), video authoring tools (e.g., Camtasia
Studio), and document authoring tools (e.g., Microsoft Word) that are
all capable of creating content for the Web.</p>
<p>In addition to providing guidance on developing web content that is
accessible through WCAG 2.0, the Web Accessibility Initiative (WAI) has
introduced the <a href="http://www.w3.org/TR/ATAG20" target="_blank"
rel="noreferrer noopener">Authoring</a><a
href="http://www.w3.org/TR/ATAG20" target="_blank"
rel="noreferrer noopener">Too</a><a href="http://www.w3.org/TR/ATAG20"
target="_blank" rel="noreferrer noopener">l</a><a
href="http://www.w3.org/TR/ATAG20" target="_blank"
rel="noreferrer noopener">Accessibility Guidelines</a> (ATAG 2.0) which
provide guidance for web authoring tool developers to ensure that:</p>
<ol>
<li>Tools are accessible to be used by people with disabilities</li>
<li>Tools make it possible to create WCAG 2.0 conformant Web
content</li>
</ol>
<h2>Conformance</h2>
<p>ATAG 2.0 guidelines are sorted by levels of importance, much like
WCAG 2.0. Because ATAG 2.0 covers tools that are not web-based, it does
not specifically refer to “accessibility supported” <a
href="http://www.w3.org/TR/UNDERSTANDING-WCAG20/conformance.html#uc-accessibility-support-head"
target="_blank" rel="noreferrer noopener">requirements like those of
WCAG 2.0</a> because those refer to web-based strategies that are
supported by assistive technology.</p>
<p>ATAG 2.0 conformance for authoring tools is more complex than WCAG
2.0 conformance for web content, as it subsumes WCAG 2.0 and adds a
range of requirements specific to authoring tools.</p>
<p>Partial ATAG 2.0 <strong>process component conformance</strong> is
also possible in cases where additional add-on components would be
needed to claim full conformance. For example, if the tool does not
provide accessibility checking capability (a requirement for ATAG 2.0
conformance), it can claim partial conformance if it is possible to add
a plugin that provides accessibility checking. Partial conformance can
also be claimed when the platform limits compliance. For example, if a
tool runs on multiple operating systems, and conformance is possible on
one platform (e.g., Windows) that has an add-on accessibility checking
service available, but a similar service is not available for the system
run on on a different platform (e.g., Linux), a <strong>platform
limitation conformance</strong> claim can be made.</p>
<p>More details about conformance claims can be found in the ATAG 2.0
specifications itself:</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<p><strong>Readings and References: </strong> <a
href="http://www.w3.org/TR/ATAG20/#conf-claim" target="_blank"
rel="noreferrer noopener">ATAG 2.0 Conformance Claims</a></p>
</div>
<h2>ATAG 2.0 Part A</h2>
<p>Part A of ATAG 2.0 provides guidance on making the authoring tool
user interface accessible. Generally speaking, these guidelines reflect
WCAG 2.0 with the addition of accessibility requirements for tools that
are not web-based.</p>
<p>The four top level guidelines in Part A are as follows:</p>
<ul>
<li>Principle A.1: Authoring tool user interfaces follow applicable
accessibility guidelines</li>
<li>Principle A.2: Editing-views are perceivable</li>
<li>Principle A.3: Editing-views are operable</li>
<li>Principle A.4: Editing-views are understandable</li>
</ul>
<h2>ATAG 2.0 Part B</h2>
<p>Part B of ATAG 2.0 focuses on guidelines for creating tools that are
able to generate WCAG 2.0 conformant web content. It too has four top
level guidelines, and a series of sub-guidelines for each. For a full
listing of these guidelines, refer to the the full ATAG
specification.</p>
<ul>
<li>Principle B.1: Fully automatic processes produce accessible content
<ul>
<li>This set of guidelines refers to functions within the authoring tool
that automatically generate web content.
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0be">
<strong>Technical:</strong> For example, if a tool automatically
generates a basic HTML template when authoring a new page, that template
must include a DOCTYPE declaration, a proper <code>&lt;head&gt;</code>
area and <code>&lt;title&gt;</code> element, as well as a
<code>&lt;body&gt;</code> area, and it must validate based on a given
HTML specification.
</div></li>
<li>When existing content is being edited in the authoring tool, it must
provide a means to preserve any accessibility information contained
within the original content.</li>
</ul></li>
<li>Principle B.2: Authors are supported in producing accessible content
<ul>
<li>If, for example, the tool provides a means to add images, it must
also provide a means to add a text alternative, and that means must be
prominent.</li>
<li>If, for example, an image is added but no alt text has been
provided, the tool prompts the author to include it, and explains why it
is necessary.</li>
<li>If existing accessibility information is available in previously
existing content, a means is provided to edit that information.</li>
<li>The tool does not attempt to automatically repair existing
accessibility information, unless specific issues are identified, such
as default alt text like “image”.</li>
<li>Accessible templates provided by the system are identified as
such.</li>
</ul></li>
<li>Principle B.3: Authors are supported in improving the accessibility
of existing content
<ul>
<li>Tools are provided to check the accessibility of the authored
content against WCAG 2.0 or other accessibility specifications.</li>
<li>Guidance is provided where manual checking is required.</li>
<li>If issues are found, the tool provides suggestions to repair the
issues.</li>
</ul></li>
<li>Principle B.4: Authoring tools promote and integrate their
accessibility features
<ul>
<li>Accessibility features in the tool are enabled by default.</li>
<li>Tool does not have an option to turn off accessible authoring
features.</li>
<li>If accessibility features can be turned off, a warning is provided
explaining the potential dangers of doing so.</li>
<li>Documentation is provided on authoring accessible content.</li>
</ul></li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-077-uaag-2-0-user-agent-accessibility-guidelines.xhtml"></span></p>
<article>
<div
id="chapter-077-uaag-2-0-user-agent-accessibility-guidelines.xhtml_uaag-2-0-user-agent-accessibility-guidelines"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">UAAG: User Agent Accessibility Guidelines</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>In cases where you may be auditing a browser application like Chrome
or Firefox, a plugin, a web-based mobile app, or perhaps a video or
audio player like Quicktime or Windows Media Player, UAAG 2.0 (currently
in draft form) should be referenced. These guidelines are aimed
primarily at the developers of web browsers, browser extensions, and
media players, but also at assistive technology developers so they
understand the types of accessibility information to expect from UAAG
2.0 compliant user agents.</p>
<p>The UAAG 2.0 specifications are structured much like WCAG 2.0 and
ATAG 2.0 are, and include principles, guidelines, and success criteria.
Conformance levels are also much the same, with Levels A (minimum), AA
(recommended) and AAA (advanced). WCAG 2.0, ATAG 2.0, and UAAG 2.0 are a
collection of guidelines, together guiding the development of accessible
web content, tools for creating accessible web content, and tools for
viewing web content in accessible ways.</p>
<p>Though UAAG 2.0 is currently a W3C draft specification, it should be
used instead of UAAG 1.0, as it reflects the advances in web
technologies since UAAG 1.0 was released in 2002. Changes may still
occur in the specification, though these are not anticipated to be
significant.</p>
<h2>UAAG 2.0 Principles</h2>
<p>UAAG 2.0 has 5 principles:</p>
<ul>
<li>Principle 1 ensures that the user agent is
<strong>perceivable</strong>, so users can access user agent
output.</li>
<li>Principle 2 ensures that the user agent is
<strong>operable</strong>, so users can communicate with the user
agent.</li>
<li>Principle 3 ensures that the user agent is
<strong>understandable</strong>, so users know how to use the user
agent.</li>
<li>Principle 4 ensures that <strong>assistive technologies can
access</strong> user agent controls.</li>
<li>Principle 5 ensures that user agents <strong>comply with other
accessibility specifications</strong> (e.g., WCAG 2.0, ATAG 2.0) and
platform conventions (e.g., Windows, iOS, Linux, Blackberry).</li>
</ul>
<h2>UAAG 2.0 Guidelines</h2>
<p>In the primary guidelines listed below, you will see that many
directly reflect WCAG 2.0 recommendations. For example, WCAG 2.0
requires that visual elements in web content have text alternatives
(WCAG 2.0 – G1.1.1) and UAAG 2.0 requires that user agents (browsers,
etc.) provide access to those alternatives (UAAG 2.0 – G1.1).</p>
<ul>
<li>Principle 1: Perceivable
<ul>
<li>Guideline 1.1: Provide access to alternative content</li>
<li>Guideline 1.2: Repair missing content</li>
<li>Guideline 1.3: Provide highlighting for selection, keyboard focus,
enabled elements, visited links</li>
<li>Guideline 1.4: Provide text configuration</li>
<li>Guideline 1.5: Provide volume configuration</li>
<li>Guideline 1.6: Provide synthesized speech configuration</li>
<li>Guideline 1.7: Enable configuration of user stylesheets</li>
<li>Guideline 1.8: Help users to orient within, and control, windows and
viewports</li>
<li>Guideline 1.9: Provide Alternative views</li>
<li>Guideline 1.10: Provide element Information</li>
</ul></li>
<li>Principle 2: Operable
<ul>
<li>Guideline 2.1: Ensure full keyboard access</li>
<li>Guideline 2.2: Provide sequential navigation</li>
<li>Guideline 2.3: Provide direct navigation and activation</li>
<li>Guideline 2.4: Provide text search</li>
<li>Guideline 2.5: Provide structural navigation</li>
<li>Guideline 2.6: Configure and store preference settings</li>
<li>Guideline 2.7: Customize display of graphical controls</li>
<li>Guideline 2.8: Allow time-independent interaction</li>
<li>Guideline 2.9: Help users avoid flashing that could cause
seizures</li>
<li>Guideline 2.10: Provide control of time-based media</li>
<li>Guideline 2.11: Support other input devices</li>
</ul></li>
<li>Principle 3: Understandable
<ul>
<li>Guideline 3.1: Help users avoid and correct mistakes</li>
<li>Guideline 3.2: Document the user agent user interface including
accessibility features</li>
<li>Guideline 3.3: Make the user agent behave in predictable ways</li>
</ul></li>
<li>Principle 4: Programmatic access
<ul>
<li>Guideline 4.1: Facilitate programmatic access to assistive
technology</li>
</ul></li>
<li>Principle 5: Specifications and conventions
<ul>
<li>Guideline 5.1: Comply with applicable specifications and
conventions</li>
</ul></li>
</ul>
<p>For a look at the full set of UAAG 2.0 recommendations, visit the
draft specification and resources at the following links:</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<p><strong>Readings and References:</strong></p>
<ul>
<li><a href="https://www.w3.org/TR/UAAG20" target="_blank"
rel="noreferrer noopener">User Agent Accessibility Guidelines</a></li>
<li><a href="https://www.w3.org/TR/UAAG20-Reference" target="_blank"
rel="noreferrer noopener">UAAG 2.0 Reference: Explanations, Examples,
and Resources for User Agent Accessibility Guidelines 2.0</a></li>
</ul>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-078-iso-iec-24751-accessforall.xhtml"></span></p>
<article>
<div
id="chapter-078-iso-iec-24751-accessforall.xhtml_iso-iec-24751-accessforall"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">ISO/IEC-24751 (AccessForAll)</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<h2>Individualized Adaptability and Accessibility in E-Learning,
Education and Training</h2>
<p>In 2008, the ISO/IEC (International Standards
Organization/International Electrotechnical Commission) released the
initial version of the AccessForAll (AFA) standards. AFA is based on the
AccessForAll 2.0 work undertaken at the IMS Global Learning Consortium,
along with the Inclusive Design Research Centre at OCAD University in
Toronto. For those familiar with <a
href="https://en.wikipedia.org/wiki/Universal_Design_for_Learning"
target="_blank" rel="noreferrer noopener">Universal Design for Learning
(UDL) principles</a>, AFA is similar in its approach. It sets out
guidelines for developing adaptable learning content that matches how
different learners learn, often creating the same learning experience in
multiple forms.</p>
<p>The goal of AFA is to match learning content to the specific needs of
each learner and this concept is not new. Where learning content is
involved, web accessibility audits might include recommendations to
provide multiple versions of the same content, so a wider range of
people can access the content depending on their individual needs. Here
are some examples:</p>
<ul>
<li>If instructions are presented as a list of ordered steps, providing
a multimedia version demonstrating those same steps would make the
content more usable by more people.</li>
<li>Providing alt text for an image is a text adaptation for visual
content.</li>
<li>Adding captions to a video in the UDL context does not imply that
the learner has a hearing-related disability in the traditional sense,
but rather that the learner, for whatever reason, is unable to hear. For
example, one might be learning in a noisy environment and unable to hear
the audio clearly, or may be working on a system that does not have
speakers, or may be working in a place where quiet is required.</li>
</ul>
<p>In terms of evaluating web accessibility based on AccessForAll, it
may be too early to start making AFA recommendations, given very few
systems have yet implemented the standards. AFA is a rather complex set
of standards, given the range of potential needs and preferences and the
variety of ways content can be presented. The following is an overview
of the three standards that make up AccessForAll.</p>
<ul>
<li>Part 1: <strong>Framework and Reference Model</strong>
<ul>
<li>This part of AFA provides common language for describing users’
personal needs and preferences on the one hand, and describing
characteristics of digital resources on the other. This part of the
standard provides the framework for additional parts, described
below.</li>
</ul></li>
<li>Part 2: “Access for all” <strong>Personal Needs and Preferences
(PNP) for Digital Delivery</strong>
<ul>
<li>Personal Needs and Preferences describe the needs of the learner.
For example, a learner may require text alternatives for visual
elements, or require audio alternatives to textual elements, or require
sign language alternative to spoken audio, and so on. PNP does not
specifically define needs based on disability, but rather learning needs
within particular contexts. A person may define multiple PNPs that are
applied in different situations.</li>
</ul></li>
<li>Part 3: “Access for all” <strong>Digital Resource Description
(DRD)</strong>
<ul>
<li>A Digital Resource Description describes the characteristics of
learning content. A DRD can include a range of information on a
particular piece of content, including the form of the original content
as well as the adaptations of the content that are available. This
information is used to match content adaptations with learners’ specific
needs as defined in their PNP profile. If, for instance, a learner
specifies they require text alternatives with visual elements, the AFA
compliant system would identify visual elements in the content, and if
text alternatives are available and described in the DRD for that piece
of content, it would append or replace the visual content with
equivalent text.</li>
</ul></li>
</ul>
<p>Watch the following video for a demonstration of AccessForAll in
ATutor and AContent. AFA enhanced content is easily created in either
system, and easily moved between the systems.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=wOlKT63sRRg"
target="_blank" rel="noopener noreferrer">IMS common Cartridge with
AccessForAll</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-31.jpg"
title="IMS Common Cartridge with AccessForAll"
alt="Thumbnail for the embedded element &quot;IMS Common Cartridge with AccessForAll&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1510#pb-interactive-content"
title="IMS Common Cartridge with AccessForAll">https://pressbooks.library.ryerson.ca/pwaa/?p=1510</a></p>
</div>
<p><span class="small">© atutorspaces. Released under the terms of a
Creative Commons Attribution license.</span></p>
<p>The AccessForAll Standards can be downloaded from the ISO website,
for those who wish to investigate further:</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0000ff">
<p><strong>Readings and References:</strong></p>
<ul>
<li><a href="http://www.iso.org/iso/catalogue_detail?csnumber=41521"
target="_blank" rel="noreferrer noopener">ISO/IEC-24751-1 Part 1:
Framework and reference model</a></li>
<li><a href="http://www.iso.org/iso/catalogue_detail?csnumber=43603"
target="_blank" rel="noreferrer noopener">ISO/IEC-24751-2 Part 2:
“Access for all” personal needs and preferences for digital
delivery</a></li>
<li><a href="http://www.iso.org/iso/catalogue_detail?csnumber=43604"
target="_blank" rel="noreferrer noopener">ISO/IEC-24751-3 Part 3:
“Access for all” digital resource description</a></li>
<li><a href="https://www.imsglobal.org/activity/accessibility"
target="_blank" rel="noreferrer noopener">IMS Global Learning Consortium
– AccessForAll</a></li>
</ul>
</div>
<div
style="margin: 1em 0px;padding: 1em;border-width: 1px 1px 1px 10px;border-style: solid;border-color: #dddddd #dddddd #dddddd #bb99ff">
<strong>Try This:</strong> If you would like to experience AccessForAll
firsthand, <strong><a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/AFA_Activity.pdf"
target="" rel="noopener noreferrer" title="AFA_Activity.pdf">download
the Optional AccessForAll Activity</a>,</strong> for a look at how the
ATutor learning management system has implemented Personal Needs and
Preferences, and Digital Resource Descriptions.<strong><br />
</strong>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-079-wai-aria-web-accessibility-initiative-accessible-rich-internet-applications.xhtml"></span></p>
<article>
<div
id="chapter-079-wai-aria-web-accessibility-initiative-accessible-rich-internet-applications.xhtml_wai-aria-web-accessibility-initiative-accessible-rich-internet-applications"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">WAI-ARIA: Web Accessibility Initiative -
Accessible Rich Internet Applications</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p>WAI-ARIA is perhaps the most significant web accessibility technology
to come along since the introduction of WCAG 1.0. It allows developers
of web applications or custom web interactivity to define specific
roles, states, and properties for custom made interactions that
assistive technologies are able to understand. <strong>Though WAI-ARIA
is aimed primarily at developers, others should at least understand
where and when it gets used.</strong></p>
<p>WAI-ARIA is a W3C specification that defines a collection of
attributes that can be used within HTML elements to add semantic
information. For example, a developer may want to create a navigation
menu, often using HTML list markup to structure the menu items and
JavaScript to control which elements of the menu to display at any given
time. Without using WAI-ARIA, such a menu may be accessible in the sense
that an AT user could navigate through its elements and open menu items,
but they will be announced by the AT as a collection of nested lists. By
adding ARIA menu roles to these list elements, AT will announce them as
parts of a menu, whether they are opened or closed, and whether they
have submenus, and so on.</p>
<p>When auditing custom web interactivity, a screen reader like
ChromeVox should be used to navigate through a tool or widget to
determine whether WAI-ARIA has been used to add roles, states and
properties to the feature. You can also examine the code using the
Inspect tool in various browsers, to see what ARIA is being used to
operate the tool and watch the ARIA update dynamically, as states and
properties change. In audit reports, recommendations can be made to use
ARIA to make elements more meaningful, thus more usable by AT users.
Refer to Guideline 4.1.2 (Level A).</p>
<p>The full WAI-ARIA specification and WAI-ARIA authoring practices can
be found on the W3C website. At least scan through these documents to
familiarize yourself with their contents so you can refer back to them
in your audits when making ARIA related recommendations.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<p><strong>Toolkit:</strong> Bookmark these two documents to add them to
your tool kit.</p>
<ul>
<li><a href="https://www.w3.org/TR/wai-aria-1.1">Accessible Rich
Internet Applications (WAI-ARIA 1.1)</a></li>
<li><a href="http://www.w3.org/TR/wai-aria-practices">WAI-ARIA Authoring
Practices</a></li>
</ul>
</div>
<h2>WAI-ARIA in Action</h2>
<p>The following is an HTML excerpt from a large main navigation menu
that has been marked up with WAI-ARIA. The markup contains the basic
ARIA attributes used to create an AT usable main menu. Read through the
comments in the box below, and examine the markup it describes to
develop your understanding of how WIA-ARIA is used.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0be">
<p><strong>Technical:</strong> An example of a main menu created with
HTML unordered list markup.</p>
<p>The first line of markup below creates a container around the menu,
gives it a role of navigation, is describe with the text in the
menu_keys span element below referenced using aria-describedby, and is
made keyboard focusable with <code>tabindex="0"</code>. When accessed
with a screen reader, it announces itself as navigation and describes to
the user how to navigate through the menu.</p>
<p> </p>
<pre><code>&lt;div role=&quot;navigation&quot; aria-describedby=&quot;menu_keys&quot; tabindex=&quot;0&quot;&gt;
&lt;span id=&quot;menu_keys&quot; style=&quot;font-size:0;&quot;&gt;
 Main Menu: Use arrow keys to move left and right and 
 up and down through menus
&lt;/span&gt;</code></pre>
<p>The menu itself is a basic nested unordered list. JavaScript injects
the ARIA dynamically. The ULs are given a role of menubar, list items
are given a role of menuitem. Where a nested list occurs ( which is a
submenu) aria-haspopout is set to true to indicate to the screen reader
that a submenu is present. The aria-activedescendant is set to the ID of
the parent element of the submenu that currently has focus.</p>
<p> </p>
<pre><code>&lt;ul id=&quot;nav&quot; role=&quot;menubar&quot; aria-describedby=&quot;menukeys&quot;&gt;
&lt;li role=&quot;menuitem&quot;&gt;Home &lt;/li&gt;
&lt;li id=&quot;activeItem&quot; role=&quot;menuitem&quot; aria-haspopout=&quot;true&quot;&gt;
  Courses and Programs
  &lt;ul role=&quot;menubar&quot; aria-activedescendant=&quot;activeItem&quot;&gt;
	&lt;li role=&quot;menuitem&quot; aria-haspopout=&quot;true&quot;&gt;Areas of Interest
	  &lt;ul&gt;
            &lt;li role=&quot;menuitem&quot;&gt;Information Technology&lt;/li&gt;
		&lt;li role=&quot;menuitem&quot;&gt;Communication and Media&lt;/li&gt;
		&lt;li role=&quot;menuitem&quot;&gt;Business Systems and Strategies&lt;/li&gt;
		…
	 &lt;/ul&gt;
	&lt;/li&gt;
   …
  &lt;/ul&gt;
&lt;/li&gt;
…
&lt;/ul&gt;
&lt;/div&gt;</code></pre>
</div>
<p>To see the menu in action, view the following video. Listen closely
to how the menu is announced by ChromeVox.</p>
<p><strong>Video: <a href="https://www.youtube.com/watch?v=ra0ku-xBWPM"
target="_blank" rel="noopener noreferrer">WIA-ARIA Main
Navigation</a></strong></p>
<div class="textbox interactive-content interactive-content--oembed">
<img src="OEBPS/assets/hqdefault-32.jpg"
title="WIA-ARIA Main Navigation"
alt="Thumbnail for the embedded element &quot;WIA-ARIA Main Navigation&quot;" />
<p>A YouTube element has been excluded from this version of the text.
You can view it online here: <a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1512#pb-interactive-content"
title="WIA-ARIA Main Navigation">https://pressbooks.library.ryerson.ca/pwaa/?p=1512</a></p>
</div>
<p>The menu in the video above uses the MooTools accessible dropdown
menu scripts to inject the appropriate ARIA attributes when they are
needed. Fortunately many of the common interactions, like menus,
accordions, and tabpanels for instance, have open source scripts
available to quickly add in the appropriate ARIA.</p>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<strong>Toolkit:</strong> Bookmark the open source <strong><a
href="https://de.ryerson.ca/wa/aria" target="_blank"
rel="noopener noreferrer">WAI-ARIA Examples</a></strong> used in ARIA
workshops for developers at Ryerson University. These examples can be
referred to when making recommendations where ARIA is needed in web
accessibility audits.
</div>
<h2>When to Use ARIA</h2>
<p>Though ARIA is a necessity for developers who create custom
interactivity for the Web, there are times when it should and should not
be used.</p>
<p>Do use ARIA:</p>
<ul>
<li>When HTML is being used in a non-standard way (e.g., making a
checkbox out of a div)</li>
<li>When within page navigation is needed (use ARIA landmarks)</li>
<li>When creating web widgets like sliders, datepickers, tooltips,
tabpanels, accordions, etc.</li>
</ul>
<p>Do not use ARIA:</p>
<ul>
<li>When there is a way to create the same interactivity with standard
HTML</li>
<li>When HTML is being used in a standard way (e.g., an HTML form does
not need role=“form” added because it has that role by default)</li>
</ul>
<h2>Key ARIA Attributes</h2>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #0be">
<p><strong>Technical: </strong>Here are some WAI-ARIA attributes that
are used often and are relatively easy to understand.</p>
<h2>aria-describedby</h2>
<p>This attribute is very useful for adding instructions or descriptions
of web elements for AT users. In the menu example above,
aria-describedby is used to provide instructions on using the menu, in
that case referencing a hidden span element containing a description of
keyboard navigation.</p>
<p>It could also be used to provide extra information about a particular
feature, such as describing the format for a password form field. If the
password must include numbers, letters, and special characters, that
text might be positioned after the password field in a span element and
through its ID attribute, referenced using aria-describedby in the input
element for the password field. With the example markup below, a screen
reader would announce the label for the password field, followed by
format for the password. Without referencing the format span element,
this information may go unnoticed by AT users.</p>
<p> </p>
<pre><code>&lt;label for=&quot;pass&quot;&gt;Password&lt;/label&gt;
&lt;input type=&quot;password&quot; id=&quot;pass&quot; aria-describedby=&quot;format&quot;&gt;
&lt;span id=&quot;format&quot;&gt;
 must contain numbers, letters, and special characters
&lt;/span&gt;</code></pre>
<h2>aria-live vs. alert role</h2>
<p>The aria-live attribute, often referred to as a live region, must be
used in places where information is dynamically updating on a page,
without the page itself reloading. Otherwise AT users are unlikely to
notice that changes are occurring. The aria-live attribute can be set to
“polite,” as seen in the code snippet below, in which case a screen
reader will wait until a break in the screen reader’s output to read the
content. Or, aria-live can be set to “assertive” in which case a screen
reader will interrupt whatever is being read to read the changes within
the live region. Live regions are useful for things like news feeds
(e.g., Twitter or news sites), live chat applications, social media
streams, rotating banners or other kinds of auto-updating
information.</p>
<p> </p>
<pre><code>&lt;div id=&quot;news_feed&quot; aria-live=&quot;polite&quot;&gt;
 //updating content goes here
&lt;/div&gt;</code></pre>
<p>On the other hand, the <code>role="alert"</code> attribute, often
called an ARIA alert, is a special type of assertive live region, that
should be used in places where feedback is being presented. If, for
example, a required field in a form is left empty, and an error message
is injected immediately below the field to indicate the error (like that
in the code snippet below), these types of feedback messages are good
candidates for ARIA alerts. Otherwise such messages may go unnoticed by
AT users. Or, after successfully submitting a form to register, for
instance, the message that appears on the page after submitting the form
indicating the registration was successful, would also be a good
candidate for an ARIA alert.</p>
<p> </p>
<pre><code>&lt;div id=&quot;username_feedback&quot; role=&quot;alert&quot;&gt;
 &lt;p style=&quot;color:red;&quot;&gt;Username field cannot be empty.&lt;/p&gt;
&lt;/div&gt;</code></pre>
<h2>roles and landmarks</h2>
<p>ARIA provides a whole range of roles that can be used to assign a
functional application to particular HTML elements. You have already
been introduced to the the “alert” role, and the roles associated with a
navigation menu.</p>
<p>There is a particular set of roles that are referred to as landmarks.
These should be used carefully throughout a user interface to define
regions throughout that UI. Screen readers are able to list these
landmarks and users can jump to any one of them to navigate directly to
a relevant area of a page.</p>
<p>Where landmarks are used, all areas of a page should be contained
within a landmarked region. These regions, introduced back in Unit 2
(2.4.1 Provide Ways to Navigate), are presented again here:</p>
<p>Full list of landmark roles:</p>
<ul>
<li><strong>banner:</strong> Associated with the header area of a page.
There should only be one banner landmark per page.</li>
<li><strong>complementary:</strong> A section of content that
complements the main content but also retains its meaning when separated
from the main content. Often used with a region containing advertising
or promo items aligned down the right side of the page. There can be
multiple areas defined as complementary.</li>
<li><strong>contentinfo:</strong> Contains the content usually found in
the footer of a page, like copyright and privacy statements. There
should only be one contentinfo landmark per page.</li>
<li><strong>form:</strong> Contains form input elements that can be
edited and submitted by the user. Multiple elements can have the form
role.</li>
<li><strong>main:</strong> The main content of the page. There should
only be one main landmark per page.</li>
<li><strong>navigation:</strong> A collection of navigation links used
to navigate the site or page. There can be multiple elements with the
role navigation.</li>
<li><strong>search:</strong> A search tool.</li>
<li><strong>application:</strong> Represents a unique functional unit,
and keyboard commands are handled by the application rather than the
browser or the assistive technology itself. An embedded movie player, a
calendar widget, or other customized software embedded in web content
are examples where the application role might be used. This role should
be used sparingly as it can create some confusion for screen reader
users when key commands begin working differently.</li>
</ul>
<h2>tabindex</h2>
<p>Though the HTML <code>tabindex</code> attribute has been around since
HTML4, for use with specific HTML elements, with HTML5 it can be used
with any element to add keyboard focus to elements that do not normally
receive focus, using <code>tabindex="0"</code>.</p>
<p>In the code for the menu above, you will notice tabindex in the
opening div element. Normally divs do not receive keyboard focus. In the
case of the menu, adding focus to the container div is needed for the
description referred to by aria-describedby to be read. When the div
receives focus, the screen reader will announce “Main Menu: Use arrow
keys to move left and right and up and down through menus.”</p>
<h2>aria-expanded</h2>
<p>The <code>aria-expanded</code> state is used for menus that have
toggles to open and close submenus, and also to inform AT users whether
a menu item has a submenu, and whether that submenu is open or not.</p>
<p>The following markup is from a side menu, with toggles to open and
close sections of the menu. You will notice that aria-expanded is set to
true, indicating to AT that a submenu is open following this element. If
the submenu were closed, aria-expanded would be set to false, updated
dynamically by the JavaScript that controls interactivity of the side
menu.</p>
<p> </p>
<pre><code>&lt;span id=&quot;acc_tab_2170&quot;
 class=&quot;navtoggler active&quot;
 tabindex=&quot;0&quot;
 aria-expanded=&quot;true&quot;
 role=&quot;tab&quot;
 aria-selected=&quot;false&quot;&gt;
 Archived Calendars
&lt;/span&gt;</code></pre>
<h2>aria-label</h2>
<p>When forms are formatted in a way that prevents the use of the HTML
label element to explicitly associate a label with a form field, only
then should aria-label be used to label the form element. If label can
be used, it should be used instead of the ARIA version.</p>
<p>A good example of a case where aria-label might be used is on a
search form. These forms usually do not include a label element.</p>
<pre><code>&lt;form&gt;
 &lt;input type=&quot;text&quot; id=&quot;search&quot; aria-label=&quot;Enter search terms&quot; /&gt;
&lt;/form&gt;</code></pre>
<h2>aria-labeledby</h2>
<p>This attribute can be used with non-standard forms to associate a
label or multiple labels with a form field. For example, you may have a
data entry form laid out in a table, like that in the figure below, in
which the content of the table header cells provides labels for multiple
input fields.</p>
<p>Consider the following table, in which the content of the header
cells provides labels for each form input field in the column below. In
the markup that follows the figure, you can see how aria-labelledby has
been used to assign the values in the header cells as labels for each
form element.</p>
<table style="width: 100%">
<colgroup>
<col style="width: 33%" />
<col style="width: 33%" />
<col style="width: 33%" />
</colgroup>
<tbody>
<tr class="header" style="font-weight: bold">
<th style="width: 33%">Name</th>
<th style="width: 33%">Email</th>
<th style="width: 33%">Login</th>
</tr>

<tr class="odd">
<td><div
style="padding: 0.2em;text-align: left;border: 1px solid black;height: 30px">
John Smith
</div></td>
<td><div
style="padding: 0.2em;text-align: left;border: 1px solid black;height: 30px">
js@smail.com
</div></td>
<td><div
style="padding: 0.2em;text-align: left;border: 1px solid black;height: 30px">
jsmith
</div></td>
</tr>
<tr class="even">
<td></td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Figure: A table used to layout a data entry
form.</strong></p>
<p> </p>
<pre><code>&lt;table&gt;
 &lt;tr&gt;
   &lt;th id=&quot;name_label&quot;&gt;Name&lt;/th&gt;
   &lt;th id=&quot;email_label&quot;&gt;Email&lt;/th&gt;
   &lt;th id=&quot;login_label&quot;&gt;Login&lt;/th&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
   &lt;td&gt;&lt;input type=&quot;text&quot; id=&quot;name&quot; aria-labelledby=&quot;name_label&quot;/&gt;&lt;/td&gt;
   &lt;td&gt;&lt;input type=&quot;text&quot; id=&quot;email&quot; aria-labelledby=&quot;email_label&quot;/&gt;&lt;/td&gt;
   &lt;td&gt;&lt;input type=&quot;text&quot; id=&quot;loginl&quot; aria-labelledby=&quot;login_label&quot;/&gt;&lt;/td&gt;
 &lt;/tr&gt;
…
&lt;/table&gt;</code></pre>
<p>If there is the option to use the label element over using
aria-labelledby, then label should be used. If both label and
aria-labelledby are used on the same input element, aria-labelledby will
override the label.</p>
</div>
<p> </p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="chapter-080-activity-web-accessibility-in-your-part-of-the-world.xhtml"></span></p>
<article>
<div
id="chapter-080-activity-web-accessibility-in-your-part-of-the-world.xhtml_activity-web-accessibility-in-your-part-of-the-world"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Activity: Web Accessibility in Your Part of
the World</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<p><img src="OEBPS/assets/activity-2.png"
class="size-full wp-image-161 alignright" width="125"
height="131" />Spend a few moments researching relevant (if any) web
accessibility compliance requirements in the jurisdiction where you
live.</p>
<p> </p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="chapter-081-self-test-8.xhtml"></span></p>
<article>
<div id="chapter-081-self-test-8.xhtml_self-test-8"
class="chapter standard">
<div class="chapter-title-wrap">
<h3 class="chapter-number"></h3>
<h2 class="chapter-title">Self-Test 8</h2>
</div>
<div class="ugc chapter-ugc">
<div>
<!-- pb_fixme -->
<div class="print">
<section class="bcc-box bcc-info">
<h4><strong>Question 1</strong></h4>
<div>
<strong>Match the following accessibility rules and regulations with
their respective jurisdictions:</strong>
</div>
<ol type="a">
<li>Ontario</li>
<li>USA</li>
<li>United Kingdom</li>
<li>Italy</li>
<li>France</li>
<li>Australia</li>
</ol>
<ol type="i">
<li>Section 508</li>
<li>Disability Discrimination Act 1992</li>
<li>AODA</li>
<li>Stanca Act</li>
<li>Disability Discrimination Act 1995</li>
<li>RGAA</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 2</strong></h4>
<p><strong>Which of the following are elements of the ISO/IEC 24751
AccessForAll Standards? Please select all that apply.</strong></p>
<ol type="a">
<li>Personal Needs and Preferences</li>
<li>Accessible Rich Internet Applications</li>
<li>Hypertext Markup Language</li>
<li>Digital Resource Descriptions</li>
<li>Extensible Markup Language</li>
<li>Accessibility Evaluation and Repair</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h4><strong>Question 3</strong></h4>
<p><strong>Which of the following are W3C specifications? Please select
all that apply.</strong></p>
<ol type="a">
<li>WAI-ARIA</li>
<li>ATAG</li>
<li>ISO/IEC 24751</li>
<li>UAAG</li>
<li>WCAG</li>
<li>RGAA</li>
</ol>
</section>
<p><a href="#back-matter-003-answers.xhtml#answers-self-8">Answers to
Self-Test 8</a></p>
</div>
<p> </p>
<div class="textbox interactive-content">
<span class="interactive-content__icon"></span>
<p>An interactive or media element has been excluded from this version
of the text. You can view it online here:<br />
<a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=1524#pb-interactive-content"
title="Self-Test: Unit 8">https://pressbooks.library.ryerson.ca/pwaa/?p=1524</a></p>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="back-matter-001-book-recap.xhtml"></span></p>
<article>
<div id="back-matter-001-book-recap.xhtml_book-recap"
class="back-matter miscellaneous">
<div class="back-matter-title-wrap">
<h3 class="back-matter-number">1</h3>
<h1 class="back-matter-title">Content Recap</h1>
</div>
<div class="ugc back-matter-ugc">
<div>
<!-- pb_fixme -->
<p><strong>Congratulations!</strong> You have reached the end.</p>
<p>The goal of Professional Web Accessibility Auditing Made Easy has
been to build your knowledge and develop your skills so you will be able
to:</p>
<ul>
<li>Audit the accessibility of websites</li>
<li>Report issues and make informed recommendations</li>
<li>Understand thoroughly the aspects of web accessibility</li>
</ul>
<h2>Unit 1: Aspects of Web Accessibility Auditing</h2>
<p><strong>Unit 1</strong> provided <strong>an overview</strong> of the
many aspects of web accessibility auditing, creating a foundation that
the rest of the materials here are built upon. You started assembling
your <strong>Web Accessibility Auditing Toolkit</strong>, which would
grow into a collection of tools, references, and resources to support
your accessibility auditing activities.</p>
<h2>Unit 2: Introduction to WCAG 2.0</h2>
<p><strong>Unit 2</strong> introduced you to the W3C Web Content
Accessibility Guidelines (WCAG 2.0). First the <strong>four
principles</strong> were introduced, which state that web content must
be: Perceivable, Operable, Understandable, and Robust. You were also
introduced to <strong>conformance levels</strong> and <strong>success
criteria</strong>: Level A are criteria that <strong>must</strong> be
addressed or barriers will be created; Level AA are criteria that
<strong>should</strong> be addressed or content will be difficult to use
for some; and Level AAA are criteria that <strong>could</strong> be
addressed to improve usability further. With that in mind, the
<strong>10 Key Guidelines</strong> were introduced to familiarize you
with the more common accessibility issues found in web content.</p>
<h2>Unit 3: Automated Testing Tools</h2>
<p><strong>Unit 3</strong> covered a variety of automated tools that
support web auditing activities. First, the AChecker and WAVE
<strong>accessibility checkers</strong> were compared, and a variety of
other similar tools were introduced for you to explore. You were also
introduced to tools for <strong>evaluating colour contrast</strong>, for
<strong>validating HTML markup</strong>, and for determining the
<strong>reading level </strong>that visitors to a website would need to
effectively understand the content.</p>
<h2>Unit 4: Manual Testing Strategies</h2>
<p><strong>Unit 4</strong> introduced a number of <strong>manual test
strategies</strong> that complement automated tests, and assistive
technology reviews. You were introduced to the <strong>Tab
Navigation</strong> and the <strong>Select All</strong> tests, useful
for quickly identifying keyboard accessibility issues and other
potential barriers. Tools such as <strong>Developer Tools</strong> were
introduced as a means of <strong>examining HTML markup</strong> to help
identify specific issues in the code of a website.</p>
<h2>Unit 5: Assistive Technology Testing</h2>
<p><strong>Unit 5</strong> looked at <strong>Assistive
Technologies(AT)</strong>, focusing on getting set up with
<strong>ChromeVox</strong> as a tool for doing day-to-day screen reader
testing. You also learned about other popular screen readers like
<strong>JAWS, NVDA, and VoiceOver</strong>, as well as other types of AT
such as <strong>magnification</strong> programs, <strong>voice
recognition</strong>, and <strong>alternative input
devices</strong>.</p>
<h2>Unit 6: User Testing</h2>
<p><strong>Unit 6</strong> showed us aspects of web accessibility that
go beyond the typical web accessibility audit, addressing considerations
associated with <strong>user testing</strong>. User testing can provide
valuable information about the <strong>usability of web
content</strong>, though there are a number
of <strong>considerations</strong> that must be addressed when
<strong>selecting user testers</strong> (such as <strong>experience with
web content</strong> and level of <strong>assistive technology
expertise</strong>) to ensure results are meaningful. Strategies were
also introduced for developing <strong>user testing protocols</strong>,
and <strong>observing and recording</strong> testers’ behaviours during
user testing sessions.</p>
<h2>Unit 7: Web Accessibility Audit Reporting</h2>
<p><strong>Unit 7</strong> explored the next step in the auditing
process after testing: <strong>accessibility reporting</strong>.
Different <strong>types of audit reports</strong> were covered,
including Informal, Template, General, and Detailed reports, each of
which serve different purposes depending on the needs of the
organization and the type of web content being reviewed. You took a
<strong>tour of the Canvas 2012 General Review</strong>, which
introduced the elements of an accessibility audit report.</p>
<h2>Unit 8: Other Accessibility Standards</h2>
<p><strong>Unit 8</strong> built on what you learned about accessibility
guidelines in Unit 2, introducing <strong>international standards and
regulations based on WCAG 2.0</strong>. You were also introduced to
other types of accessibility standards for <strong>authoring tools(ATAG
2.0)</strong>, <strong>user agents</strong> such as browsers and
assistive technologies <strong>(UAAG 2.0)</strong>, and
<strong>WAI-ARIA</strong>, which provides tools developers can use to
create accessible custom web interactions.</p>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="back-matter-002-acknowledgements.xhtml"></span></p>
<article>
<div id="back-matter-002-acknowledgements.xhtml_acknowledgements"
class="back-matter miscellaneous">
<div class="back-matter-title-wrap">
<h3 class="back-matter-number">2</h3>
<h1 class="back-matter-title">Acknowledgements</h1>
</div>
<div class="ugc back-matter-ugc">
<div>
<!-- pb_fixme -->
<p>This resource has been made possible with the help of many
others.</p>
<p>Funding for this project was provided by the Government of Ontario’s
Enabling Change Program.</p>
<p>Human resources were provided by the Digital Education Strategies
team at the G. Raymond Chang School for Continuing Education at Ryerson
University in Toronto, Canada, including an instructional designer, web
developer, and production editor. Contributors include:</p>
<ul>
<li>Greg Gay (Subject Matter Expert)</li>
<li>Maureen Glynn (Instructional Designer)</li>
<li>Kelvin Kong (Production Editor)</li>
<li>Igor Karasyov (Web Developer)</li>
<li>Marta Kule (Web Technology Analyst)</li>
</ul>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span id="back-matter-003-answers.xhtml"></span></p>
<article>
<div id="back-matter-003-answers.xhtml_answers"
class="back-matter appendix">
<div class="back-matter-title-wrap">
<h3 class="back-matter-number">3</h3>
<h1 class="back-matter-title">Answer Key</h1>
</div>
<div class="ugc back-matter-ugc">
<div>
<!-- pb_fixme -->
<div>
<span id="back-matter-003-answers.xhtml_answers-self-1"></span>
</div>
<h2>Self-Test 1</h2>
<section class="bcc-box bcc-info">
<h3>Question 1</h3>
<p><strong>Which of the following are automated accessibility checkers
not good at identifying? Please select all that apply.</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[incorrect] missing text
descriptions</span></li>
<li><span style="background-color: #ccffcc">[correct] if link text
effectively describes the function or destination of the
link</span></li>
<li><span style="background-color: #ccffcc">[correct] whether alt text
describes an image effectively </span></li>
<li><span style="background-color: #ccffcc">[correct] whether
alternatives are provided for inaccessible elements</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] if a web page
has a title or not</span></li>
<li><span style="background-color: #ccffcc">[correct] whether the title
effectively describes a web page</span></li>
</ol>
<p><strong>Feedback:</strong> Checkers are not good at assessing
meaning, such as the meaningfulness of link text, image descriptions, or
page titles. They are good at identifying issues that can be determined
by searching the HTML code for missing elements or attributes, like the
lack of an alt attribute with an image, or a title element with no
content in it.</p>
</section>
<section class="bcc-box bcc-info">
<h3>Question 2</h3>
<p><strong>Which of the following groups of people with disabilities are
least likely to face barriers in web content? People who:</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[incorrect] are
Deaf</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] are
blind</span></li>
<li><span style="background-color: #ccffcc">[correct] use a
wheelchair</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] have limited
hand mobility</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] are learning
disabled</span></li>
</ol>
<p><strong>Feedback:</strong> People who use a wheelchair will often
face no barriers in web content, assuming they have use of their
hands.</p>
</section>
<section class="bcc-box bcc-info">
<h3>Question 3</h3>
<p><strong>Which of the following were mentioned as key things to watch
for when auditing the accessibility of web content? Please select all
that apply.</strong></p>
<ol type="a">
<li><span style="background-color: #ccffcc">[correct] images without a
text alternative</span></li>
<li><span style="background-color: #ccffcc">[correct] elements that work
with a mouse but not with a keyboard</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] text too complex
for some to understand</span></li>
<li><span style="background-color: #ccffcc">[correct] using bold large
text to create headings</span></li>
<li><span style="background-color: #ccffcc">[correct] using text and
background colours that do not contrast well</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] elements that
flash or flicker</span></li>
</ol>
<p><strong>Feedback:</strong> Missing text alternatives for images,
elements that lack keyboard access, headings created using bold text
instead of proper heading markup, and text that does not contrast well
with its background are common barriers thus have been listed as key
issues to watch for. Text that is too complex is less frequent and is a
less critical Level AAA issue, and content that flashes or flickers is
uncommon, so these have not been listed as key issues. These latter
issues should still be considered, however.</p>
<p><a href="#chapter-017-self-test-1.xhtml">Back to Self-Test 1</a></p>
</section>
<div>
<span id="back-matter-003-answers.xhtml_answers-activity-2"></span>
</div>
<section class="textbox">
<h2>Activity: WCAG Scavenger Hunt</h2>
<p>In typical circumstances, the following techniques are generally most
relevant. However, others are possibly better in different situations.
Likewise, there are some techniques that may be listed with the relevant
guideline for a particular barrier that are not relevant to the barrier
being addressed (FLASH and SL techniques for instance).</p>
<ol>
<li><strong>Barrier: Image has no text alternative</strong><br />
Technique ID: H37: Using alt attributes on img elements</li>
<li><strong>Barrier: Video has no captions</strong><br />
Technique ID: G87: Providing closed captions</li>
<li><strong>Barrier: Colour is used on its own to represent
meaning</strong><br />
Technique ID: G182: Ensuring that additional visual cues are available
when text color differences are used to convey information</li>
<li><strong>Barrier: Contrast between text and background colours is
insufficient (&lt;4.5:1)</strong><br />
Technique ID: G18: Ensuring that a contrast ratio of at least 4.5:1
exists between text (and images of text) and background behind the
text</li>
<li><strong>Barrier: Form button is not keyboard operable</strong><br />
Technique ID: H91: Using HTML form controls and links</li>
<li><strong>Barrier: Page redirects to another before contents can be
read</strong><br />
Technique ID: G198: Providing a way for the user to turn the time limit
off</li>
<li><strong>Barrier: Webpage does not have a descriptive
title</strong><br />
Technique ID: H25: Providing a title using the title element</li>
<li><strong>Barrier: No means is provided to skip past large main menu
on a webpage</strong><br />
Technique ID: G1: Adding a link at the top of each page that goes
directly to the main content area</li>
<li><strong>Barrier: The language of a page is not
defined</strong><br />
Technique ID: H57: Using language attributes on the html element</li>
<li><strong>Barrier: Page redirects when a form radio button receives
focus</strong><br />
Technique ID: G107: Using “activate” rather than “focus” as a trigger
for changes of context</li>
</ol>
<p><a href="#chapter-025-activity-wcag-scavenger-hunt.xhtml">Back to
Activity</a></p>
</section>
<div>
<span id="back-matter-003-answers.xhtml_answers-self-2"></span>
</div>
<h2>Self-Test 2</h2>
<div class="item_details">
<section class="bcc-box bcc-info">
<h3>Question 1</h3>
<p><strong>Which WCAG 2.0 level of conformance is considered the
generally agreed upon level that organizations should aim for when
addressing the accessibility of their websites?</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[inco<span
style="background-color: #ffcc99"><span
style="background-color: #ffb5b5">rrect] </span></span>Level
A</span></li>
<li><span style="background-color: #ccffcc">[correct] Level
AA</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Level
AAA</span></li>
</ol>
<p><strong>Feedback:</strong> Most jurisdictions now suggest aiming for
Level AA conformance for web content. And, where feasible, organizations
should implement as many Level AAA strategies as possible.</p>
</section>
<section class="bcc-box bcc-info">
<h3>Question 2</h3>
<p><strong>Which TWO of these guidelines are considered the most
important in terms of reducing the greatest number of potential
barriers, according to “10 Key Guidelines” introduced in unit
2?</strong></p>
<ol type="a">
<li><span style="background-color: #ccffcc">[correct] 1.1.1 Non-Text
Content</span></li>
<li><span style="background-color: #ccffcc">[correct] 2.1.1 Keyboard
Accessible</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] 2.4.1 Bypass
Blocks</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] 3.1.1 Language
of Page</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] 3.1.5 Reading
Level</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] 4.1
Parsing</span></li>
</ol>
<p><strong>Feedback:</strong> As described in the 10 Key Guidelines,
providing text alternatives for Non-Text Content and ensuring that all
functional elements are Keyboard Accessible will reduce the greatest
number of potential barriers.</p>
</section>
<section class="bcc-box bcc-info">
<h3>Question 3</h3>
<p><strong>Which of the following are NOT principles of WCAG 2.0? Please
select all that apply.</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[incorrect]
Perceivable</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
Operable</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
Understandable</span></li>
<li><span style="background-color: #ccffcc">[correct]
Reproducible</span></li>
<li><span style="background-color: #ccffcc">[correct]
Predictable</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
Robust</span></li>
</ol>
<p><strong>Feedback:</strong> The four WCAG 2.0 principles are:
Perceivable, Operable, Understandable, and Robust. Reproducible and
Predictable are not WCAG 2.0 principles.</p>
<p><a href="#chapter-026-self-test-2.xhtml">Back to Self-Test 2</a></p>
</section>
<p> </p>
<div>
<span id="back-matter-003-answers.xhtml_answers-self-3"></span>
</div>
<h2>Self-Test 3</h2>
</div>
<section class="bcc-box bcc-info">
<h3>Question 1</h3>
<p> </p>
<p><strong>Identify which pairs of foreground and background colours
provide sufficient contrast to pass Guideline 1.4.3. Assume the
foreground text is a 12 point font.</strong></p>
<ol type="a">
<li><span style="background-color: #ccffcc">[correct] 0000ff,
ffffff</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
9a9aff,efefef</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
9a9aff,7a4fef</span></li>
<li><span style="background-color: #ccffcc">[correct] 000000,
8f6bf1</span></li>
<li><span style="background-color: #ccffcc">[correct] 5c5c5c,
63f1af</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
4c4c4c,11c973</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] 4d4d4d,
c9a1c1</span></li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h3>Question 2</h3>
<p><strong>The overall reading grade level required to effectively
understand the paragraph.</strong></p>
<p><strong>“Though reading level is a Level AAA requirement in WCAG,
this is one Level AAA guideline that most public sites should aim for to
reach the broadest possible audience. Generally speaking web content
authors should use the simplest language possible (within reason).
Simple text will translate more easily for those who may wish to read
the site in a different language. It will be more accessible to those
with lower levels of education, or for those reading in a second
language. And for a general audience, most readers will appreciate
simpler language over unnecessary use of ‘big’ words. Being able to
explain things in simple language for most, is a more intelligent use of
language than loading it with jargon, complex terminology, and
unnecessarily complicated words and sentences.”</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[incorrect] 6 to
7</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] 8 to
9</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] 10 to
11</span></li>
<li><span style="background-color: #ccffcc">[correct] 12 to
13</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] 14 to
15</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] 16 to
17</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] 18 to
19</span></li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h3>Question 3</h3>
<p><strong>The difference between the number of known problems
identified in AChecker and the number of errors identified by
WAVE?</strong></p>
<ol type="a">
<li><span style="background-color: #ccffcc">[correct] none</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] one</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] two</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
three</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] four</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] five</span></li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h3>Question 4</h3>
<p><strong>Based on the evaluations that you did in the Question 3,
which of the following issues did both checkers identify? Please select
all that apply.</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[incorrect] missing form
label</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] headings used
improperly</span></li>
<li><span style="background-color: #ccffcc">[correct] image missing alt
text</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] colour contrast
is insufficient</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] link text may
not be meaningful</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] duplicate IDs
were found</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] image may
contain text that is not in the alt text</span></li>
</ol>
<p><a href="#chapter-037-self-test-3.xhtml">Back to Self-Test 3</a></p>
</section>
<div>
<div>
<span id="back-matter-003-answers.xhtml_answers-self-4"></span>
</div>
<h2>Self-Test 4</h2>
<section class="bcc-box bcc-info">
<h3>Question 1</h3>
<p><strong>The “Tab Key Navigation test” is useful for identifying a
variety of potential barriers. From those uses listed below, select all
that the Tab Key Navigation test would identify.</strong></p>
<ol type="a">
<li><span style="background-color: #ccffcc">[correct] Focus
visibility</span></li>
<li><span style="background-color: #ccffcc">[correct] Keyboard
operability</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Missing Alt
text</span></li>
<li><span style="background-color: #ccffcc">[correct] Focus
order</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Descriptive
feedback</span></li>
</ol>
<p><strong>Feedback:</strong> The Tab Key Navigation test is useful for
identifying focus visibility. You should be able to see the focus move
through the content as you press the Tab key. It is also useful for
identifying elements that are not keyboard operable (i.e., those that
are skipped over while pressing the Tab key). While following the focus,
it is possible to observe the focus order, which should move from left
to right and top to bottom.</p>
</section>
<section class="bcc-box bcc-info">
<h3>Question 2</h3>
<p><strong>Which of the following potential barriers would the “Select
All test” be useful in identifying? Select all that apply.</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[incorrect] Focus
visibility</span></li>
<li><span style="background-color: #ccffcc">[correct] Keyboard
operability</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Missing alt
text</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Focus
order</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Descriptive
feedback</span></li>
</ol>
<p><strong>Feedback:</strong> The Select All test is good for
identifying elements that are not keyboard operable, though it should be
combined with the Tab Key Navigation test to confirm that elements not
selected do not actually operate with a keyboard.</p>
</section>
<section class="bcc-box bcc-info">
<h3>Question 3</h3>
<p><strong>To examine the HTML markup associated with a potential
barrier that has been identified using the Tab Key Navigation or Select
All tests, a recommended approach would be to use:</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[incorrect] The browser’s
“View Source” function</span></li>
<li><span style="background-color: #ccffcc">[correct] The Browser’s
“Inspect Element” function</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Install and use
the “Examine Markup” browser plugin</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] The W3C Markup
Validator</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Use the WebAIM
toolbar’s view source feature</span></li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h3>Question 4</h3>
<p><strong>When reviewing video content for accessibility, which of the
following alternatives does WCAG 2.0 suggest should be provided? Select
all that apply.</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[incorrect] An alternative
slideshow for those who do not have a video player</span></li>
<li><span style="background-color: #ccffcc">[correct]
Captioning</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] A downloadable
PDF version</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] A downloadable
slideshow version</span></li>
<li><span style="background-color: #ccffcc">[correct] A
transcript</span></li>
<li><span style="background-color: #ccffcc">[correct] Audio
description</span></li>
</ol>
<p><a href="#chapter-046-self-test-4.xhtml">Back to Self-Test 4</a></p>
</section>
</div>
<div>
<span id="back-matter-003-answers.xhtml_answer-activity-5"></span>
</div>
<div class="textbox">
<h2>Activity: Using ChromeVox to Find Accessibility Features</h2>
<h2>Sample Answer</h2>
<p>This is a list of many of the accessibility features collected from
the <span style="font-weight: 400"><a
href="https://de.ryerson.ca/wa/showcase" target="_blank"
rel="noopener noreferrer">Showcase Demo Site</a> </span> homepage. There
may be others.</p>
<ul>
<li>“Skip to Main Content” becomes visible on focus, leading to an
anchor at the top of the content area and skipping past the
navigation</li>
<li>Accessibility statement (top right, under construction)</li>
<li><code>role="banner"</code> landmark is set for header area</li>
<li><code>role="navigation"</code> + <code>aria-label="showcase"</code>
announces “Showcase Navigation”</li>
<li><code>aria-live="polite"</code> on the <code>ik-menu-mobile</code>
and <code>ik-menu</code> divs announce instructions for using the side
menu: “Use tab key to enter menu, up and down arrow keys to navigate,
left and right to open or collapse submenues, space or enter to
select.”</li>
<li><code>role="menu"</code> and <code>tabindex="0"</code> announce
sidemenu as a menu and adds keyboard focus</li>
<li><code>role="menuitem"</code> is added to describe list items as menu
items in the side menu</li>
<li><code>aria-haspopup="true"</code> is used to indicate menuitems with
a submenu</li>
<li><code>aria-hidden="true"</code> is used to hide submenus when
inactive</li>
<li><code>aria-labels</code> describe menu items instead of the
<code>href</code> they contain, which are set to
<code>tabindex="-1"</code> to remove them from the tab order</li>
<li><code>aria-live="assertive"</code> starts the carousel announcing
labels while rotating, and announcing navigation instructions when focus
is received</li>
<li><code>aria-live="off"</code> stops the carousel from announcing
after focus is removed</li>
<li><code>role="presentation"</code> and <code>aria-hidden="true"</code>
are used to hide carousel dot navigation from screen readers</li>
<li><code>aria-label</code> provides text descriptions for each slide in
the carousel on the home page</li>
<li><code>tabindex="0"</code> toggles with <code>tabindex="-1"</code> to
control focus in the side menu</li>
<li><code>role="main"</code> landmark and <code>tabindex="0"</code>
announce the main content area and make it focusable</li>
<li><code>aria-hidden="true"</code> (or false) and
<code>tabindex="0"</code> show and hide tabpanels</li>
<li><code>aria-labelledby</code> uses the heading above to label the
accordion panels</li>
<li><code>role="tablist"</code> and
<code>aria-multiselectable="true"</code> are used with a definition list
(<code>&lt;dl&gt;</code>) to define the accordion with multiple sections
that can be opened simultaneously</li>
<li><code>aria-controls</code> and <code>role="tab"</code> are used with
<code>&lt;dt&gt;</code> to define as a tab, which control an associated
<code>&lt;dd&gt;</code></li>
<li><code>aria-expanded</code> is used to announce the
<code>&lt;dd&gt;</code> state as expanded or collapsed</li>
<li><code>aria-hidden="true"</code> (and false) is used when accordion
<code>tabpanels</code> are visible or hidden</li>
<li><code>tabindex="0"</code> is added to
<code>&lt;dd&gt;</code><code>tabpanels</code> to make them
focusable</li>
<li><code>role="tabpanel"</code> is added to <code>&lt;dd&gt;</code> to
define is as <code>tabpanel</code> in the accordion</li>
<li><code>role="complimentary"</code> landmark is added to the
right-side accordion</li>
<li><code>role="contentinfo"</code> landmark is added to the footer
area</li>
</ul>
<p><a href="#chapter-052-activity-chromevox.xhtml">Back to
Activity</a></p>
</div>
<div>
<span id="back-matter-003-answers.xhtml_answers-self-5"></span>
</div>
<h2>Self-Test 5</h2>
<section class="bcc-box bcc-info">
<h3>Question 1</h3>
<p><strong>According to the data from the WebAIM Screen Reader Survey,
when it comes to screen readers commonly used, which of the following
screen readers experiences the least usage?</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[incorrect] JAWS</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] NVDA</span></li>
<li><span style="background-color: #ccffcc">[correct]
ChromeVox</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
VoiceOver</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
Window-Eyes</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
Talkback</span></li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h3>Question 2</h3>
<p><strong>Based on your unit 5 readings, which screen reader makes use
of a rotor for accessing different features of web content, such as
headings, lists, tables and links?</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[incorrect] JAWS</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] NVDA</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
ChromeVox</span></li>
<li><span style="background-color: #ccffcc">[correct]
VoiceOver</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
Window-Eyes</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
Talkback</span></li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h3>Question 3</h3>
<p><strong>Which of the screen readers introduced in this unit are open
source software? Choose all that apply.</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[incorrect] JAWS</span></li>
<li><span style="background-color: #ccffcc">[correct] NVDA</span></li>
<li><span style="background-color: #ccffcc">[correct]
ChromeVox</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
VoiceOver</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
Window-Eyes</span></li>
<li><span style="background-color: #ccffcc">[correct]
Talkback</span></li>
</ol>
<p><a href="#chapter-053-self-test-5.xhtml">Back to Self-Test 5</a></p>
</section>
<div>
<span id="back-matter-003-answers.xhtml_answers-self-6"></span>
</div>
<h2>Self-Test 6</h2>
<section class="bcc-box bcc-info">
<h3>Question 1</h3>
<p><strong>When selecting user testers, which of the following
prerequisite skills or knowledge should recruits have? Choose all that
apply.</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[incorrect] Ability to read
HTML</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Knowledge of
WCAG</span></li>
<li><span style="background-color: #ccffcc">[correct] Good understanding
of web technologies</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Ability to use
multiple assistive technologies</span></li>
<li><span style="background-color: #ccffcc">[correct] Moderate to expert
skill using their own assistive technology</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Fluent English
speaker</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Touch typing
skill</span></li>
</ol>
<p><strong>Feedback:</strong> User testers should have good knowledge of
web technologies, and be able to use their assistive technology
proficiently.</p>
</section>
<section class="bcc-box bcc-info">
<h3>Question 2</h3>
<p><strong>When developing a test protocol, which of the following
features should it have? Choose all that apply.</strong></p>
<ol type="a">
<li><span style="background-color: #ccffcc">[correct] Can be completed
in one hour</span></li>
<li><span style="background-color: #ccffcc">[correct] Multiple short
tasks to complete</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Coverage of the
whole website or application being tested</span></li>
<li><span style="background-color: #ccffcc">[correct] Time between tasks
to ask questions</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Printed out on
paper for tester to read</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Provided in
electronic form so it can be read by assistive technologies</span></li>
</ol>
<p><strong>Feedback:</strong> A test protocol should be made up a series
of short tasks that can be completed in an hour or less.</p>
</section>
<section class="bcc-box bcc-info">
<h3>Question 3</h3>
<p><strong>When recording observations during a user testing session,
which of the following strategies might be used? Choose all that
apply.</strong></p>
<ol type="a">
<li><span style="background-color: #ccffcc">[correct] Anecdotal
notes</span></li>
<li><span style="background-color: #ccffcc">[correct] Video
taping</span></li>
<li><span style="background-color: #ccffcc">[correct] Audio
taping</span></li>
<li><span style="background-color: #ccffcc">[correct] Recording in a
spreadsheet</span></li>
</ol>
<p><strong>Feedback:</strong> All of these strategies might be used for
recording observations.</p>
</section>
<section class="bcc-box bcc-info">
<h3>Question 4</h3>
<p><strong>During a user testing session which of the following should
an observer not do? Choose all that apply.</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[incorrect] Ask questions
about what a tester is thinking</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Provide hints to
make a task easier</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Help a tester
complete a task if they get stuck</span></li>
<li><span style="background-color: #ccffcc">[correct] Remain
quiet</span></li>
<li><span style="background-color: #ccffcc">[correct] Answer a phone
call</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Describe to a
tester how a task is done</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Pay the tester
for their time and expenses</span></li>
</ol>
<p><strong>Feedback:</strong> An observer need not remain quiet, but
instead ask questions and probe the tester’s thoughts where appropriate.
Answering a phone call during a user testing session would be
disrespectful of the tester.</p>
<p><a href="#chapter-061-self-test-6.xhtml">Back to Self-Test 6</a></p>
</section>
<div>
<span id="back-matter-003-answers.xhtml_answer-activity-7"></span>
</div>
<section class="textbox">
<h2>Activity: Lulu’s Lollipops Informal Review</h2>
<div>
<div>
The following is an example of an informal review submitted by a
participant in the MOOC version of this book. There are many possible
solutions for this activity. Key elements of an informal review should
include:
</div>
<ul>
<li>An informal introduction</li>
<li>The suggestion of conducting a formal review</li>
<li>Not too much detail</li>
<li>About 8 to 10 potential issues listed (no more than 15)</li>
</ul>
<div>
The goal of the informal review is to sell the idea of conducting a more
thorough, formal audit.
</div>
<h2>Sample Answer</h2>
<div>
Hi Lulu,
</div>
<div>
Included please find a quick summary of the potential issues I found on
your website, Lulu’s Lollipops. At your convenience, I suggest we
arrange a time to go over these issues and talk about a possible formal
review. By going into detail with the issues and resolving them, your
website will become more accessible to your customers. Below is a list
of some of the main issues with possible solutions.
</div>
<div>
<div>
<ul>
<li>There are several images that are missing alt text, including your
logo, link buttons, and your products (solution: provide an alt
attribute, either text or [alt=””] for images that do not convey
content)</li>
<li>Form labels missing (solution: provide form labels for all form
fields by adding text to the label element)</li>
<li>Page title missing or uninformative (solution: add a brief,
descriptive page title by adding a title element to the head section of
the document)</li>
<li>Document language missing (solution: identify the document language
using &lt;html lang&gt; attribute. This also helps automatic translation
of content)</li>
<li>Website has heading structure errors (solution: provide clear and
consistent heading structure including sub-headings)</li>
<li>Suspicious link (solution: reword the link text so it describes the
destination when read out of context)</li>
<li>Redundant link (solution: combine the links into one link and remove
any redundant text or alternate text)</li>
<li>Device dependent events (solution: make critical functionality and
content accessible by both a keyboard and mouse by adding an onblur
handler instead of onmouseout handler and add an onfocus handler instead
of onmouse handler to the script)</li>
</ul>
</div>
</div>
<p>Lulu, thank you for reviewing the above information. I look forward
to meeting with you to discuss further how more users can access your
website and buy your products.</p>
<p><a
href="#chapter-071-activity-lulus-lollipops-informal-review.xhtml">Back
to Activity</a></p>
</div>
</section>
<div>
<span id="back-matter-003-answers.xhtml_answers-self-7"></span>
</div>
<h2>Self-Test: Unit 7</h2>
<section class="bcc-box bcc-info">
<h3>Question 1</h3>
<p><strong>Which of the following is not a type of audit that was
covered in this unit? Please select all that apply.</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[incorrect]
Informal</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
Template</span></li>
<li><span style="background-color: #ccffcc">[correct]
Navigation</span></li>
<li><span style="background-color: #ccffcc">[correct]
Content</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
General</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
Detailed</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
Follow-Up</span></li>
</ol>
<p><strong>Feedback:</strong> “Navigation” and “Content” reviews were
not covered in this unit.</p>
</section>
<section class="bcc-box bcc-info">
<h3>Question 2</h3>
<p><strong>What is the time limit on the validity of a Web accessibility
conformance review for a website?</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[incorrect] Two
years</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] A
year</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Six
months</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] A
month</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] A
week</span></li>
<li><span style="background-color: #ccffcc">[correct] None of the
above</span></li>
</ol>
<p><strong>Feedback:</strong> A conformance claim for a website is only
valid on the date conformance was confirmed.</p>
</section>
<section class="bcc-box bcc-info">
<h3>Question 3</h3>
<p><strong>Which of the following elements would be reviewed in a
Template Audit? Please select all that apply.</strong></p>
<ol type="a">
<li><span style="background-color: #ccffcc">[correct] Main
Navigation</span></li>
<li><span style="background-color: #ccffcc">[correct] Header</span></li>
<li><span style="background-color: #ccffcc">[correct] Side
Menu</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Main Content
Area</span></li>
<li><span style="background-color: #ccffcc">[correct] Footer</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] None of the
above</span></li>
</ol>
<p><strong>Feedback:</strong> The Main Content Area would be reviewed as
part of a General Audit.</p>
</section>
<section class="bcc-box bcc-info">
<h3>Question 4</h3>
<p><strong>Which of the following elements would be reviewed in a
General Audit, assuming a Template Audit had already been conducted?
Please select all that apply.</strong></p>
<ol type="a">
<li><span style="background-color: #ffb5b5">[incorrect] Main
Navigation</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
Header</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Side
Menu</span></li>
<li><span style="background-color: #ccffcc">[correct] Main Content
Area</span></li>
<li><span style="background-color: #ffb5b5">[incorrect]
Footer</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] None of the
above</span></li>
</ol>
<p><strong>Feedback:</strong> The other elements would be part of the
Template Audit.</p>
<p><a href="#chapter-072-self-test-7.xhtml">Back to Self-Test 7</a></p>
</section>
<div>
<span id="back-matter-003-answers.xhtml_answers-self-8"></span>
</div>
<h2>Self-Test: Unit 8</h2>
<section class="bcc-box bcc-info">
<h3>Question 1</h3>
<div>
<strong>Match the following accessibility rules and regulations with
their respective jurisdictions:</strong>
</div>
<ol type="a">
<li>Ontario = iii. AODA</li>
<li>USA = i. Section 508</li>
<li>United Kingdom = v. Disability Discrimination Act 1995</li>
<li>Italy = iv. Stanca Act</li>
<li>France = vi. RGAA</li>
<li>Australia = ii. Disability Discrimination Act 1992</li>
</ol>
</section>
<section class="bcc-box bcc-info">
<h3>Question 2</h3>
<p><strong>Which of the following are elements of the ISO/IEC 24751
AccessForAll Standards? Please select all that apply.</strong></p>
<ol type="a">
<li><span style="background-color: #ccffcc">[correct] Personal Needs and
Preferences</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Accessible Rich
Internet Applications</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Hypertext Markup
Language</span></li>
<li><span style="background-color: #ccffcc">[correct] Digital Resource
Descriptions</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Extensible
Markup Language</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] Accessibility
Evaluation and Repair</span></li>
</ol>
<p><strong>Feedback:</strong> Personal Needs and Preferences and Digital
Resource Descriptions are Part 2 and Part3 of the ISO/IEC 24751
standards. Accessible Rich Internet Applications (ARIA), Hypertext
Markup Language (HTML), Extensible Markup Language (XML) are W3C
specifications, and Accessibility Evaluation and Repair are W3C
techniques for implementing accessibility checkers and repair tools.</p>
</section>
<section class="bcc-box bcc-info">
<h3>Question 3</h3>
<p><strong>Which of the following are W3C specifications? Please select
all that apply.</strong></p>
<ol type="a">
<li><span style="background-color: #ccffcc">[correct]
WAI-ARIA</span></li>
<li><span style="background-color: #ccffcc">[correct] ATAG</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] ISO/IEC
24751</span></li>
<li><span style="background-color: #ccffcc">[correct] UAAG</span></li>
<li><span style="background-color: #ccffcc">[correct] WCAG</span></li>
<li><span style="background-color: #ffb5b5">[incorrect] RGAA</span></li>
</ol>
<p><strong>Feedback:</strong> WAI-ARIA, ATAG, UAAG, and WCAG are all W3C
specifications. ISO/IEC 24751 is an ISO standard, and RGAA are the
accessibility guidelines for France.</p>
<p><a href="#chapter-081-self-test-8.xhtml">Back to Self-Test 8</a></p>
</section>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="back-matter-004-web-accessibility-auditing-toolkit.xhtml"></span></p>
<article>
<div
id="back-matter-004-web-accessibility-auditing-toolkit.xhtml_web-accessibility-auditing-toolkit"
class="back-matter miscellaneous">
<div class="back-matter-title-wrap">
<h3 class="back-matter-number">4</h3>
<h1 class="back-matter-title">Web Accessibility Auditing Toolkit</h1>
</div>
<div class="ugc back-matter-ugc">
<div>
<!-- pb_fixme -->
<h2>Elements in Your Toolkit</h2>
<div
style="margin: 1em 0;padding: 1em;border: 1px solid #ddd;border-left: 10px solid #3c3">
<p><strong>Toolkit:</strong></p>
<ul>
<li><a href="http://www.w3.org/TR/WCAG20" target="_blank"
rel="noopener noreferrer">Web Content Accessibility Guidelines (WCAG
2.0)</a></li>
<li><a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/WCAG2_review_Canvas_lms.pdf"
target="_blank" rel="noopener noreferrer">WCAG2 Review of the Canvas Lms
[PDF]</a></li>
<li><a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/WCAG2_review_template.doc"
target="_blank" rel="noopener noreferrer">WCAG2 Review Template 
[doc]</a></li>
<li><a href="https://www.achecker.ca" target="_blank"
rel="noopener noreferrer">AChecker Web Accessibility Checker</a></li>
<li><a href="http://wave.webaim.org/extension" target="_blank"
rel="noopener noreferrer">WAVE Chrome Extension</a></li>
<li><a href="http://webaim.org/resources/contrastchecker"
target="_blank" rel="noopener noreferrer">WebAIM Color Contrast
Checker</a></li>
<li><a href="http://read-able.com" target="_blank"
rel="noopener noreferrer">Readability Testing Tool</a></li>
<li><a href="https://validator.w3.org" target="_blank"
rel="noopener noreferrer">W3C Markup Validation Service</a></li>
<li><a
href="https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn"
target="_blank" rel="noopener noreferrer">ChromeVox Screen Reader
Extension for Chrome</a></li>
<li><a href="https://www.mozilla.org/en-US/firefox/developer"
target="_blank" rel="noopener noreferrer">Firefox Developer
Edition</a></li>
<li><a href="https://amara.org" target="_blank"
rel="noopener noreferrer">Amara Caption Editor</a></li>
<li><a href="http://getfireshot.com" target="_blank"
rel="noopener noreferrer">FireShot Screen Capture Add-On</a></li>
<li><a href="http://www.w3.org/TR/wai-aria" target="_blank"
rel="noopener noreferrer">Accessible Rich Internet Applications
(WAI-ARIA 1.0)</a></li>
<li><a href="http://www.w3.org/TR/wai-aria-practices" target="_blank"
rel="noopener noreferrer">WAI-ARIA Authoring Practices</a></li>
<li><a href="https://de.ryerson.ca/wa/aria" target="_blank"
rel="noopener noreferrer">WAI-ARIA Examples</a></li>
<li><a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/UserScreeningQuestions.docx"
target="_blank" rel="noopener noreferrer">User Testing Screening
Questions [docx]</a></li>
<li><a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/ObservationNotesTemplate.docx"
target="_blank" rel="noopener noreferrer">Observation Notes Template
[docx]</a></li>
<li><a
href="https://pressbooks.library.ryerson.ca/pwaa/wp-content/uploads/sites/30/2018/01/Toolkit.pdf"
target="_blank" rel="noopener noreferrer">Web Accessibility Auditing
Toolkit Download [PDF]</a></li>
</ul>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
<p><span
id="back-matter-005-iframe-embedding-content-from-this-resource.xhtml"></span></p>
<article>
<div
id="back-matter-005-iframe-embedding-content-from-this-resource.xhtml_iframe-embedding-content-from-this-resource"
class="back-matter miscellaneous">
<div class="back-matter-title-wrap">
<h3 class="back-matter-number">5</h3>
<h1 class="back-matter-title">Iframe Embedding Content from this
Resource</h1>
</div>
<div class="ugc back-matter-ugc">
<div>
<!-- pb_fixme -->
<p>The pages of this open education resource (OER) can be embedded
directly into existing web pages using a standard iframe, or using a
tool like the H5P iframe embedder if available. Once embedded, the
navigation elements associated with Pressbooks, where the original
version resides, and the title of the page are removed to provide a
seamless integration.</p>
<p>The CSS associated with the iframe should set the width to 100%, and
the height set manually for each page to remove the typical scrollbar
that appears with an iframe.</p>
<p>The following example markup can be adapted. Or, in the case below,
the content recap is embedded using the H5P iframe embedder:<br />
<br />
<code>&lt;iframe src="https://pressbooks.library.ryerson.ca/pwaa/back-matter/book-recap/" style="border:none; width:100%;height:2800px;&gt;&lt;/iframe&gt;</code><br />
</p>
<div class="textbox interactive-content">
<span class="interactive-content__icon"></span>
<p>An interactive or media element has been excluded from this version
of the text. You can view it online here:<br />
<a
href="https://pressbooks.library.ryerson.ca/pwaa/?p=2427#pb-interactive-content"
title="iFramed book page example">https://pressbooks.library.ryerson.ca/pwaa/?p=2427</a></p>
</div>
<!-- pb_fixme -->
</div>
</div>
<div>
<!-- pb_fixme --> <!-- pb_fixme -->
</div>
</div>
</article>
</body>
</html>
